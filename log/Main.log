=== Compilation order ===
B-1.0.1
B-1.0.0
A-1.0.1
A-1.0.0
Main-Root

===================================
=== Start compiling module B-1.0.1
===================================

=== AST (Syntax.Absyn) ===
module B where

y = 2
f x = x + 2

h x = x * 1




=== Desugared AST (Syntax.Desugared) ===
module B where where
y = 2

f = (\x.((+ x) 2))

h = (\x.((* x) 1))


=== Normalized AST (Syntax.Desugared) ===
module B where where
y = 2

f = (\x.((+ x) 2))

h = (\x.((* x) 1))


=== AST (Syntax.VL) ===
module B where where
y = [2]

f = [(\[x].((+ [x]) [2]))]

h = [(\[x].((* [x]) [1]))]


=== AST (Syntax.VL), after duplicating external variables ===
module B where where
y = [2]

f = [(\[x].((+ [x]) [2]))]

h = [(\[x].((* [x]) [1]))]

[DEBUG] ct     : 
[DEBUG] ct'    : 
[DEBUG] ctdiff : 
[DEBUG] ctstart: 

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : {}
[DEBUG] Imported UEnv      : {}
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : {}
[DEBUG] Duplicated Imported UEnv        : {}
[DEBUG] Duplicated Imported Constraints : ⊤

[DEBUG] add duplicated constraints                 : 
⊤
[DEBUG] add duplicated external variable resources : 
{}

[DEBUG] Initial Counter     : 0

=== Type Inference (Syntax.VL) ===
y : Int@[a0]
|(TypeInf) {} |- 2 => (Int; (); ⊤)
(TypeInf) {} |- [2] => (Int@[a0]; (); ⊤)
f : (Int@[a3] -> Int)@[a11]
|||(Kinding) |- a3 : Label
||||(Kinding) |- a4 : Type
||||(Kinding) |- a3 : Label
|||(PatSynt) a3 |- x ▷ (x:[a4]_(a3); ())
|||(TyUnify)  |- a2 ~ a4@[a3] ▷ (a2 ↦ a4@[a3])
||(PatSynt) - |- [x] ▷ (x:[a4]_(a3); (a2 ↦ a4@[a3]))
||||(TypeInf) x:[a4]_(a3) |- + => ((Int@[a5] -> (Int@[a6] -> Int)); (); ⊤)
||||||(Kinding) |- a3 : Label
|||||(TypeInf) x:[a4]_(a3) |- x => (a4; (); ⊤)
||||(TypeInf) x:[a4]_(a3) |- [x] => (a4@[a7]; (); (a7 ≤ a3))
||||||(TyUnify)  |- a4 ~ Int ▷ (a4 ↦ Int)
||||||(TyUnify)  |- a7 ~ a5 ▷ (a7 ↦ a5)
|||||(TyUnify)  |- a4@[a7] ~ Int@[a5] ▷ (a4 ↦ Int, a7 ↦ a5)
|||||(TyUnify)  |- (Int@[a6] -> Int) ~ a8 ▷ (a8 ↦ (Int@[a6] -> Int))
||||(TyUnify)  |- (Int@[a5] -> (Int@[a6] -> Int)) ~ (a4@[a7] -> a8) ▷ (a4 ↦ Int, a7 ↦ a5, a8 ↦ (Int@[a6] -> Int))
|||(TypeInf) x:[a4]_(a3) |- (+ [x]) => ((Int@[a6] -> Int); (a4 ↦ Int, a7 ↦ a5, a8 ↦ (Int@[a6] -> Int)); (a7 ≤ a3))
||||(TypeInf) {} |- 2 => (Int; (); ⊤)
|||(TypeInf) x:[a4]_(a3) |- [2] => (Int@[a9]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a9 ~ a6 ▷ (a9 ↦ a6)
||||(TyUnify)  |- Int@[a9] ~ Int@[a6] ▷ (a9 ↦ a6)
||||(TyUnify)  |- Int ~ a10 ▷ (a10 ↦ Int)
|||(TyUnify)  |- (Int@[a6] -> Int) ~ (Int@[a9] -> a10) ▷ (a10 ↦ Int, a9 ↦ a6)
||(TypeInf) x:[a4]_(a3) |- ((+ [x]) [2]) => (Int; (a8 ↦ (Int@[a6] -> Int), a10 ↦ Int, a4 ↦ Int, a7 ↦ a5, a9 ↦ a6); (a7 ≤ a3))
|(TypeInf) {} |- (\[x].((+ [x]) [2])) => ((Int@[a3] -> Int); (a8 ↦ (Int@[a6] -> Int), a10 ↦ Int, a4 ↦ Int, a2 ↦ Int@[a3], a7 ↦ a5, a9 ↦ a6); (a7 ≤ a3))
(TypeInf) y:[Int@[a0]]_(a1) |- [(\[x].((+ [x]) [2]))] => ((Int@[a3] -> Int)@[a11]; (a8 ↦ (Int@[a6] -> Int), a10 ↦ Int, a4 ↦ Int, a2 ↦ Int@[a3], a7 ↦ a5, a9 ↦ a6); (a7 ≤ a3))
h : (Int@[a15] -> Int)@[a23]
|||(Kinding) |- a15 : Label
||||(Kinding) |- a16 : Type
||||(Kinding) |- a15 : Label
|||(PatSynt) a15 |- x ▷ (x:[a16]_(a15); ())
|||(TyUnify)  |- a14 ~ a16@[a15] ▷ (a14 ↦ a16@[a15])
||(PatSynt) - |- [x] ▷ (x:[a16]_(a15); (a14 ↦ a16@[a15]))
||||(TypeInf) x:[a16]_(a15) |- * => ((Int@[a17] -> (Int@[a18] -> Int)); (); ⊤)
||||||(Kinding) |- a15 : Label
|||||(TypeInf) x:[a16]_(a15) |- x => (a16; (); ⊤)
||||(TypeInf) x:[a16]_(a15) |- [x] => (a16@[a19]; (); (a19 ≤ a15))
||||||(TyUnify)  |- a16 ~ Int ▷ (a16 ↦ Int)
||||||(TyUnify)  |- a19 ~ a17 ▷ (a19 ↦ a17)
|||||(TyUnify)  |- a16@[a19] ~ Int@[a17] ▷ (a16 ↦ Int, a19 ↦ a17)
|||||(TyUnify)  |- (Int@[a18] -> Int) ~ a20 ▷ (a20 ↦ (Int@[a18] -> Int))
||||(TyUnify)  |- (Int@[a17] -> (Int@[a18] -> Int)) ~ (a16@[a19] -> a20) ▷ (a16 ↦ Int, a19 ↦ a17, a20 ↦ (Int@[a18] -> Int))
|||(TypeInf) x:[a16]_(a15) |- (* [x]) => ((Int@[a18] -> Int); (a16 ↦ Int, a19 ↦ a17, a20 ↦ (Int@[a18] -> Int)); (a19 ≤ a15))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a16]_(a15) |- [1] => (Int@[a21]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a21 ~ a18 ▷ (a21 ↦ a18)
||||(TyUnify)  |- Int@[a21] ~ Int@[a18] ▷ (a21 ↦ a18)
||||(TyUnify)  |- Int ~ a22 ▷ (a22 ↦ Int)
|||(TyUnify)  |- (Int@[a18] -> Int) ~ (Int@[a21] -> a22) ▷ (a21 ↦ a18, a22 ↦ Int)
||(TypeInf) x:[a16]_(a15) |- ((* [x]) [1]) => (Int; (a20 ↦ (Int@[a18] -> Int), a16 ↦ Int, a19 ↦ a17, a21 ↦ a18, a22 ↦ Int); (a19 ≤ a15))
|(TypeInf) {} |- (\[x].((* [x]) [1])) => ((Int@[a15] -> Int); (a20 ↦ (Int@[a18] -> Int), a16 ↦ Int, a14 ↦ Int@[a15], a19 ↦ a17, a21 ↦ a18, a22 ↦ Int); (a19 ≤ a15))
(TypeInf) f:[(Int@[a3] -> Int)@[a11]]_(a12), y:[Int@[a0]]_(a13) |- [(\[x].((* [x]) [1]))] => ((Int@[a15] -> Int)@[a23]; (a20 ↦ (Int@[a18] -> Int), a16 ↦ Int, a14 ↦ Int@[a15], a19 ↦ a17, a21 ↦ a18, a22 ↦ Int); (a19 ≤ a15))

=== Inferred Types (Syntax.VL) ===
y : Int@[a0]
f : (Int@[a3] -> Int)@[a11]
h : (Int@[a15] -> Int)@[a23]

[DEBUG] Add global env : y : Int@[a0]
f : (Int@[a3] -> Int)@[a11]
h : (Int@[a15] -> Int)@[a23]
[DEBUG] Add global constraints : (a5 ≤ a3) and (a17 ≤ a15)
[DEBUG] Counter: 24
[DEBUG] globalConstraints:
(a5 ≤ a3) and (a17 ≤ a15)

[DEBUG] bundledConsSchemes:


[DEBUG] List of modules not yet compiled:
B-1.0.0
A-1.0.1
A-1.0.0
Main-Root


===================================
=== Start compiling module B-1.0.0
===================================

=== AST (Syntax.Absyn) ===
module B where

y = 1
f x = x + 1

g x = x + 1




=== Desugared AST (Syntax.Desugared) ===
module B where where
y = 1

f = (\x.((+ x) 1))

g = (\x.((+ x) 1))


=== Normalized AST (Syntax.Desugared) ===
module B where where
y = 1

f = (\x.((+ x) 1))

g = (\x.((+ x) 1))


=== AST (Syntax.VL) ===
module B where where
y = [1]

f = [(\[x].((+ [x]) [1]))]

g = [(\[x].((+ [x]) [1]))]


=== AST (Syntax.VL), after duplicating external variables ===
module B where where
y = [1]

f = [(\[x].((+ [x]) [1]))]

g = [(\[x].((+ [x]) [1]))]

[DEBUG] ct     : 
[DEBUG] ct'    : 
[DEBUG] ctdiff : 
[DEBUG] ctstart: 

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : {}
[DEBUG] Imported UEnv      : {}
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : {}
[DEBUG] Duplicated Imported UEnv        : {}
[DEBUG] Duplicated Imported Constraints : ⊤

[DEBUG] add duplicated constraints                 : 
⊤
[DEBUG] add duplicated external variable resources : 
{}

[DEBUG] Initial Counter     : 24

=== Type Inference (Syntax.VL) ===
y : Int@[a24]
|(TypeInf) {} |- 1 => (Int; (); ⊤)
(TypeInf) {} |- [1] => (Int@[a24]; (); ⊤)
f : (Int@[a27] -> Int)@[a35]
|||(Kinding) |- a27 : Label
||||(Kinding) |- a28 : Type
||||(Kinding) |- a27 : Label
|||(PatSynt) a27 |- x ▷ (x:[a28]_(a27); ())
|||(TyUnify)  |- a26 ~ a28@[a27] ▷ (a26 ↦ a28@[a27])
||(PatSynt) - |- [x] ▷ (x:[a28]_(a27); (a26 ↦ a28@[a27]))
||||(TypeInf) x:[a28]_(a27) |- + => ((Int@[a29] -> (Int@[a30] -> Int)); (); ⊤)
||||||(Kinding) |- a27 : Label
|||||(TypeInf) x:[a28]_(a27) |- x => (a28; (); ⊤)
||||(TypeInf) x:[a28]_(a27) |- [x] => (a28@[a31]; (); (a31 ≤ a27))
||||||(TyUnify)  |- a28 ~ Int ▷ (a28 ↦ Int)
||||||(TyUnify)  |- a31 ~ a29 ▷ (a31 ↦ a29)
|||||(TyUnify)  |- a28@[a31] ~ Int@[a29] ▷ (a28 ↦ Int, a31 ↦ a29)
|||||(TyUnify)  |- (Int@[a30] -> Int) ~ a32 ▷ (a32 ↦ (Int@[a30] -> Int))
||||(TyUnify)  |- (Int@[a29] -> (Int@[a30] -> Int)) ~ (a28@[a31] -> a32) ▷ (a28 ↦ Int, a31 ↦ a29, a32 ↦ (Int@[a30] -> Int))
|||(TypeInf) x:[a28]_(a27) |- (+ [x]) => ((Int@[a30] -> Int); (a28 ↦ Int, a31 ↦ a29, a32 ↦ (Int@[a30] -> Int)); (a31 ≤ a27))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a28]_(a27) |- [1] => (Int@[a33]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a33 ~ a30 ▷ (a33 ↦ a30)
||||(TyUnify)  |- Int@[a33] ~ Int@[a30] ▷ (a33 ↦ a30)
||||(TyUnify)  |- Int ~ a34 ▷ (a34 ↦ Int)
|||(TyUnify)  |- (Int@[a30] -> Int) ~ (Int@[a33] -> a34) ▷ (a33 ↦ a30, a34 ↦ Int)
||(TypeInf) x:[a28]_(a27) |- ((+ [x]) [1]) => (Int; (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))
|(TypeInf) {} |- (\[x].((+ [x]) [1])) => ((Int@[a27] -> Int); (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a26 ↦ Int@[a27], a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))
(TypeInf) y:[Int@[a24]]_(a25) |- [(\[x].((+ [x]) [1]))] => ((Int@[a27] -> Int)@[a35]; (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a26 ↦ Int@[a27], a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))
g : (Int@[a39] -> Int)@[a47]
|||(Kinding) |- a39 : Label
||||(Kinding) |- a40 : Type
||||(Kinding) |- a39 : Label
|||(PatSynt) a39 |- x ▷ (x:[a40]_(a39); ())
|||(TyUnify)  |- a38 ~ a40@[a39] ▷ (a38 ↦ a40@[a39])
||(PatSynt) - |- [x] ▷ (x:[a40]_(a39); (a38 ↦ a40@[a39]))
||||(TypeInf) x:[a40]_(a39) |- + => ((Int@[a41] -> (Int@[a42] -> Int)); (); ⊤)
||||||(Kinding) |- a39 : Label
|||||(TypeInf) x:[a40]_(a39) |- x => (a40; (); ⊤)
||||(TypeInf) x:[a40]_(a39) |- [x] => (a40@[a43]; (); (a43 ≤ a39))
||||||(TyUnify)  |- a40 ~ Int ▷ (a40 ↦ Int)
||||||(TyUnify)  |- a43 ~ a41 ▷ (a43 ↦ a41)
|||||(TyUnify)  |- a40@[a43] ~ Int@[a41] ▷ (a40 ↦ Int, a43 ↦ a41)
|||||(TyUnify)  |- (Int@[a42] -> Int) ~ a44 ▷ (a44 ↦ (Int@[a42] -> Int))
||||(TyUnify)  |- (Int@[a41] -> (Int@[a42] -> Int)) ~ (a40@[a43] -> a44) ▷ (a40 ↦ Int, a43 ↦ a41, a44 ↦ (Int@[a42] -> Int))
|||(TypeInf) x:[a40]_(a39) |- (+ [x]) => ((Int@[a42] -> Int); (a40 ↦ Int, a43 ↦ a41, a44 ↦ (Int@[a42] -> Int)); (a43 ≤ a39))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a40]_(a39) |- [1] => (Int@[a45]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a45 ~ a42 ▷ (a45 ↦ a42)
||||(TyUnify)  |- Int@[a45] ~ Int@[a42] ▷ (a45 ↦ a42)
||||(TyUnify)  |- Int ~ a46 ▷ (a46 ↦ Int)
|||(TyUnify)  |- (Int@[a42] -> Int) ~ (Int@[a45] -> a46) ▷ (a45 ↦ a42, a46 ↦ Int)
||(TypeInf) x:[a40]_(a39) |- ((+ [x]) [1]) => (Int; (a44 ↦ (Int@[a42] -> Int), a40 ↦ Int, a43 ↦ a41, a45 ↦ a42, a46 ↦ Int); (a43 ≤ a39))
|(TypeInf) {} |- (\[x].((+ [x]) [1])) => ((Int@[a39] -> Int); (a44 ↦ (Int@[a42] -> Int), a40 ↦ Int, a38 ↦ Int@[a39], a43 ↦ a41, a45 ↦ a42, a46 ↦ Int); (a43 ≤ a39))
(TypeInf) f:[(Int@[a27] -> Int)@[a35]]_(a36), y:[Int@[a24]]_(a37) |- [(\[x].((+ [x]) [1]))] => ((Int@[a39] -> Int)@[a47]; (a44 ↦ (Int@[a42] -> Int), a40 ↦ Int, a38 ↦ Int@[a39], a43 ↦ a41, a45 ↦ a42, a46 ↦ Int); (a43 ≤ a39))

=== Inferred Types (Syntax.VL) ===
y : Int@[a24]
f : (Int@[a27] -> Int)@[a35]
g : (Int@[a39] -> Int)@[a47]

[DEBUG] Add global env : y : Int@[a24]
f : (Int@[a27] -> Int)@[a35]
g : (Int@[a39] -> Int)@[a47]
[DEBUG] Add global constraints : (a29 ≤ a27) and (a41 ≤ a39)
[DEBUG] Counter: 48

============================================
=== Bundling top-level symbols of module B
============================================
[DEBUG] Add bundled tenv        : f:[(Int@[a49] -> Int)]_(a48), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52), y:[Int]_(a54)
[DEBUG] Add bundled uenv        : a48:Label, a49:Label, a50:Label, a51:Label, a52:Label, a53:Label, a54:Label
[DEBUG] Add bundled/global constraints : (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}]) and (a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}]) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}])))
[DEBUG] Add bundled constraints schemes : (f,(((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}])))), (g,(a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}])), (h,(a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}])), (y,(((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))))
[DEBUG] Counter     : 55
[DEBUG] globalConstraints:
(((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}]) and (a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}]) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a29 ≤ a27) and (a41 ≤ a39) and (a5 ≤ a3) and (a17 ≤ a15)

[DEBUG] bundledConsSchemes:
B
(f,(((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}])))), (g,(a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}])), (h,(a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}])), (y,(((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
A-1.0.1
A-1.0.0
Main-Root


===================================
=== Start compiling module A-1.0.1
===================================

=== AST (Syntax.Absyn) ===
module A where

import B

a = f (f y)


=== Desugared AST (Syntax.Desugared) ===
module A where where
a = (f (f y))


=== Normalized AST (Syntax.Desugared) ===
module A where where
a = (f (f y))


=== AST (Syntax.VL) ===
module A where where
a = [(f [(f [y])])]


=== AST (Syntax.VL), after duplicating external variables ===
module A where where
a = [(__f_0 [(__f_1 [__y_0])])]

[DEBUG] ct     : 
[DEBUG] ct'    : f->2, y->1
[DEBUG] ctdiff : f->2, y->1
[DEBUG] ctstart: f->0, y->0

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : f:[(Int@[a49] -> Int)]_(a48), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52), y:[Int]_(a54)
[DEBUG] Imported UEnv      : a48:Label, a49:Label, a50:Label, a51:Label, a52:Label, a53:Label, a54:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __f_0:[(Int@[a49_0] -> Int)]_(a48_0), __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52)
[DEBUG] Duplicated Imported UEnv        : a48_0:Label, a48_1:Label, a49_0:Label, a49_1:Label, a50:Label, a51:Label, a52:Label, a53:Label, a54_0:Label
[DEBUG] Duplicated Imported Constraints : (((a48_0 ≤ a35) and (a49_0 ≤ a27) and (a48_0 ≤ [{B:[1.0.0]}])) or ((a48_0 ≤ a11) and (a49_0 ≤ a3) and (a48_0 ≤ [{B:[1.0.1]}]))) and (((a48_1 ≤ a35) and (a49_1 ≤ a27) and (a48_1 ≤ [{B:[1.0.0]}])) or ((a48_1 ≤ a11) and (a49_1 ≤ a3) and (a48_1 ≤ [{B:[1.0.1]}]))) and (((a54_0 ≤ a24) and (a54_0 ≤ [{B:[1.0.0]}])) or ((a54_0 ≤ a0) and (a54_0 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(((a48_0 ≤ a35) and (a49_0 ≤ a27) and (a48_0 ≤ [{B:[1.0.0]}])) or ((a48_0 ≤ a11) and (a49_0 ≤ a3) and (a48_0 ≤ [{B:[1.0.1]}]))) and (((a48_1 ≤ a35) and (a49_1 ≤ a27) and (a48_1 ≤ [{B:[1.0.0]}])) or ((a48_1 ≤ a11) and (a49_1 ≤ a3) and (a48_1 ≤ [{B:[1.0.1]}]))) and (((a54_0 ≤ a24) and (a54_0 ≤ [{B:[1.0.0]}])) or ((a54_0 ≤ a0) and (a54_0 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__f_0 -> f
a48_0,
__f_1 -> f
a48_1,
__y_0 -> y
a54_0

[DEBUG] Initial Counter     : 55

=== Type Inference (Syntax.VL) ===
a : Int@[a59]
|||(Kinding) |- a48_0 : Label
||(TypeInf) __f_0:[(Int@[a49_0] -> Int)]_(a48_0), __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0) |- __f_0 => ((Int@[a49_0] -> Int); (); ⊤)
|||||(Kinding) |- a48_1 : Label
||||(TypeInf) __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0) |- __f_1 => ((Int@[a49_1] -> Int); (); ⊤)
||||||(Kinding) |- a54_0 : Label
|||||(TypeInf) __y_0:[Int]_(a54_0) |- __y_0 => (Int; (); ⊤)
||||(TypeInf) __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0) |- [__y_0] => (Int@[a55]; (); (a55 ≤ a54_0))
||||||(TyUnify)  |- Int ~ Int ▷ ()
||||||(TyUnify)  |- a55 ~ a49_1 ▷ (a55 ↦ a49_1)
|||||(TyUnify)  |- Int@[a55] ~ Int@[a49_1] ▷ (a55 ↦ a49_1)
|||||(TyUnify)  |- Int ~ a56 ▷ (a56 ↦ Int)
||||(TyUnify)  |- (Int@[a49_1] -> Int) ~ (Int@[a55] -> a56) ▷ (a55 ↦ a49_1, a56 ↦ Int)
|||(TypeInf) __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0) |- (__f_1 [__y_0]) => (Int; (a55 ↦ a49_1, a56 ↦ Int); (a55 ≤ a54_0))
||(TypeInf) __f_0:[(Int@[a49_0] -> Int)]_(a48_0), __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0) |- [(__f_1 [__y_0])] => (Int@[a57]; (a55 ↦ a49_1, a56 ↦ Int); (a55 ≤ a54_0) and (a57 ≤ a54_0) and (a57 ≤ a48_1))
||||(TyUnify)  |- Int ~ Int ▷ ()
||||(TyUnify)  |- a57 ~ a49_0 ▷ (a57 ↦ a49_0)
|||(TyUnify)  |- Int@[a57] ~ Int@[a49_0] ▷ (a57 ↦ a49_0)
|||(TyUnify)  |- Int ~ a58 ▷ (a58 ↦ Int)
||(TyUnify)  |- (Int@[a49_0] -> Int) ~ (Int@[a57] -> a58) ▷ (a57 ↦ a49_0, a58 ↦ Int)
|(TypeInf) __f_0:[(Int@[a49_0] -> Int)]_(a48_0), __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0) |- (__f_0 [(__f_1 [__y_0])]) => (Int; (a56 ↦ Int, a55 ↦ a49_1, a57 ↦ a49_0, a58 ↦ Int); (a55 ≤ a54_0) and (a57 ≤ a54_0) and (a57 ≤ a48_1))
(TypeInf) __f_0:[(Int@[a49_0] -> Int)]_(a48_0), __f_1:[(Int@[a49_1] -> Int)]_(a48_1), __y_0:[Int]_(a54_0), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52) |- [(__f_0 [(__f_1 [__y_0])])] => (Int@[a59]; (a56 ↦ Int, a55 ↦ a49_1, a57 ↦ a49_0, a58 ↦ Int); (a55 ≤ a54_0) and (a57 ≤ a54_0) and (a57 ≤ a48_1) and (a59 ≤ a54_0) and (a59 ≤ a48_1) and (a59 ≤ a48_0))

=== Inferred Types (Syntax.VL) ===
a : Int@[a59]

[DEBUG] Add global env : a : Int@[a59]
[DEBUG] Add global constraints : (a49_1 ≤ a54_0) and (a49_0 ≤ a54_0) and (a49_0 ≤ a48_1) and (a59 ≤ a54_0) and (a59 ≤ a48_1) and (a59 ≤ a48_0)
[DEBUG] Counter: 60
[DEBUG] globalConstraints:
(a49_1 ≤ a54_0) and (a49_0 ≤ a54_0) and (a49_0 ≤ a48_1) and (a59 ≤ a54_0) and (a59 ≤ a48_1) and (a59 ≤ a48_0) and (((a48_0 ≤ a35) and (a49_0 ≤ a27) and (a48_0 ≤ [{B:[1.0.0]}])) or ((a48_0 ≤ a11) and (a49_0 ≤ a3) and (a48_0 ≤ [{B:[1.0.1]}]))) and (((a48_1 ≤ a35) and (a49_1 ≤ a27) and (a48_1 ≤ [{B:[1.0.0]}])) or ((a48_1 ≤ a11) and (a49_1 ≤ a3) and (a48_1 ≤ [{B:[1.0.1]}]))) and (((a54_0 ≤ a24) and (a54_0 ≤ [{B:[1.0.0]}])) or ((a54_0 ≤ a0) and (a54_0 ≤ [{B:[1.0.1]}]))) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}]) and (a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}]) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a29 ≤ a27) and (a41 ≤ a39) and (a5 ≤ a3) and (a17 ≤ a15)

[DEBUG] bundledConsSchemes:
B
(f,(((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}])))), (g,(a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}])), (h,(a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}])), (y,(((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
A-1.0.0
Main-Root


===================================
=== Start compiling module A-1.0.0
===================================

=== AST (Syntax.Absyn) ===
module A where

import B

a = f y


=== Desugared AST (Syntax.Desugared) ===
module A where where
a = (f y)


=== Normalized AST (Syntax.Desugared) ===
module A where where
a = (f y)


=== AST (Syntax.VL) ===
module A where where
a = [(f [y])]


=== AST (Syntax.VL), after duplicating external variables ===
module A where where
a = [(__f_2 [__y_1])]

[DEBUG] ct     : f->2, y->1
[DEBUG] ct'    : f->3, y->2
[DEBUG] ctdiff : f->1, y->1
[DEBUG] ctstart: f->2, y->1

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : f:[(Int@[a49] -> Int)]_(a48), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52), y:[Int]_(a54)
[DEBUG] Imported UEnv      : a48:Label, a49:Label, a50:Label, a51:Label, a52:Label, a53:Label, a54:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __f_2:[(Int@[a49_2] -> Int)]_(a48_2), __y_1:[Int]_(a54_1), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52)
[DEBUG] Duplicated Imported UEnv        : a48_2:Label, a49_2:Label, a50:Label, a51:Label, a52:Label, a53:Label, a54_1:Label
[DEBUG] Duplicated Imported Constraints : (((a48_2 ≤ a35) and (a49_2 ≤ a27) and (a48_2 ≤ [{B:[1.0.0]}])) or ((a48_2 ≤ a11) and (a49_2 ≤ a3) and (a48_2 ≤ [{B:[1.0.1]}]))) and (((a54_1 ≤ a24) and (a54_1 ≤ [{B:[1.0.0]}])) or ((a54_1 ≤ a0) and (a54_1 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(((a48_2 ≤ a35) and (a49_2 ≤ a27) and (a48_2 ≤ [{B:[1.0.0]}])) or ((a48_2 ≤ a11) and (a49_2 ≤ a3) and (a48_2 ≤ [{B:[1.0.1]}]))) and (((a54_1 ≤ a24) and (a54_1 ≤ [{B:[1.0.0]}])) or ((a54_1 ≤ a0) and (a54_1 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__f_2 -> f
a48_2,
__y_1 -> y
a54_1

[DEBUG] Initial Counter     : 60

=== Type Inference (Syntax.VL) ===
a : Int@[a62]
|||(Kinding) |- a48_2 : Label
||(TypeInf) __f_2:[(Int@[a49_2] -> Int)]_(a48_2), __y_1:[Int]_(a54_1) |- __f_2 => ((Int@[a49_2] -> Int); (); ⊤)
||||(Kinding) |- a54_1 : Label
|||(TypeInf) __y_1:[Int]_(a54_1) |- __y_1 => (Int; (); ⊤)
||(TypeInf) __f_2:[(Int@[a49_2] -> Int)]_(a48_2), __y_1:[Int]_(a54_1) |- [__y_1] => (Int@[a60]; (); (a60 ≤ a54_1))
||||(TyUnify)  |- Int ~ Int ▷ ()
||||(TyUnify)  |- a60 ~ a49_2 ▷ (a60 ↦ a49_2)
|||(TyUnify)  |- Int@[a60] ~ Int@[a49_2] ▷ (a60 ↦ a49_2)
|||(TyUnify)  |- Int ~ a61 ▷ (a61 ↦ Int)
||(TyUnify)  |- (Int@[a49_2] -> Int) ~ (Int@[a60] -> a61) ▷ (a60 ↦ a49_2, a61 ↦ Int)
|(TypeInf) __f_2:[(Int@[a49_2] -> Int)]_(a48_2), __y_1:[Int]_(a54_1) |- (__f_2 [__y_1]) => (Int; (a60 ↦ a49_2, a61 ↦ Int); (a60 ≤ a54_1))
(TypeInf) __f_2:[(Int@[a49_2] -> Int)]_(a48_2), __y_1:[Int]_(a54_1), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52) |- [(__f_2 [__y_1])] => (Int@[a62]; (a60 ↦ a49_2, a61 ↦ Int); (a60 ≤ a54_1) and (a62 ≤ a54_1) and (a62 ≤ a48_2))

=== Inferred Types (Syntax.VL) ===
a : Int@[a62]

[DEBUG] Add global env : a : Int@[a62]
[DEBUG] Add global constraints : (a49_2 ≤ a54_1) and (a62 ≤ a54_1) and (a62 ≤ a48_2)
[DEBUG] Counter: 63

============================================
=== Bundling top-level symbols of module A
============================================
[DEBUG] Add bundled tenv        : a:[Int]_(a63)
[DEBUG] Add bundled uenv        : a63:Label
[DEBUG] Add bundled/global constraints : (((a63 ≤ a62) and (a63 ≤ [{A:[1.0.0]}])) or ((a63 ≤ a59) and (a63 ≤ [{A:[1.0.1]}])))
[DEBUG] Add bundled constraints schemes : (a,(((a63 ≤ a62) and (a63 ≤ [{A:[1.0.0]}])) or ((a63 ≤ a59) and (a63 ≤ [{A:[1.0.1]}]))))
[DEBUG] Counter     : 64
[DEBUG] globalConstraints:
(((a63 ≤ a62) and (a63 ≤ [{A:[1.0.0]}])) or ((a63 ≤ a59) and (a63 ≤ [{A:[1.0.1]}]))) and (a49_2 ≤ a54_1) and (a62 ≤ a54_1) and (a62 ≤ a48_2) and (((a48_2 ≤ a35) and (a49_2 ≤ a27) and (a48_2 ≤ [{B:[1.0.0]}])) or ((a48_2 ≤ a11) and (a49_2 ≤ a3) and (a48_2 ≤ [{B:[1.0.1]}]))) and (((a54_1 ≤ a24) and (a54_1 ≤ [{B:[1.0.0]}])) or ((a54_1 ≤ a0) and (a54_1 ≤ [{B:[1.0.1]}]))) and (a49_1 ≤ a54_0) and (a49_0 ≤ a54_0) and (a49_0 ≤ a48_1) and (a59 ≤ a54_0) and (a59 ≤ a48_1) and (a59 ≤ a48_0) and (((a48_0 ≤ a35) and (a49_0 ≤ a27) and (a48_0 ≤ [{B:[1.0.0]}])) or ((a48_0 ≤ a11) and (a49_0 ≤ a3) and (a48_0 ≤ [{B:[1.0.1]}]))) and (((a48_1 ≤ a35) and (a49_1 ≤ a27) and (a48_1 ≤ [{B:[1.0.0]}])) or ((a48_1 ≤ a11) and (a49_1 ≤ a3) and (a48_1 ≤ [{B:[1.0.1]}]))) and (((a54_0 ≤ a24) and (a54_0 ≤ [{B:[1.0.0]}])) or ((a54_0 ≤ a0) and (a54_0 ≤ [{B:[1.0.1]}]))) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}]) and (a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}]) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a29 ≤ a27) and (a41 ≤ a39) and (a5 ≤ a3) and (a17 ≤ a15)

[DEBUG] bundledConsSchemes:
A
(a,(((a63 ≤ a62) and (a63 ≤ [{A:[1.0.0]}])) or ((a63 ≤ a59) and (a63 ≤ [{A:[1.0.1]}])))), B
(f,(((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}])))), (g,(a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}])), (h,(a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}])), (y,(((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
Main-Root


===================================
=== Start compiling module Main-Root
===================================

=== AST (Syntax.Absyn) ===
module Main where

import A
import B




















main = let xx = (unversion (g (version {A=1.0.1} of a)))
           yy = (unversion (h (version {A=1.0.0} of a)))
       in xx + yy


=== Desugared AST (Syntax.Desugared) ===
module Main where where
main = ((\xx.((\yy.((+ xx) yy)) (unversion (h (version {A:[1.0.0]} of a))))) (unversion (g (version {A:[1.0.1]} of a))))


=== Normalized AST (Syntax.Desugared) ===
module Main where where
main = ((\xx.((\yy.((+ xx) yy)) (unversion (h (version {A:[1.0.0]} of a))))) (unversion (g (version {A:[1.0.1]} of a))))


=== AST (Syntax.VL) ===
module Main where where
main = ((\[xx].((\[yy].[((+ [xx]) [yy])]) [(unversion [(h [(version {A:[1.0.0]} of a)])])])) [(unversion [(g [(version {A:[1.0.1]} of a)])])])


=== AST (Syntax.VL), after duplicating external variables ===
module Main where where
main = ((\[xx].((\[yy].[((+ [xx]) [yy])]) [(unversion [(__h_0 [(version {A:[1.0.0]} of __a_0)])])])) [(unversion [(__g_0 [(version {A:[1.0.1]} of __a_1)])])])

[DEBUG] ct     : f->3, y->2
[DEBUG] ct'    : a->2, f->3, g->1, h->1, y->2
[DEBUG] ctdiff : a->2, f->0, g->1, h->1, y->0
[DEBUG] ctstart: a->0, f->3, g->0, h->0, y->2

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : a:[Int]_(a63), f:[(Int@[a49] -> Int)]_(a48), g:[(Int@[a51] -> Int)]_(a50), h:[(Int@[a53] -> Int)]_(a52), y:[Int]_(a54)
[DEBUG] Imported UEnv      : a48:Label, a49:Label, a50:Label, a51:Label, a52:Label, a53:Label, a54:Label, a63:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0)
[DEBUG] Duplicated Imported UEnv        : a50_0:Label, a51_0:Label, a52_0:Label, a53_0:Label, a63_0:Label, a63_1:Label
[DEBUG] Duplicated Imported Constraints : (((a63_0 ≤ a62) and (a63_0 ≤ [{A:[1.0.0]}])) or ((a63_0 ≤ a59) and (a63_0 ≤ [{A:[1.0.1]}]))) and (((a63_1 ≤ a62) and (a63_1 ≤ [{A:[1.0.0]}])) or ((a63_1 ≤ a59) and (a63_1 ≤ [{A:[1.0.1]}]))) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a50_0 ≤ a47) and (a51_0 ≤ a39) and (a50_0 ≤ [{B:[1.0.0]}]) and (a52_0 ≤ a23) and (a53_0 ≤ a15) and (a52_0 ≤ [{B:[1.0.1]}]) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(((a63_0 ≤ a62) and (a63_0 ≤ [{A:[1.0.0]}])) or ((a63_0 ≤ a59) and (a63_0 ≤ [{A:[1.0.1]}]))) and (((a63_1 ≤ a62) and (a63_1 ≤ [{A:[1.0.0]}])) or ((a63_1 ≤ a59) and (a63_1 ≤ [{A:[1.0.1]}]))) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a50_0 ≤ a47) and (a51_0 ≤ a39) and (a50_0 ≤ [{B:[1.0.0]}]) and (a52_0 ≤ a23) and (a53_0 ≤ a15) and (a52_0 ≤ [{B:[1.0.1]}]) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__a_0 -> a
a63_0,
__a_1 -> a
a63_1,
__g_0 -> g
a50_0,
__h_0 -> h
a52_0

[DEBUG] Initial Counter     : 64

=== Type Inference (Syntax.VL) ===
main : Int@[a76]
|||(Kinding) |- a65 : Label
||||(Kinding) |- a66 : Type
||||(Kinding) |- a65 : Label
|||(PatSynt) a65 |- xx ▷ (xx:[a66]_(a65); ())
|||(TyUnify)  |- a64 ~ a66@[a65] ▷ (a64 ↦ a66@[a65])
||(PatSynt) - |- [xx] ▷ (xx:[a66]_(a65); (a64 ↦ a66@[a65]))
|||||(Kinding) |- a68 : Label
||||||(Kinding) |- a69 : Type
||||||(Kinding) |- a68 : Label
|||||(PatSynt) a68 |- yy ▷ (yy:[a69]_(a68); ())
|||||(TyUnify)  |- a67 ~ a69@[a68] ▷ (a67 ↦ a69@[a68])
||||(PatSynt) - |- [yy] ▷ (yy:[a69]_(a68); (a67 ↦ a69@[a68]))
|||||||(TypeInf) xx:[a66]_(a65), yy:[a69]_(a68) |- + => ((Int@[a70] -> (Int@[a71] -> Int)); (); ⊤)
|||||||||(Kinding) |- a65 : Label
||||||||(TypeInf) xx:[a66]_(a65) |- xx => (a66; (); ⊤)
|||||||(TypeInf) xx:[a66]_(a65), yy:[a69]_(a68) |- [xx] => (a66@[a72]; (); (a72 ≤ a65))
|||||||||(TyUnify)  |- a66 ~ Int ▷ (a66 ↦ Int)
|||||||||(TyUnify)  |- a72 ~ a70 ▷ (a72 ↦ a70)
||||||||(TyUnify)  |- a66@[a72] ~ Int@[a70] ▷ (a66 ↦ Int, a72 ↦ a70)
||||||||(TyUnify)  |- (Int@[a71] -> Int) ~ a73 ▷ (a73 ↦ (Int@[a71] -> Int))
|||||||(TyUnify)  |- (Int@[a70] -> (Int@[a71] -> Int)) ~ (a66@[a72] -> a73) ▷ (a66 ↦ Int, a72 ↦ a70, a73 ↦ (Int@[a71] -> Int))
||||||(TypeInf) xx:[a66]_(a65), yy:[a69]_(a68) |- (+ [xx]) => ((Int@[a71] -> Int); (a66 ↦ Int, a72 ↦ a70, a73 ↦ (Int@[a71] -> Int)); (a72 ≤ a65))
||||||||(Kinding) |- a68 : Label
|||||||(TypeInf) yy:[a69]_(a68) |- yy => (a69; (); ⊤)
||||||(TypeInf) xx:[a66]_(a65), yy:[a69]_(a68) |- [yy] => (a69@[a74]; (); (a74 ≤ a68))
||||||||(TyUnify)  |- a69 ~ Int ▷ (a69 ↦ Int)
||||||||(TyUnify)  |- a74 ~ a71 ▷ (a74 ↦ a71)
|||||||(TyUnify)  |- a69@[a74] ~ Int@[a71] ▷ (a69 ↦ Int, a74 ↦ a71)
|||||||(TyUnify)  |- Int ~ a75 ▷ (a75 ↦ Int)
||||||(TyUnify)  |- (Int@[a71] -> Int) ~ (a69@[a74] -> a75) ▷ (a69 ↦ Int, a74 ↦ a71, a75 ↦ Int)
|||||(TypeInf) xx:[a66]_(a65), yy:[a69]_(a68) |- ((+ [xx]) [yy]) => (Int; (a73 ↦ (Int@[a71] -> Int), a66 ↦ Int, a69 ↦ Int, a72 ↦ a70, a74 ↦ a71, a75 ↦ Int); (a72 ≤ a65) and (a74 ≤ a68))
||||(TypeInf) __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0), xx:[a66]_(a65), yy:[a69]_(a68) |- [((+ [xx]) [yy])] => (Int@[a76]; (a73 ↦ (Int@[a71] -> Int), a66 ↦ Int, a69 ↦ Int, a72 ↦ a70, a74 ↦ a71, a75 ↦ Int); (a72 ≤ a65) and (a74 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65))
|||(TypeInf) __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0), xx:[a66]_(a65) |- (\[yy].[((+ [xx]) [yy])]) => ((Int@[a68] -> Int@[a76]); (a73 ↦ (Int@[a71] -> Int), a66 ↦ Int, a69 ↦ Int, a67 ↦ Int@[a68], a72 ↦ a70, a74 ↦ a71, a75 ↦ Int); (a72 ≤ a65) and (a74 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65))
||||||||(Kinding) |- a52_0 : Label
|||||||(TypeInf) __a_0:[Int]_(a63_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- __h_0 => ((Int@[a53_0] -> Int); (); ⊤)
|||||||||(Kinding) |- [{A:[1.0.0]}] : Label
|||||||||||(Kinding) |- [{A:[1.0.0]}] : Label
|||||||||||(Kinding) |- a63_0 : Label
||||||||||(Kinding) |- [{A:[1.0.0]}] .* a63_0 : Label
|||||||||(TypeInf) __a_0:[Int]_([{A:[1.0.0]}] .* a63_0) |- __a_0 => (Int; (); ⊤)
||||||||(TypeInf) __a_0:[Int]_(a63_0) |- (version {A:[1.0.0]} of __a_0) => (Int; (); (a63_0 ≤ [{A:[1.0.0]}]))
|||||||(TypeInf) __a_0:[Int]_(a63_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- [(version {A:[1.0.0]} of __a_0)] => (Int@[a77]; (); (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0))
|||||||||(TyUnify)  |- Int ~ Int ▷ ()
|||||||||(TyUnify)  |- a77 ~ a53_0 ▷ (a77 ↦ a53_0)
||||||||(TyUnify)  |- Int@[a77] ~ Int@[a53_0] ▷ (a77 ↦ a53_0)
||||||||(TyUnify)  |- Int ~ a78 ▷ (a78 ↦ Int)
|||||||(TyUnify)  |- (Int@[a53_0] -> Int) ~ (Int@[a77] -> a78) ▷ (a77 ↦ a53_0, a78 ↦ Int)
||||||(TypeInf) __a_0:[Int]_(a63_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- (__h_0 [(version {A:[1.0.0]} of __a_0)]) => (Int; (a77 ↦ a53_0, a78 ↦ Int); (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0))
|||||(TypeInf) __a_0:[Int]_(a63_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- [(__h_0 [(version {A:[1.0.0]} of __a_0)])] => (Int@[a79]; (a77 ↦ a53_0, a78 ↦ Int); (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0))
||||(TypeInf) __a_0:[Int]_(a63_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- (unversion [(__h_0 [(version {A:[1.0.0]} of __a_0)])]) => (Int; (a77 ↦ a53_0, a78 ↦ Int); (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0))
|||(TypeInf) __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0), xx:[a66]_(a65) |- [(unversion [(__h_0 [(version {A:[1.0.0]} of __a_0)])])] => (Int@[a80]; (a77 ↦ a53_0, a78 ↦ Int); (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0))
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a80 ~ a68 ▷ (a80 ↦ a68)
||||(TyUnify)  |- Int@[a80] ~ Int@[a68] ▷ (a80 ↦ a68)
||||(TyUnify)  |- Int@[a76] ~ a81 ▷ (a81 ↦ Int@[a76])
|||(TyUnify)  |- (Int@[a68] -> Int@[a76]) ~ (Int@[a80] -> a81) ▷ (a80 ↦ a68, a81 ↦ Int@[a76])
||(TypeInf) __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0), xx:[a66]_(a65) |- ((\[yy].[((+ [xx]) [yy])]) [(unversion [(__h_0 [(version {A:[1.0.0]} of __a_0)])])]) => (Int@[a76]; (a73 ↦ (Int@[a71] -> Int), a75 ↦ Int, a77 ↦ a53_0, a78 ↦ Int, a66 ↦ Int, a67 ↦ Int@[a68], a69 ↦ Int, a72 ↦ a70, a74 ↦ a71, a80 ↦ a68, a81 ↦ Int@[a76]); (a72 ≤ a65) and (a74 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65) and (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0))
|(TypeInf) __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- (\[xx].((\[yy].[((+ [xx]) [yy])]) [(unversion [(__h_0 [(version {A:[1.0.0]} of __a_0)])])])) => ((Int@[a65] -> Int@[a76]); (a73 ↦ (Int@[a71] -> Int), a75 ↦ Int, a77 ↦ a53_0, a78 ↦ Int, a66 ↦ Int, a64 ↦ Int@[a65], a67 ↦ Int@[a68], a69 ↦ Int, a72 ↦ a70, a74 ↦ a71, a80 ↦ a68, a81 ↦ Int@[a76]); (a72 ≤ a65) and (a74 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65) and (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0))
||||||(Kinding) |- a50_0 : Label
|||||(TypeInf) __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0) |- __g_0 => ((Int@[a51_0] -> Int); (); ⊤)
|||||||(Kinding) |- [{A:[1.0.1]}] : Label
|||||||||(Kinding) |- [{A:[1.0.1]}] : Label
|||||||||(Kinding) |- a63_1 : Label
||||||||(Kinding) |- [{A:[1.0.1]}] .* a63_1 : Label
|||||||(TypeInf) __a_1:[Int]_([{A:[1.0.1]}] .* a63_1) |- __a_1 => (Int; (); ⊤)
||||||(TypeInf) __a_1:[Int]_(a63_1) |- (version {A:[1.0.1]} of __a_1) => (Int; (); (a63_1 ≤ [{A:[1.0.1]}]))
|||||(TypeInf) __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0) |- [(version {A:[1.0.1]} of __a_1)] => (Int@[a82]; (); (a63_1 ≤ [{A:[1.0.1]}]) and (a82 ≤ a63_1))
|||||||(TyUnify)  |- Int ~ Int ▷ ()
|||||||(TyUnify)  |- a82 ~ a51_0 ▷ (a82 ↦ a51_0)
||||||(TyUnify)  |- Int@[a82] ~ Int@[a51_0] ▷ (a82 ↦ a51_0)
||||||(TyUnify)  |- Int ~ a83 ▷ (a83 ↦ Int)
|||||(TyUnify)  |- (Int@[a51_0] -> Int) ~ (Int@[a82] -> a83) ▷ (a82 ↦ a51_0, a83 ↦ Int)
||||(TypeInf) __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0) |- (__g_0 [(version {A:[1.0.1]} of __a_1)]) => (Int; (a82 ↦ a51_0, a83 ↦ Int); (a63_1 ≤ [{A:[1.0.1]}]) and (a82 ≤ a63_1))
|||(TypeInf) __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0) |- [(__g_0 [(version {A:[1.0.1]} of __a_1)])] => (Int@[a84]; (a82 ↦ a51_0, a83 ↦ Int); (a63_1 ≤ [{A:[1.0.1]}]) and (a82 ≤ a63_1) and (a84 ≤ a50_0) and (a84 ≤ a63_1))
||(TypeInf) __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0) |- (unversion [(__g_0 [(version {A:[1.0.1]} of __a_1)])]) => (Int; (a82 ↦ a51_0, a83 ↦ Int); (a63_1 ≤ [{A:[1.0.1]}]) and (a82 ≤ a63_1) and (a84 ≤ a50_0) and (a84 ≤ a63_1))
|(TypeInf) __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- [(unversion [(__g_0 [(version {A:[1.0.1]} of __a_1)])])] => (Int@[a85]; (a82 ↦ a51_0, a83 ↦ Int); (a63_1 ≤ [{A:[1.0.1]}]) and (a82 ≤ a63_1) and (a84 ≤ a50_0) and (a84 ≤ a63_1))
|||(TyUnify)  |- Int ~ Int ▷ ()
|||(TyUnify)  |- a85 ~ a65 ▷ (a85 ↦ a65)
||(TyUnify)  |- Int@[a85] ~ Int@[a65] ▷ (a85 ↦ a65)
||(TyUnify)  |- Int@[a76] ~ a86 ▷ (a86 ↦ Int@[a76])
|(TyUnify)  |- (Int@[a65] -> Int@[a76]) ~ (Int@[a85] -> a86) ▷ (a85 ↦ a65, a86 ↦ Int@[a76])
(TypeInf) __a_0:[Int]_(a63_0), __a_1:[Int]_(a63_1), __g_0:[(Int@[a51_0] -> Int)]_(a50_0), __h_0:[(Int@[a53_0] -> Int)]_(a52_0) |- ((\[xx].((\[yy].[((+ [xx]) [yy])]) [(unversion [(__h_0 [(version {A:[1.0.0]} of __a_0)])])])) [(unversion [(__g_0 [(version {A:[1.0.1]} of __a_1)])])]) => (Int@[a76]; (a73 ↦ (Int@[a71] -> Int), a75 ↦ Int, a77 ↦ a53_0, a78 ↦ Int, a81 ↦ Int@[a76], a82 ↦ a51_0, a83 ↦ Int, a64 ↦ Int@[a65], a66 ↦ Int, a67 ↦ Int@[a68], a69 ↦ Int, a72 ↦ a70, a74 ↦ a71, a80 ↦ a68, a85 ↦ a65, a86 ↦ Int@[a76]); (a72 ≤ a65) and (a74 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65) and (a63_0 ≤ [{A:[1.0.0]}]) and (a77 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0) and (a63_1 ≤ [{A:[1.0.1]}]) and (a82 ≤ a63_1) and (a84 ≤ a50_0) and (a84 ≤ a63_1))

=== Inferred Types (Syntax.VL) ===
main : Int@[a76]

[DEBUG] Add global env : main : Int@[a76]
[DEBUG] Add global constraints : (a70 ≤ a65) and (a71 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65) and (a63_0 ≤ [{A:[1.0.0]}]) and (a53_0 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0) and (a63_1 ≤ [{A:[1.0.1]}]) and (a51_0 ≤ a63_1) and (a84 ≤ a50_0) and (a84 ≤ a63_1)
[DEBUG] Counter: 87
[DEBUG] globalConstraints:
(a70 ≤ a65) and (a71 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65) and (a63_0 ≤ [{A:[1.0.0]}]) and (a53_0 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0) and (a63_1 ≤ [{A:[1.0.1]}]) and (a51_0 ≤ a63_1) and (a84 ≤ a50_0) and (a84 ≤ a63_1) and (((a63_0 ≤ a62) and (a63_0 ≤ [{A:[1.0.0]}])) or ((a63_0 ≤ a59) and (a63_0 ≤ [{A:[1.0.1]}]))) and (((a63_1 ≤ a62) and (a63_1 ≤ [{A:[1.0.0]}])) or ((a63_1 ≤ a59) and (a63_1 ≤ [{A:[1.0.1]}]))) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a50_0 ≤ a47) and (a51_0 ≤ a39) and (a50_0 ≤ [{B:[1.0.0]}]) and (a52_0 ≤ a23) and (a53_0 ≤ a15) and (a52_0 ≤ [{B:[1.0.1]}]) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (((a63 ≤ a62) and (a63 ≤ [{A:[1.0.0]}])) or ((a63 ≤ a59) and (a63 ≤ [{A:[1.0.1]}]))) and (a49_2 ≤ a54_1) and (a62 ≤ a54_1) and (a62 ≤ a48_2) and (((a48_2 ≤ a35) and (a49_2 ≤ a27) and (a48_2 ≤ [{B:[1.0.0]}])) or ((a48_2 ≤ a11) and (a49_2 ≤ a3) and (a48_2 ≤ [{B:[1.0.1]}]))) and (((a54_1 ≤ a24) and (a54_1 ≤ [{B:[1.0.0]}])) or ((a54_1 ≤ a0) and (a54_1 ≤ [{B:[1.0.1]}]))) and (a49_1 ≤ a54_0) and (a49_0 ≤ a54_0) and (a49_0 ≤ a48_1) and (a59 ≤ a54_0) and (a59 ≤ a48_1) and (a59 ≤ a48_0) and (((a48_0 ≤ a35) and (a49_0 ≤ a27) and (a48_0 ≤ [{B:[1.0.0]}])) or ((a48_0 ≤ a11) and (a49_0 ≤ a3) and (a48_0 ≤ [{B:[1.0.1]}]))) and (((a48_1 ≤ a35) and (a49_1 ≤ a27) and (a48_1 ≤ [{B:[1.0.0]}])) or ((a48_1 ≤ a11) and (a49_1 ≤ a3) and (a48_1 ≤ [{B:[1.0.1]}]))) and (((a54_0 ≤ a24) and (a54_0 ≤ [{B:[1.0.0]}])) or ((a54_0 ≤ a0) and (a54_0 ≤ [{B:[1.0.1]}]))) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}]) and (a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}]) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a29 ≤ a27) and (a41 ≤ a39) and (a5 ≤ a3) and (a17 ≤ a15)

[DEBUG] bundledConsSchemes:
A
(a,(((a63 ≤ a62) and (a63 ≤ [{A:[1.0.0]}])) or ((a63 ≤ a59) and (a63 ≤ [{A:[1.0.1]}])))), B
(f,(((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}])))), (g,(a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}])), (h,(a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}])), (y,(((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
None

=== External Variables ===
__a_0 Main-Root a63_0
__a_1 Main-Root a63_1
__f_0 A-1.0.1 a48_0
__f_1 A-1.0.1 a48_1
__f_2 A-1.0.0 a48_2
__g_0 Main-Root a50_0
__h_0 Main-Root a52_0
__y_0 A-1.0.1 a54_0
__y_1 A-1.0.0 a54_1

=== Constraints ===
(a70 ≤ a65) and (a71 ≤ a68) and (a76 ≤ a68) and (a76 ≤ a65) and (a63_0 ≤ [{A:[1.0.0]}]) and (a53_0 ≤ a63_0) and (a79 ≤ a52_0) and (a79 ≤ a63_0) and (a63_1 ≤ [{A:[1.0.1]}]) and (a51_0 ≤ a63_1) and (a84 ≤ a50_0) and (a84 ≤ a63_1) and (((a63_0 ≤ a62) and (a63_0 ≤ [{A:[1.0.0]}])) or ((a63_0 ≤ a59) and (a63_0 ≤ [{A:[1.0.1]}]))) and (((a63_1 ≤ a62) and (a63_1 ≤ [{A:[1.0.0]}])) or ((a63_1 ≤ a59) and (a63_1 ≤ [{A:[1.0.1]}]))) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a50_0 ≤ a47) and (a51_0 ≤ a39) and (a50_0 ≤ [{B:[1.0.0]}]) and (a52_0 ≤ a23) and (a53_0 ≤ a15) and (a52_0 ≤ [{B:[1.0.1]}]) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (((a63 ≤ a62) and (a63 ≤ [{A:[1.0.0]}])) or ((a63 ≤ a59) and (a63 ≤ [{A:[1.0.1]}]))) and (a49_2 ≤ a54_1) and (a62 ≤ a54_1) and (a62 ≤ a48_2) and (((a48_2 ≤ a35) and (a49_2 ≤ a27) and (a48_2 ≤ [{B:[1.0.0]}])) or ((a48_2 ≤ a11) and (a49_2 ≤ a3) and (a48_2 ≤ [{B:[1.0.1]}]))) and (((a54_1 ≤ a24) and (a54_1 ≤ [{B:[1.0.0]}])) or ((a54_1 ≤ a0) and (a54_1 ≤ [{B:[1.0.1]}]))) and (a49_1 ≤ a54_0) and (a49_0 ≤ a54_0) and (a49_0 ≤ a48_1) and (a59 ≤ a54_0) and (a59 ≤ a48_1) and (a59 ≤ a48_0) and (((a48_0 ≤ a35) and (a49_0 ≤ a27) and (a48_0 ≤ [{B:[1.0.0]}])) or ((a48_0 ≤ a11) and (a49_0 ≤ a3) and (a48_0 ≤ [{B:[1.0.1]}]))) and (((a48_1 ≤ a35) and (a49_1 ≤ a27) and (a48_1 ≤ [{B:[1.0.0]}])) or ((a48_1 ≤ a11) and (a49_1 ≤ a3) and (a48_1 ≤ [{B:[1.0.1]}]))) and (((a54_0 ≤ a24) and (a54_0 ≤ [{B:[1.0.0]}])) or ((a54_0 ≤ a0) and (a54_0 ≤ [{B:[1.0.1]}]))) and (((a54 ≤ a24) and (a54 ≤ [{B:[1.0.0]}])) or ((a54 ≤ a0) and (a54 ≤ [{B:[1.0.1]}]))) and (a52 ≤ a23) and (a53 ≤ a15) and (a52 ≤ [{B:[1.0.1]}]) and (a50 ≤ a47) and (a51 ≤ a39) and (a50 ≤ [{B:[1.0.0]}]) and (((a48 ≤ a35) and (a49 ≤ a27) and (a48 ≤ [{B:[1.0.0]}])) or ((a48 ≤ a11) and (a49 ≤ a3) and (a48 ≤ [{B:[1.0.1]}]))) and (a29 ≤ a27) and (a41 ≤ a39) and (a5 ≤ a3) and (a17 ≤ a15)

=== Solver result ===
a0 : {}
a11 : {}
a15 : {}
a17 : {}
a23 : {}
a24 : {}
a27 : {}
a29 : {}
a3 : {}
a35 : {}
a39 : {}
a41 : {}
a47 : {}
a48 : {B:[1.0.1]}
a48_0 : {B:[1.0.0]}
a48_1 : {B:[1.0.0]}
a48_2 : {B:[1.0.1]}
a49 : {}
a49_0 : {B:[1.0.0]}
a49_1 : {B:[1.0.0]}
a49_2 : {B:[1.0.1]}
a5 : {}
a50 : {B:[1.0.0]}
a50_0 : {B:[1.0.0]}
a51 : {}
a51_0 : {A:[1.0.1], B:[1.0.0]}
a52 : {B:[1.0.1]}
a52_0 : {B:[1.0.1]}
a53 : {}
a53_0 : {A:[1.0.0], B:[1.0.1]}
a54 : {B:[1.0.1]}
a54_0 : {B:[1.0.0]}
a54_1 : {B:[1.0.1]}
a59 : {B:[1.0.0]}
a62 : {B:[1.0.1]}
a63 : {A:[1.0.0], B:[1.0.1]}
a63_0 : {A:[1.0.0], B:[1.0.1]}
a63_1 : {A:[1.0.1], B:[1.0.0]}
a65 : {}
a68 : {}
a70 : {}
a71 : {}
a76 : {}
a79 : {A:[1.0.0], B:[1.0.1]}
a84 : {A:[1.0.1], B:[1.0.0]}

=== Labels of External Variables ===
__a_0 : a : Main-Root : a63_0 : {A:[1.0.0], B:[1.0.1]}
__a_1 : a : Main-Root : a63_1 : {A:[1.0.1], B:[1.0.0]}
__f_0 : f : A-1.0.1 : a48_0 : {B:[1.0.0]}
__f_1 : f : A-1.0.1 : a48_1 : {B:[1.0.0]}
__f_2 : f : A-1.0.0 : a48_2 : {B:[1.0.1]}
__g_0 : g : Main-Root : a50_0 : {B:[1.0.0]}
__h_0 : h : Main-Root : a52_0 : {B:[1.0.1]}
__y_0 : y : A-1.0.1 : a54_0 : {B:[1.0.0]}
__y_1 : y : A-1.0.0 : a54_1 : {B:[1.0.1]}

=== Prettyprint ===

-- A v1.0.0
module A where
import B
a = f y

-- A v1.0.1
module A where
import B
a = f (f y)

-- B v1.0.0
module B where
y = 1
f x = x + 1
g x = x + 1

-- B v1.0.1
module B where
y = 2
f x = x + 2
h x = x * 1

-- Main vRoot
module Main where
import A
import B
main
  = let xx = (unversion (g (version A = 1.0.1 of a)))
        yy = (unversion (h (version A = 1.0.0 of a)))
      in xx + yy

=== Extraction ===
(\ xx ->
   (\ yy -> (+) xx yy) ((\ x -> (*) x 1) ((\ x -> (+) x 1) 1)))
  ((\ x -> (+) x 1) ((\ x -> (+) x 1) 1))
