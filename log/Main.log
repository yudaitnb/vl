=== Parsing ===
[DEBUG] rootDirPath : ./examples/
[DEBUG] logDirPath  : ./log/
[DEBUG] validExt    : .hs
[DEBUG] Start parsing Main-Root
[DEBUG] Start parsing A-TBD
[DEBUG] Versions found : [1.0.0, 1.0.1]
[DEBUG] Start parsing B-TBD
[DEBUG] Versions found : [1.0.0, 1.0.1]
[DEBUG] There are no rest modules to parse.
=== Parsed Modules ===
=== A-1.0.0
module A where

import B

a = f y

=== A-1.0.1
module A where

import B

a = f (f y)

=== B-1.0.0
module B where

y = 1
b1 = 1
f x = x + 1

g x = x + 1



ll = length





length xs = case xs of
  [] -> 0
  hh : rst -> 1 + length rst


=== B-1.0.1
module B where

y = 2
b2 = 2
f x = x + 2

h x = x * 1



=== Main-Root
module Main where

import A
import B








































main =
  let sumTpl x = case x of (x1,x2) -> x1 + x2
  in sumTpl (y,b1)






head xs = case xs of
  []     -> 0
  h:rst -> h

length xs = case xs of
  []     -> 0
  hh:rst -> 1 + length rst

=== Compilation order ===
B-1.0.1
B-1.0.0
A-1.0.1
A-1.0.0
Main-Root

===================================
=== Start compiling module B-1.0.1
===================================

=== AST (Syntax.Absyn) ===
module B where

y = 2
b2 = 2
f x = x + 2

h x = x * 1



=== Name resolution ===
module B where

y = 2
b2 = 2
f x = x + 2

h x = x * 1




=== Desugared AST (Syntax.Desugared) ===
module B where where
y = 2

b2 = 2

f = (\x.((+ x) 2))

h = (\x.((* x) 1))


=== Normalized AST (Syntax.Desugared) ===
module B where where
y = 2

b2 = 2

f = (\x.((+ x) 2))

h = (\x.((* x) 1))


=== AST (Syntax.VL) ===
module B where where
y = 2

b2 = 2

f = (\[x].((+ [x]) [2]))

h = (\[x].((* [x]) [1]))


=== AST (Syntax.VL), after duplicating external variables ===
module B where where
y = 2

b2 = 2

f = (\[x].((+ [x]) [2]))

h = (\[x].((* [x]) [1]))

[DEBUG] ct     : 
[DEBUG] ct'    : 
[DEBUG] ctdiff : 
[DEBUG] ctstart: 

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : {}
[DEBUG] Imported UEnv      : {}
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : {}
[DEBUG] Duplicated Imported UEnv        : {}
[DEBUG] Duplicated Imported Constraints : ⊤

[DEBUG] add duplicated constraints                 : 
⊤
[DEBUG] add duplicated external variable resources : 
{}

[DEBUG] Initial Counter     : 0

=== Type Inference (Syntax.VL) ===
y : Int@[a2]
|(TypeInf) {} |- 2 => (Int; (); ⊤)
(TypeInf) y:[a0]_(a1) |- [2] => (Int@[a2]; (); ⊤)
b2 : Int@[a6]
|(TypeInf) {} |- 2 => (Int; (); ⊤)
(TypeInf) b2:[a4]_(a5), y:[Int]_(a3) |- [2] => (Int@[a6]; (); ⊤)
f : (Int@[a12] -> Int)@[a20]
|||(Kinding) |- a12 : Label
||||(Kinding) |- a13 : Type
||||(Kinding) |- a12 : Label
|||(PatSynt) a12 |- x ▷ (x:[a13]_(a12); ())
|||(TyUnify)  |- a13@[a12] ~ a11 ▷ (a11 ↦ a13@[a12])
||(PatSynt) - |- [x] ▷ (x:[a13]_(a12); (a11 ↦ a13@[a12]))
||||(TypeInf) x:[a13]_(a12) |- + => ((Int@[a14] -> (Int@[a15] -> Int)); (); ⊤)
||||||(Kinding) |- a12 : Label
|||||(TypeInf) x:[a13]_(a12) |- x => (a13; (); ⊤)
||||(TypeInf) x:[a13]_(a12) |- [x] => (a13@[a16]; (); (a16 ≤ a12))
||||||(TyUnify)  |- a13 ~ Int ▷ (a13 ↦ Int)
||||||(TyUnify)  |- a16 ~ a14 ▷ (a16 ↦ a14)
|||||(TyUnify)  |- a13@[a16] ~ Int@[a14] ▷ (a13 ↦ Int, a16 ↦ a14)
|||||(TyUnify)  |- (Int@[a15] -> Int) ~ a17 ▷ (a17 ↦ (Int@[a15] -> Int))
||||(TyUnify)  |- (Int@[a14] -> (Int@[a15] -> Int)) ~ (a13@[a16] -> a17) ▷ (a13 ↦ Int, a16 ↦ a14, a17 ↦ (Int@[a15] -> Int))
|||(TypeInf) x:[a13]_(a12) |- (+ [x]) => ((Int@[a15] -> Int); (a13 ↦ Int, a16 ↦ a14, a17 ↦ (Int@[a15] -> Int)); (a16 ≤ a12))
||||(TypeInf) {} |- 2 => (Int; (); ⊤)
|||(TypeInf) x:[a13]_(a12) |- [2] => (Int@[a18]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a18 ~ a15 ▷ (a18 ↦ a15)
||||(TyUnify)  |- Int@[a18] ~ Int@[a15] ▷ (a18 ↦ a15)
||||(TyUnify)  |- Int ~ a19 ▷ (a19 ↦ Int)
|||(TyUnify)  |- (Int@[a15] -> Int) ~ (Int@[a18] -> a19) ▷ (a18 ↦ a15, a19 ↦ Int)
||(TypeInf) x:[a13]_(a12) |- ((+ [x]) [2]) => (Int; (a17 ↦ (Int@[a15] -> Int), a13 ↦ Int, a16 ↦ a14, a18 ↦ a15, a19 ↦ Int); (a16 ≤ a12))
|(TypeInf) {} |- (\[x].((+ [x]) [2])) => ((Int@[a12] -> Int); (a17 ↦ (Int@[a15] -> Int), a13 ↦ Int, a11 ↦ Int@[a12], a16 ↦ a14, a18 ↦ a15, a19 ↦ Int); (a16 ≤ a12))
(TypeInf) b2:[Int]_(a7), f:[a9]_(a10), y:[Int]_(a8) |- [(\[x].((+ [x]) [2]))] => ((Int@[a12] -> Int)@[a20]; (a17 ↦ (Int@[a15] -> Int), a13 ↦ Int, a11 ↦ Int@[a12], a16 ↦ a14, a18 ↦ a15, a19 ↦ Int); (a16 ≤ a12))
h : (Int@[a27] -> Int)@[a35]
|||(Kinding) |- a27 : Label
||||(Kinding) |- a28 : Type
||||(Kinding) |- a27 : Label
|||(PatSynt) a27 |- x ▷ (x:[a28]_(a27); ())
|||(TyUnify)  |- a28@[a27] ~ a26 ▷ (a26 ↦ a28@[a27])
||(PatSynt) - |- [x] ▷ (x:[a28]_(a27); (a26 ↦ a28@[a27]))
||||(TypeInf) x:[a28]_(a27) |- * => ((Int@[a29] -> (Int@[a30] -> Int)); (); ⊤)
||||||(Kinding) |- a27 : Label
|||||(TypeInf) x:[a28]_(a27) |- x => (a28; (); ⊤)
||||(TypeInf) x:[a28]_(a27) |- [x] => (a28@[a31]; (); (a31 ≤ a27))
||||||(TyUnify)  |- a28 ~ Int ▷ (a28 ↦ Int)
||||||(TyUnify)  |- a31 ~ a29 ▷ (a31 ↦ a29)
|||||(TyUnify)  |- a28@[a31] ~ Int@[a29] ▷ (a28 ↦ Int, a31 ↦ a29)
|||||(TyUnify)  |- (Int@[a30] -> Int) ~ a32 ▷ (a32 ↦ (Int@[a30] -> Int))
||||(TyUnify)  |- (Int@[a29] -> (Int@[a30] -> Int)) ~ (a28@[a31] -> a32) ▷ (a28 ↦ Int, a31 ↦ a29, a32 ↦ (Int@[a30] -> Int))
|||(TypeInf) x:[a28]_(a27) |- (* [x]) => ((Int@[a30] -> Int); (a28 ↦ Int, a31 ↦ a29, a32 ↦ (Int@[a30] -> Int)); (a31 ≤ a27))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a28]_(a27) |- [1] => (Int@[a33]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a33 ~ a30 ▷ (a33 ↦ a30)
||||(TyUnify)  |- Int@[a33] ~ Int@[a30] ▷ (a33 ↦ a30)
||||(TyUnify)  |- Int ~ a34 ▷ (a34 ↦ Int)
|||(TyUnify)  |- (Int@[a30] -> Int) ~ (Int@[a33] -> a34) ▷ (a33 ↦ a30, a34 ↦ Int)
||(TypeInf) x:[a28]_(a27) |- ((* [x]) [1]) => (Int; (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))
|(TypeInf) {} |- (\[x].((* [x]) [1])) => ((Int@[a27] -> Int); (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a26 ↦ Int@[a27], a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))
(TypeInf) b2:[Int]_(a22), f:[(Int@[a12] -> Int)]_(a21), h:[a24]_(a25), y:[Int]_(a23) |- [(\[x].((* [x]) [1]))] => ((Int@[a27] -> Int)@[a35]; (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a26 ↦ Int@[a27], a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))

=== Inferred Types (Syntax.VL) ===
y : Int@[a2]
b2 : Int@[a6]
f : (Int@[a12] -> Int)@[a20]
h : (Int@[a27] -> Int)@[a35]

[DEBUG] Add global env : y : Int@[a2]
b2 : Int@[a6]
f : (Int@[a12] -> Int)@[a20]
h : (Int@[a27] -> Int)@[a35]
[DEBUG] Add global constraints : (a14 ≤ a12) and (a29 ≤ a27)
[DEBUG] Counter: 36
[DEBUG] globalConstraints:
(a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:


[DEBUG] List of modules not yet compiled:
B-1.0.0
A-1.0.1
A-1.0.0
Main-Root


===================================
=== Start compiling module B-1.0.0
===================================

=== AST (Syntax.Absyn) ===
module B where

y = 1
b1 = 1
f x = x + 1

g x = x + 1



ll = length





length xs = case xs of
  [] -> 0
  hh : rst -> 1 + length rst


=== Name resolution ===
module B where

y = 1
b1 = 1
f x = x + 1

g x = x + 1



ll = B.length





length xs = case xs of
  [] -> 0
  hh : rst -> 1 + B.lengthrst



=== Desugared AST (Syntax.Desugared) ===
module B where where
y = 1

b1 = 1

f = (\x.((+ x) 1))

g = (\x.((+ x) 1))

ll = length

length = (\xs.(case xs of {[] -> 0; (hh : rst) -> ((+ 1) (length rst))}))


=== Normalized AST (Syntax.Desugared) ===
module B where where
y = 1

b1 = 1

f = (\x.((+ x) 1))

g = (\x.((+ x) 1))

ll = length

length = (\xs.(case xs of {[] -> 0; (hh : rst) -> ((+ 1) (length rst))}))


=== AST (Syntax.VL) ===
module B where where
y = 1

b1 = 1

f = (\[x].((+ [x]) [1]))

g = (\[x].((+ [x]) [1]))

ll = length

length = (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}))


=== AST (Syntax.VL), after duplicating external variables ===
module B where where
y = 1

b1 = 1

f = (\[x].((+ [x]) [1]))

g = (\[x].((+ [x]) [1]))

ll = length

length = (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}))

[DEBUG] ct     : 
[DEBUG] ct'    : length->0
[DEBUG] ctdiff : length->0
[DEBUG] ctstart: length->0

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : {}
[DEBUG] Imported UEnv      : {}
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : {}
[DEBUG] Duplicated Imported UEnv        : {}
[DEBUG] Duplicated Imported Constraints : ⊤

[DEBUG] add duplicated constraints                 : 
⊤
[DEBUG] add duplicated external variable resources : 
{}

[DEBUG] Initial Counter     : 36

=== Type Inference (Syntax.VL) ===
y : Int@[a38]
|(TypeInf) {} |- 1 => (Int; (); ⊤)
(TypeInf) y:[a36]_(a37) |- [1] => (Int@[a38]; (); ⊤)
b1 : Int@[a42]
|(TypeInf) {} |- 1 => (Int; (); ⊤)
(TypeInf) b1:[a40]_(a41), y:[Int]_(a39) |- [1] => (Int@[a42]; (); ⊤)
f : (Int@[a48] -> Int)@[a56]
|||(Kinding) |- a48 : Label
||||(Kinding) |- a49 : Type
||||(Kinding) |- a48 : Label
|||(PatSynt) a48 |- x ▷ (x:[a49]_(a48); ())
|||(TyUnify)  |- a49@[a48] ~ a47 ▷ (a47 ↦ a49@[a48])
||(PatSynt) - |- [x] ▷ (x:[a49]_(a48); (a47 ↦ a49@[a48]))
||||(TypeInf) x:[a49]_(a48) |- + => ((Int@[a50] -> (Int@[a51] -> Int)); (); ⊤)
||||||(Kinding) |- a48 : Label
|||||(TypeInf) x:[a49]_(a48) |- x => (a49; (); ⊤)
||||(TypeInf) x:[a49]_(a48) |- [x] => (a49@[a52]; (); (a52 ≤ a48))
||||||(TyUnify)  |- a49 ~ Int ▷ (a49 ↦ Int)
||||||(TyUnify)  |- a52 ~ a50 ▷ (a52 ↦ a50)
|||||(TyUnify)  |- a49@[a52] ~ Int@[a50] ▷ (a49 ↦ Int, a52 ↦ a50)
|||||(TyUnify)  |- (Int@[a51] -> Int) ~ a53 ▷ (a53 ↦ (Int@[a51] -> Int))
||||(TyUnify)  |- (Int@[a50] -> (Int@[a51] -> Int)) ~ (a49@[a52] -> a53) ▷ (a49 ↦ Int, a52 ↦ a50, a53 ↦ (Int@[a51] -> Int))
|||(TypeInf) x:[a49]_(a48) |- (+ [x]) => ((Int@[a51] -> Int); (a49 ↦ Int, a52 ↦ a50, a53 ↦ (Int@[a51] -> Int)); (a52 ≤ a48))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a49]_(a48) |- [1] => (Int@[a54]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a54 ~ a51 ▷ (a54 ↦ a51)
||||(TyUnify)  |- Int@[a54] ~ Int@[a51] ▷ (a54 ↦ a51)
||||(TyUnify)  |- Int ~ a55 ▷ (a55 ↦ Int)
|||(TyUnify)  |- (Int@[a51] -> Int) ~ (Int@[a54] -> a55) ▷ (a54 ↦ a51, a55 ↦ Int)
||(TypeInf) x:[a49]_(a48) |- ((+ [x]) [1]) => (Int; (a53 ↦ (Int@[a51] -> Int), a49 ↦ Int, a52 ↦ a50, a54 ↦ a51, a55 ↦ Int); (a52 ≤ a48))
|(TypeInf) {} |- (\[x].((+ [x]) [1])) => ((Int@[a48] -> Int); (a53 ↦ (Int@[a51] -> Int), a49 ↦ Int, a47 ↦ Int@[a48], a52 ↦ a50, a54 ↦ a51, a55 ↦ Int); (a52 ≤ a48))
(TypeInf) b1:[Int]_(a43), f:[a45]_(a46), y:[Int]_(a44) |- [(\[x].((+ [x]) [1]))] => ((Int@[a48] -> Int)@[a56]; (a53 ↦ (Int@[a51] -> Int), a49 ↦ Int, a47 ↦ Int@[a48], a52 ↦ a50, a54 ↦ a51, a55 ↦ Int); (a52 ≤ a48))
g : (Int@[a63] -> Int)@[a71]
|||(Kinding) |- a63 : Label
||||(Kinding) |- a64 : Type
||||(Kinding) |- a63 : Label
|||(PatSynt) a63 |- x ▷ (x:[a64]_(a63); ())
|||(TyUnify)  |- a64@[a63] ~ a62 ▷ (a62 ↦ a64@[a63])
||(PatSynt) - |- [x] ▷ (x:[a64]_(a63); (a62 ↦ a64@[a63]))
||||(TypeInf) x:[a64]_(a63) |- + => ((Int@[a65] -> (Int@[a66] -> Int)); (); ⊤)
||||||(Kinding) |- a63 : Label
|||||(TypeInf) x:[a64]_(a63) |- x => (a64; (); ⊤)
||||(TypeInf) x:[a64]_(a63) |- [x] => (a64@[a67]; (); (a67 ≤ a63))
||||||(TyUnify)  |- a64 ~ Int ▷ (a64 ↦ Int)
||||||(TyUnify)  |- a67 ~ a65 ▷ (a67 ↦ a65)
|||||(TyUnify)  |- a64@[a67] ~ Int@[a65] ▷ (a64 ↦ Int, a67 ↦ a65)
|||||(TyUnify)  |- (Int@[a66] -> Int) ~ a68 ▷ (a68 ↦ (Int@[a66] -> Int))
||||(TyUnify)  |- (Int@[a65] -> (Int@[a66] -> Int)) ~ (a64@[a67] -> a68) ▷ (a64 ↦ Int, a67 ↦ a65, a68 ↦ (Int@[a66] -> Int))
|||(TypeInf) x:[a64]_(a63) |- (+ [x]) => ((Int@[a66] -> Int); (a64 ↦ Int, a67 ↦ a65, a68 ↦ (Int@[a66] -> Int)); (a67 ≤ a63))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a64]_(a63) |- [1] => (Int@[a69]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a69 ~ a66 ▷ (a69 ↦ a66)
||||(TyUnify)  |- Int@[a69] ~ Int@[a66] ▷ (a69 ↦ a66)
||||(TyUnify)  |- Int ~ a70 ▷ (a70 ↦ Int)
|||(TyUnify)  |- (Int@[a66] -> Int) ~ (Int@[a69] -> a70) ▷ (a69 ↦ a66, a70 ↦ Int)
||(TypeInf) x:[a64]_(a63) |- ((+ [x]) [1]) => (Int; (a68 ↦ (Int@[a66] -> Int), a64 ↦ Int, a67 ↦ a65, a69 ↦ a66, a70 ↦ Int); (a67 ≤ a63))
|(TypeInf) {} |- (\[x].((+ [x]) [1])) => ((Int@[a63] -> Int); (a68 ↦ (Int@[a66] -> Int), a64 ↦ Int, a62 ↦ Int@[a63], a67 ↦ a65, a69 ↦ a66, a70 ↦ Int); (a67 ≤ a63))
(TypeInf) b1:[Int]_(a58), f:[(Int@[a48] -> Int)]_(a57), g:[a60]_(a61), y:[Int]_(a59) |- [(\[x].((+ [x]) [1]))] => ((Int@[a63] -> Int)@[a71]; (a68 ↦ (Int@[a66] -> Int), a64 ↦ Int, a62 ↦ Int@[a63], a67 ↦ a65, a69 ↦ a66, a70 ↦ Int); (a67 ≤ a63))
ll : ((List a85)@[a79] -> Int)@[a106]
||(Kinding) |- a99 : Label
|(TypeInf) length:[((List a85)@[a79] -> Int)]_(a99) |- length => (((List a85)@[a79] -> Int); (); ⊤)
(TypeInf) b1:[Int]_(a102), f:[(Int@[a48] -> Int)]_(a101), g:[(Int@[a63] -> Int)]_(a100), length:[((List a85)@[a79] -> Int)]_(a99), ll:[a104]_(a105), y:[Int]_(a103) |- [length] => (((List a85)@[a79] -> Int)@[a106]; (); (a106 ≤ a99))
length : ((List a85)@[a79] -> Int)@[a98]
|||(Kinding) |- a79 : Label
||||(Kinding) |- a80 : Type
||||(Kinding) |- a79 : Label
|||(PatSynt) a79 |- xs ▷ (xs:[a80]_(a79); ())
|||(TyUnify)  |- a80@[a79] ~ a78 ▷ (a78 ↦ a80@[a79])
||(PatSynt) - |- [xs] ▷ (xs:[a80]_(a79); (a78 ↦ a80@[a79]))
|||||(Kinding) |- a79 : Label
||||(TypeInf) xs:[a80]_(a79) |- xs => (a80; (); ⊤)
|||(TypeInf) length:[a76]_(a77), xs:[a80]_(a79) |- [xs] => (a80@[a81]; (); (a81 ≤ a79))
||||(Kinding) |- a83 : Label
|||||(TyUnify)  |- (List a85) ~ a84 ▷ (a84 ↦ (List a85))
||||(PatSynt) a83 |- [] ▷ ({}; (a84 ↦ (List a85)))
|||||(TyUnify)  |- a84 ~ a80 ▷ (a84 ↦ a80)
|||||(TyUnify)  |- a83 ~ a81 ▷ (a83 ↦ a81)
||||(TyUnify)  |- a84@[a83] ~ a80@[a81] ▷ (a83 ↦ a81, a84 ↦ a80)
||||(TyUnify)  |- (List a85) ~ a80 ▷ (a80 ↦ (List a85))
|||(PatSynt) - |- [[]] ▷ ({}; (a80 ↦ (List a85), a83 ↦ a81, a84 ↦ (List a85), a84 ↦ (List a85)))
|||(TypeInf) length:[a76]_(a77), xs:[a80]_(a79) |- 0 => (Int; (); ⊤)
||||(Kinding) |- a87 : Label
||||||(Kinding) |- a89 : Type
||||||(Kinding) |- a87 : Label
|||||(PatSynt) a87 |- hh ▷ (hh:[a89]_(a87); ())
|||||||(Kinding) |- a89 : Type
||||||(Kinding) |- a89 : Type
||||||(Kinding) |- a87 : Label
|||||(PatSynt) a87 |- rst ▷ (rst:[(List a89)]_(a87); ())
||||(PatSynt) a87 |- (hh : rst) ▷ (hh:[a89]_(a87), rst:[(List a89)]_(a87); ())
|||||(TyUnify)  |- a88 ~ a80 ▷ (a88 ↦ a80)
|||||(TyUnify)  |- a87 ~ a81 ▷ (a87 ↦ a81)
||||(TyUnify)  |- a88@[a87] ~ a80@[a81] ▷ (a87 ↦ a81, a88 ↦ a80)
|||(PatSynt) - |- [(hh : rst)] ▷ (hh:[a89]_(a87), rst:[(List a89)]_(a87); (a87 ↦ a81, a88 ↦ a80))
|||||(TypeInf) hh:[a89]_(a87), length:[a76]_(a77), rst:[(List a89)]_(a87), xs:[a80]_(a79) |- + => ((Int@[a90] -> (Int@[a91] -> Int)); (); ⊤)
||||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||||(TypeInf) hh:[a89]_(a87), length:[a76]_(a77), rst:[(List a89)]_(a87), xs:[a80]_(a79) |- [1] => (Int@[a92]; (); ⊤)
|||||||(TyUnify)  |- Int ~ Int ▷ ()
|||||||(TyUnify)  |- a92 ~ a90 ▷ (a92 ↦ a90)
||||||(TyUnify)  |- Int@[a92] ~ Int@[a90] ▷ (a92 ↦ a90)
||||||(TyUnify)  |- (Int@[a91] -> Int) ~ a93 ▷ (a93 ↦ (Int@[a91] -> Int))
|||||(TyUnify)  |- (Int@[a90] -> (Int@[a91] -> Int)) ~ (Int@[a92] -> a93) ▷ (a92 ↦ a90, a93 ↦ (Int@[a91] -> Int))
||||(TypeInf) hh:[a89]_(a87), length:[a76]_(a77), rst:[(List a89)]_(a87), xs:[a80]_(a79) |- (+ [1]) => ((Int@[a91] -> Int); (a92 ↦ a90, a93 ↦ (Int@[a91] -> Int)); ⊤)
|||||||(Kinding) |- a77 : Label
||||||(TypeInf) length:[a76]_(a77), rst:[(List a89)]_(a87) |- length => (a76; (); ⊤)
||||||||(Kinding) |- a87 : Label
|||||||(TypeInf) rst:[(List a89)]_(a87) |- rst => ((List a89); (); ⊤)
||||||(TypeInf) length:[a76]_(a77), rst:[(List a89)]_(a87) |- [rst] => ((List a89)@[a94]; (); (a94 ≤ a87))
||||||(TyUnify)  |- a76 ~ ((List a89)@[a94] -> a95) ▷ (a76 ↦ ((List a89)@[a94] -> a95))
|||||(TypeInf) length:[a76]_(a77), rst:[(List a89)]_(a87) |- (length [rst]) => (a95; (a76 ↦ ((List a89)@[a94] -> a95)); (a94 ≤ a87))
||||(TypeInf) hh:[a89]_(a87), length:[a76]_(a77), rst:[(List a89)]_(a87), xs:[a80]_(a79) |- [(length [rst])] => (a95@[a96]; (a76 ↦ ((List a89)@[a94] -> a95)); (a94 ≤ a87) and (a96 ≤ a87) and (a96 ≤ a77))
||||||(TyUnify)  |- a95 ~ Int ▷ (a95 ↦ Int)
||||||(TyUnify)  |- a96 ~ a91 ▷ (a96 ↦ a91)
|||||(TyUnify)  |- a95@[a96] ~ Int@[a91] ▷ (a95 ↦ Int, a96 ↦ a91)
|||||(TyUnify)  |- Int ~ a97 ▷ (a97 ↦ Int)
||||(TyUnify)  |- (Int@[a91] -> Int) ~ (a95@[a96] -> a97) ▷ (a95 ↦ Int, a96 ↦ a91, a97 ↦ Int)
|||(TypeInf) hh:[a89]_(a87), length:[a76]_(a77), rst:[(List a89)]_(a87), xs:[a80]_(a79) |- ((+ [1]) [(length [rst])]) => (Int; (a93 ↦ (Int@[a91] -> Int), a95 ↦ Int, a76 ↦ ((List a89)@[a94] -> Int), a92 ↦ a90, a96 ↦ a91, a97 ↦ Int); (a94 ≤ a87) and (a96 ≤ a87) and (a96 ≤ a77))
|||(TyUnify)  |- Int ~ Int ▷ ()
||(TypeInf) length:[a76]_(a77), xs:[a80]_(a79) |- (case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}) => (Int; (a93 ↦ (Int@[a91] -> Int), a95 ↦ Int, a76 ↦ ((List a89)@[a94] -> Int), a80 ↦ (List a85), a83 ↦ a81, a84 ↦ (List a85), a84 ↦ (List a85), a87 ↦ a81, a88 ↦ (List a85), a92 ↦ a90, a96 ↦ a91, a97 ↦ Int); (a81 ≤ a79) and (a94 ≤ a87) and (a96 ≤ a87) and (a96 ≤ a77))
|(TypeInf) length:[a76]_(a77) |- (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])})) => (((List a85)@[a79] -> Int); (a93 ↦ (Int@[a91] -> Int), a95 ↦ Int, a76 ↦ ((List a89)@[a94] -> Int), a80 ↦ (List a85), a78 ↦ (List a85)@[a79], a83 ↦ a81, a84 ↦ (List a85), a84 ↦ (List a85), a87 ↦ a81, a88 ↦ (List a85), a92 ↦ a90, a96 ↦ a91, a97 ↦ Int); (a81 ≤ a79) and (a94 ≤ a87) and (a96 ≤ a87) and (a96 ≤ a77))
(TypeInf) b1:[Int]_(a74), f:[(Int@[a48] -> Int)]_(a73), g:[(Int@[a63] -> Int)]_(a72), length:[a76]_(a77), y:[Int]_(a75) |- [(\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}))] => (((List a85)@[a79] -> Int)@[a98]; (a93 ↦ (Int@[a91] -> Int), a95 ↦ Int, a76 ↦ ((List a89)@[a94] -> Int), a80 ↦ (List a85), a78 ↦ (List a85)@[a79], a83 ↦ a81, a84 ↦ (List a85), a84 ↦ (List a85), a87 ↦ a81, a88 ↦ (List a85), a92 ↦ a90, a96 ↦ a91, a97 ↦ Int); (a81 ≤ a79) and (a94 ≤ a87) and (a96 ≤ a87) and (a96 ≤ a77) and (a98 ≤ a77))

=== Inferred Types (Syntax.VL) ===
y : Int@[a38]
b1 : Int@[a42]
f : (Int@[a48] -> Int)@[a56]
g : (Int@[a63] -> Int)@[a71]
ll : ((List a85)@[a79] -> Int)@[a106]
length : ((List a85)@[a79] -> Int)@[a98]

[DEBUG] Add global env : y : Int@[a38]
b1 : Int@[a42]
f : (Int@[a48] -> Int)@[a56]
g : (Int@[a63] -> Int)@[a71]
ll : ((List a85)@[a79] -> Int)@[a106]
length : ((List a85)@[a79] -> Int)@[a98]
[DEBUG] Add global constraints : (a50 ≤ a48) and (a65 ≤ a63) and (a106 ≤ a99) and (a81 ≤ a79) and (a94 ≤ a81) and (a91 ≤ a81) and (a91 ≤ a77) and (a98 ≤ a77)
[DEBUG] Counter: 107

============================================
=== Bundling top-level symbols of module B
============================================
[DEBUG] Add bundled tenv        : b1:[Int]_(a107), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118), y:[Int]_(a121)
[DEBUG] Add bundled uenv        : a107:Label, a108:Label, a109:Label, a110:Label, a111:Label, a112:Label, a113:Label, a114:Label, a115:Label, a116:Label, a117:Label, a118:Label, a119:Label, a120:Label, a121:Label
[DEBUG] Add bundled/global constraints : (((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))) and (a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}]) and (a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}]) and (a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}]) and (a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}]) and (((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}]))) and (a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}]) and (a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}])
[DEBUG] Add bundled constraints schemes : (b1,(a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}])), (b2,(a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}])), (f,(((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}])))), (g,(a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}])), (h,(a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}])), (length,(a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}])), (ll,(a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}])), (y,(((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))))
[DEBUG] Counter     : 122
[DEBUG] globalConstraints:
(((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))) and (a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}]) and (a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}]) and (a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}]) and (a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}]) and (((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}]))) and (a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}]) and (a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a106 ≤ a99) and (a81 ≤ a79) and (a94 ≤ a81) and (a91 ≤ a81) and (a91 ≤ a77) and (a98 ≤ a77) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
B
(b1,(a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}])), (b2,(a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}])), (f,(((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}])))), (g,(a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}])), (h,(a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}])), (length,(a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}])), (ll,(a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}])), (y,(((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
A-1.0.1
A-1.0.0
Main-Root


===================================
=== Start compiling module A-1.0.1
===================================

=== AST (Syntax.Absyn) ===
module A where

import B

a = f (f y)

=== Name resolution ===
module A where

import B

a = B.f(B.fB.y)


=== Desugared AST (Syntax.Desugared) ===
module A where where
a = (f (f y))


=== Normalized AST (Syntax.Desugared) ===
module A where where
a = (f (f y))


=== AST (Syntax.VL) ===
module A where where
a = (f [(f [y])])


=== AST (Syntax.VL), after duplicating external variables ===
module A where where
a = (__f_0 [(__f_1 [__y_0])])

[DEBUG] ct     : length->0
[DEBUG] ct'    : f->2, length->0, y->1
[DEBUG] ctdiff : f->2, length->0, y->1
[DEBUG] ctstart: f->0, length->0, y->0

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : b1:[Int]_(a107), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118), y:[Int]_(a121)
[DEBUG] Imported UEnv      : a107:Label, a108:Label, a109:Label, a110:Label, a111:Label, a112:Label, a113:Label, a114:Label, a115:Label, a116:Label, a117:Label, a118:Label, a119:Label, a120:Label, a121:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __f_0:[(Int@[a110_0] -> Int)]_(a109_0), __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0), b1:[Int]_(a107), b2:[Int]_(a108), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118)
[DEBUG] Duplicated Imported UEnv        : a107:Label, a108:Label, a109_0:Label, a109_1:Label, a110_0:Label, a110_1:Label, a111:Label, a112:Label, a113:Label, a114:Label, a115:Label, a116:Label, a117:Label, a118:Label, a119:Label, a120:Label, a121_0:Label
[DEBUG] Duplicated Imported Constraints : (((a109_0 ≤ a56) and (a110_0 ≤ a48) and (a109_0 ≤ [{B:[1.0.0]}])) or ((a109_0 ≤ a20) and (a110_0 ≤ a12) and (a109_0 ≤ [{B:[1.0.1]}]))) and (((a109_1 ≤ a56) and (a110_1 ≤ a48) and (a109_1 ≤ [{B:[1.0.0]}])) or ((a109_1 ≤ a20) and (a110_1 ≤ a12) and (a109_1 ≤ [{B:[1.0.1]}]))) and (((a121_0 ≤ a38) and (a121_0 ≤ [{B:[1.0.0]}])) or ((a121_0 ≤ a2) and (a121_0 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(((a109_0 ≤ a56) and (a110_0 ≤ a48) and (a109_0 ≤ [{B:[1.0.0]}])) or ((a109_0 ≤ a20) and (a110_0 ≤ a12) and (a109_0 ≤ [{B:[1.0.1]}]))) and (((a109_1 ≤ a56) and (a110_1 ≤ a48) and (a109_1 ≤ [{B:[1.0.0]}])) or ((a109_1 ≤ a20) and (a110_1 ≤ a12) and (a109_1 ≤ [{B:[1.0.1]}]))) and (((a121_0 ≤ a38) and (a121_0 ≤ [{B:[1.0.0]}])) or ((a121_0 ≤ a2) and (a121_0 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__f_0 -> f
a109_0,
__f_1 -> f
a109_1,
__y_0 -> y
a121_0

[DEBUG] Initial Counter     : 122

=== Type Inference (Syntax.VL) ===
a : Int@[a128]
|||(Kinding) |- a109_0 : Label
||(TypeInf) __f_0:[(Int@[a110_0] -> Int)]_(a109_0), __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0) |- __f_0 => ((Int@[a110_0] -> Int); (); ⊤)
|||||(Kinding) |- a109_1 : Label
||||(TypeInf) __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0) |- __f_1 => ((Int@[a110_1] -> Int); (); ⊤)
||||||(Kinding) |- a121_0 : Label
|||||(TypeInf) __y_0:[Int]_(a121_0) |- __y_0 => (Int; (); ⊤)
||||(TypeInf) __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0) |- [__y_0] => (Int@[a124]; (); (a124 ≤ a121_0))
||||||(TyUnify)  |- Int ~ Int ▷ ()
||||||(TyUnify)  |- a124 ~ a110_1 ▷ (a124 ↦ a110_1)
|||||(TyUnify)  |- Int@[a124] ~ Int@[a110_1] ▷ (a124 ↦ a110_1)
|||||(TyUnify)  |- Int ~ a125 ▷ (a125 ↦ Int)
||||(TyUnify)  |- (Int@[a110_1] -> Int) ~ (Int@[a124] -> a125) ▷ (a124 ↦ a110_1, a125 ↦ Int)
|||(TypeInf) __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0) |- (__f_1 [__y_0]) => (Int; (a124 ↦ a110_1, a125 ↦ Int); (a124 ≤ a121_0))
||(TypeInf) __f_0:[(Int@[a110_0] -> Int)]_(a109_0), __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0) |- [(__f_1 [__y_0])] => (Int@[a126]; (a124 ↦ a110_1, a125 ↦ Int); (a124 ≤ a121_0) and (a126 ≤ a121_0) and (a126 ≤ a109_1))
||||(TyUnify)  |- Int ~ Int ▷ ()
||||(TyUnify)  |- a126 ~ a110_0 ▷ (a126 ↦ a110_0)
|||(TyUnify)  |- Int@[a126] ~ Int@[a110_0] ▷ (a126 ↦ a110_0)
|||(TyUnify)  |- Int ~ a127 ▷ (a127 ↦ Int)
||(TyUnify)  |- (Int@[a110_0] -> Int) ~ (Int@[a126] -> a127) ▷ (a126 ↦ a110_0, a127 ↦ Int)
|(TypeInf) __f_0:[(Int@[a110_0] -> Int)]_(a109_0), __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0) |- (__f_0 [(__f_1 [__y_0])]) => (Int; (a125 ↦ Int, a124 ↦ a110_1, a126 ↦ a110_0, a127 ↦ Int); (a124 ≤ a121_0) and (a126 ≤ a121_0) and (a126 ≤ a109_1))
(TypeInf) __f_0:[(Int@[a110_0] -> Int)]_(a109_0), __f_1:[(Int@[a110_1] -> Int)]_(a109_1), __y_0:[Int]_(a121_0), a:[a122]_(a123), b1:[Int]_(a107), b2:[Int]_(a108), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118) |- [(__f_0 [(__f_1 [__y_0])])] => (Int@[a128]; (a125 ↦ Int, a124 ↦ a110_1, a126 ↦ a110_0, a127 ↦ Int); (a124 ≤ a121_0) and (a126 ≤ a121_0) and (a126 ≤ a109_1) and (a128 ≤ a121_0) and (a128 ≤ a109_1) and (a128 ≤ a109_0))

=== Inferred Types (Syntax.VL) ===
a : Int@[a128]

[DEBUG] Add global env : a : Int@[a128]
[DEBUG] Add global constraints : (a110_1 ≤ a121_0) and (a110_0 ≤ a121_0) and (a110_0 ≤ a109_1) and (a128 ≤ a121_0) and (a128 ≤ a109_1) and (a128 ≤ a109_0)
[DEBUG] Counter: 129
[DEBUG] globalConstraints:
(a110_1 ≤ a121_0) and (a110_0 ≤ a121_0) and (a110_0 ≤ a109_1) and (a128 ≤ a121_0) and (a128 ≤ a109_1) and (a128 ≤ a109_0) and (((a109_0 ≤ a56) and (a110_0 ≤ a48) and (a109_0 ≤ [{B:[1.0.0]}])) or ((a109_0 ≤ a20) and (a110_0 ≤ a12) and (a109_0 ≤ [{B:[1.0.1]}]))) and (((a109_1 ≤ a56) and (a110_1 ≤ a48) and (a109_1 ≤ [{B:[1.0.0]}])) or ((a109_1 ≤ a20) and (a110_1 ≤ a12) and (a109_1 ≤ [{B:[1.0.1]}]))) and (((a121_0 ≤ a38) and (a121_0 ≤ [{B:[1.0.0]}])) or ((a121_0 ≤ a2) and (a121_0 ≤ [{B:[1.0.1]}]))) and (((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))) and (a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}]) and (a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}]) and (a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}]) and (a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}]) and (((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}]))) and (a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}]) and (a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a106 ≤ a99) and (a81 ≤ a79) and (a94 ≤ a81) and (a91 ≤ a81) and (a91 ≤ a77) and (a98 ≤ a77) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
B
(b1,(a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}])), (b2,(a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}])), (f,(((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}])))), (g,(a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}])), (h,(a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}])), (length,(a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}])), (ll,(a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}])), (y,(((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
A-1.0.0
Main-Root


===================================
=== Start compiling module A-1.0.0
===================================

=== AST (Syntax.Absyn) ===
module A where

import B

a = f y

=== Name resolution ===
module A where

import B

a = B.fB.y


=== Desugared AST (Syntax.Desugared) ===
module A where where
a = (f y)


=== Normalized AST (Syntax.Desugared) ===
module A where where
a = (f y)


=== AST (Syntax.VL) ===
module A where where
a = (f [y])


=== AST (Syntax.VL), after duplicating external variables ===
module A where where
a = (__f_2 [__y_1])

[DEBUG] ct     : f->2, length->0, y->1
[DEBUG] ct'    : f->3, length->0, y->2
[DEBUG] ctdiff : f->1, length->0, y->1
[DEBUG] ctstart: f->2, length->0, y->1

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : b1:[Int]_(a107), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118), y:[Int]_(a121)
[DEBUG] Imported UEnv      : a107:Label, a108:Label, a109:Label, a110:Label, a111:Label, a112:Label, a113:Label, a114:Label, a115:Label, a116:Label, a117:Label, a118:Label, a119:Label, a120:Label, a121:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __f_2:[(Int@[a110_2] -> Int)]_(a109_2), __y_1:[Int]_(a121_1), b1:[Int]_(a107), b2:[Int]_(a108), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118)
[DEBUG] Duplicated Imported UEnv        : a107:Label, a108:Label, a109_2:Label, a110_2:Label, a111:Label, a112:Label, a113:Label, a114:Label, a115:Label, a116:Label, a117:Label, a118:Label, a119:Label, a120:Label, a121_1:Label
[DEBUG] Duplicated Imported Constraints : (((a109_2 ≤ a56) and (a110_2 ≤ a48) and (a109_2 ≤ [{B:[1.0.0]}])) or ((a109_2 ≤ a20) and (a110_2 ≤ a12) and (a109_2 ≤ [{B:[1.0.1]}]))) and (((a121_1 ≤ a38) and (a121_1 ≤ [{B:[1.0.0]}])) or ((a121_1 ≤ a2) and (a121_1 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(((a109_2 ≤ a56) and (a110_2 ≤ a48) and (a109_2 ≤ [{B:[1.0.0]}])) or ((a109_2 ≤ a20) and (a110_2 ≤ a12) and (a109_2 ≤ [{B:[1.0.1]}]))) and (((a121_1 ≤ a38) and (a121_1 ≤ [{B:[1.0.0]}])) or ((a121_1 ≤ a2) and (a121_1 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__f_2 -> f
a109_2,
__y_1 -> y
a121_1

[DEBUG] Initial Counter     : 129

=== Type Inference (Syntax.VL) ===
a : Int@[a133]
|||(Kinding) |- a109_2 : Label
||(TypeInf) __f_2:[(Int@[a110_2] -> Int)]_(a109_2), __y_1:[Int]_(a121_1) |- __f_2 => ((Int@[a110_2] -> Int); (); ⊤)
||||(Kinding) |- a121_1 : Label
|||(TypeInf) __y_1:[Int]_(a121_1) |- __y_1 => (Int; (); ⊤)
||(TypeInf) __f_2:[(Int@[a110_2] -> Int)]_(a109_2), __y_1:[Int]_(a121_1) |- [__y_1] => (Int@[a131]; (); (a131 ≤ a121_1))
||||(TyUnify)  |- Int ~ Int ▷ ()
||||(TyUnify)  |- a131 ~ a110_2 ▷ (a131 ↦ a110_2)
|||(TyUnify)  |- Int@[a131] ~ Int@[a110_2] ▷ (a131 ↦ a110_2)
|||(TyUnify)  |- Int ~ a132 ▷ (a132 ↦ Int)
||(TyUnify)  |- (Int@[a110_2] -> Int) ~ (Int@[a131] -> a132) ▷ (a131 ↦ a110_2, a132 ↦ Int)
|(TypeInf) __f_2:[(Int@[a110_2] -> Int)]_(a109_2), __y_1:[Int]_(a121_1) |- (__f_2 [__y_1]) => (Int; (a131 ↦ a110_2, a132 ↦ Int); (a131 ≤ a121_1))
(TypeInf) __f_2:[(Int@[a110_2] -> Int)]_(a109_2), __y_1:[Int]_(a121_1), a:[a129]_(a130), b1:[Int]_(a107), b2:[Int]_(a108), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118) |- [(__f_2 [__y_1])] => (Int@[a133]; (a131 ↦ a110_2, a132 ↦ Int); (a131 ≤ a121_1) and (a133 ≤ a121_1) and (a133 ≤ a109_2))

=== Inferred Types (Syntax.VL) ===
a : Int@[a133]

[DEBUG] Add global env : a : Int@[a133]
[DEBUG] Add global constraints : (a110_2 ≤ a121_1) and (a133 ≤ a121_1) and (a133 ≤ a109_2)
[DEBUG] Counter: 134

============================================
=== Bundling top-level symbols of module A
============================================
[DEBUG] Add bundled tenv        : a:[Int]_(a134)
[DEBUG] Add bundled uenv        : a134:Label
[DEBUG] Add bundled/global constraints : (((a134 ≤ a133) and (a134 ≤ [{A:[1.0.0]}])) or ((a134 ≤ a128) and (a134 ≤ [{A:[1.0.1]}])))
[DEBUG] Add bundled constraints schemes : (a,(((a134 ≤ a133) and (a134 ≤ [{A:[1.0.0]}])) or ((a134 ≤ a128) and (a134 ≤ [{A:[1.0.1]}]))))
[DEBUG] Counter     : 135
[DEBUG] globalConstraints:
(((a134 ≤ a133) and (a134 ≤ [{A:[1.0.0]}])) or ((a134 ≤ a128) and (a134 ≤ [{A:[1.0.1]}]))) and (a110_2 ≤ a121_1) and (a133 ≤ a121_1) and (a133 ≤ a109_2) and (((a109_2 ≤ a56) and (a110_2 ≤ a48) and (a109_2 ≤ [{B:[1.0.0]}])) or ((a109_2 ≤ a20) and (a110_2 ≤ a12) and (a109_2 ≤ [{B:[1.0.1]}]))) and (((a121_1 ≤ a38) and (a121_1 ≤ [{B:[1.0.0]}])) or ((a121_1 ≤ a2) and (a121_1 ≤ [{B:[1.0.1]}]))) and (a110_1 ≤ a121_0) and (a110_0 ≤ a121_0) and (a110_0 ≤ a109_1) and (a128 ≤ a121_0) and (a128 ≤ a109_1) and (a128 ≤ a109_0) and (((a109_0 ≤ a56) and (a110_0 ≤ a48) and (a109_0 ≤ [{B:[1.0.0]}])) or ((a109_0 ≤ a20) and (a110_0 ≤ a12) and (a109_0 ≤ [{B:[1.0.1]}]))) and (((a109_1 ≤ a56) and (a110_1 ≤ a48) and (a109_1 ≤ [{B:[1.0.0]}])) or ((a109_1 ≤ a20) and (a110_1 ≤ a12) and (a109_1 ≤ [{B:[1.0.1]}]))) and (((a121_0 ≤ a38) and (a121_0 ≤ [{B:[1.0.0]}])) or ((a121_0 ≤ a2) and (a121_0 ≤ [{B:[1.0.1]}]))) and (((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))) and (a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}]) and (a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}]) and (a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}]) and (a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}]) and (((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}]))) and (a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}]) and (a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a106 ≤ a99) and (a81 ≤ a79) and (a94 ≤ a81) and (a91 ≤ a81) and (a91 ≤ a77) and (a98 ≤ a77) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
A
(a,(((a134 ≤ a133) and (a134 ≤ [{A:[1.0.0]}])) or ((a134 ≤ a128) and (a134 ≤ [{A:[1.0.1]}])))), B
(b1,(a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}])), (b2,(a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}])), (f,(((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}])))), (g,(a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}])), (h,(a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}])), (length,(a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}])), (ll,(a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}])), (y,(((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
Main-Root


===================================
=== Start compiling module Main-Root
===================================

=== AST (Syntax.Absyn) ===
module Main where

import A
import B








































main =
  let sumTpl x = case x of (x1,x2) -> x1 + x2
  in sumTpl (y,b1)






head xs = case xs of
  []     -> 0
  h:rst -> h

length xs = case xs of
  []     -> 0
  hh:rst -> 1 + length rst

=== Name resolution ===
module Main where

import A
import B








































main =
  let sumTpl x = case x of (x1,x2) -> x1 + x2
  in sumTpl (B.y,B.b1)






head xs = case xs of
  []     -> 0
  h:rst -> h

length xs = case xs of
  []     -> 0
  hh:rst -> 1 + length rst


=== Desugared AST (Syntax.Desugared) ===
module Main where where
main = ((\sumTpl.(sumTpl (y, b1))) (\x.(case x of {(x1, x2) -> ((+ x1) x2)})))

head = (\xs.(case xs of {[] -> 0; (h : rst) -> h}))

length = (\xs.(case xs of {[] -> 0; (hh : rst) -> ((+ 1) (length rst))}))


=== Normalized AST (Syntax.Desugared) ===
module Main where where
main = ((\sumTpl.(sumTpl (y, b1))) (\x.(case x of {(x1, x2) -> ((+ x1) x2)})))

head = (\xs.(case xs of {[] -> 0; (h : rst) -> h}))

length = (\xs.(case xs of {[] -> 0; (hh : rst) -> ((+ 1) (length rst))}))


=== AST (Syntax.VL) ===
module Main where where
main = ((\[sumTpl].(sumTpl [(y, b1)])) [(\[x].(case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])}))])

head = (\[xs].(case [xs] of {[[]] -> 0; [(h : rst)] -> h}))

length = (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}))


=== AST (Syntax.VL), after duplicating external variables ===
module Main where where
main = ((\[sumTpl].(sumTpl [(__y_2, __b1_0)])) [(\[x].(case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])}))])

head = (\[xs].(case [xs] of {[[]] -> 0; [(h : rst)] -> h}))

length = (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}))

[DEBUG] ct     : f->3, length->0, y->2
[DEBUG] ct'    : b1->1, f->3, length->0, y->3
[DEBUG] ctdiff : b1->1, f->0, length->0, y->1
[DEBUG] ctstart: b1->0, f->3, length->0, y->2

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : a:[Int]_(a134), b1:[Int]_(a107), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118), y:[Int]_(a121)
[DEBUG] Imported UEnv      : a107:Label, a108:Label, a109:Label, a110:Label, a111:Label, a112:Label, a113:Label, a114:Label, a115:Label, a116:Label, a117:Label, a118:Label, a119:Label, a120:Label, a121:Label, a134:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2), a:[Int]_(a134), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118)
[DEBUG] Duplicated Imported UEnv        : a107_0:Label, a108:Label, a109:Label, a110:Label, a111:Label, a112:Label, a113:Label, a114:Label, a115:Label, a116:Label, a117:Label, a118:Label, a119:Label, a120:Label, a121_2:Label, a134:Label
[DEBUG] Duplicated Imported Constraints : (a107_0 ≤ a42) and (a107_0 ≤ [{B:[1.0.0]}]) and (((a121_2 ≤ a38) and (a121_2 ≤ [{B:[1.0.0]}])) or ((a121_2 ≤ a2) and (a121_2 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(a107_0 ≤ a42) and (a107_0 ≤ [{B:[1.0.0]}]) and (((a121_2 ≤ a38) and (a121_2 ≤ [{B:[1.0.0]}])) or ((a121_2 ≤ a2) and (a121_2 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__b1_0 -> b1
a107_0,
__y_2 -> y
a121_2

[DEBUG] Initial Counter     : 135

=== Type Inference (Syntax.VL) ===
main : Int@[a159]
||||(Kinding) |- a138 : Label
|||||(Kinding) |- a139 : Type
|||||(Kinding) |- a138 : Label
||||(PatSynt) a138 |- sumTpl ▷ (sumTpl:[a139]_(a138); ())
||||(TyUnify)  |- a139@[a138] ~ a137 ▷ (a137 ↦ a139@[a138])
|||(PatSynt) - |- [sumTpl] ▷ (sumTpl:[a139]_(a138); (a137 ↦ a139@[a138]))
|||||(Kinding) |- a138 : Label
||||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2), sumTpl:[a139]_(a138) |- sumTpl => (a139; (); ⊤)
|||||||(Kinding) |- a121_2 : Label
||||||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2) |- __y_2 => (Int; (); ⊤)
|||||||(Kinding) |- a107_0 : Label
||||||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2) |- __b1_0 => (Int; (); ⊤)
|||||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2) |- (__y_2, __b1_0) => ((Tuple Int Int); (); ⊤)
||||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2), sumTpl:[a139]_(a138) |- [(__y_2, __b1_0)] => ((Tuple Int Int)@[a140]; (); (a140 ≤ a121_2) and (a140 ≤ a107_0))
||||(TyUnify)  |- a139 ~ ((Tuple Int Int)@[a140] -> a141) ▷ (a139 ↦ ((Tuple Int Int)@[a140] -> a141))
|||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2), sumTpl:[a139]_(a138) |- (sumTpl [(__y_2, __b1_0)]) => (a141; (a139 ↦ ((Tuple Int Int)@[a140] -> a141)); (a140 ≤ a121_2) and (a140 ≤ a107_0))
||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2) |- (\[sumTpl].(sumTpl [(__y_2, __b1_0)])) => ((((Tuple Int Int)@[a140] -> a141)@[a138] -> a141); (a139 ↦ ((Tuple Int Int)@[a140] -> a141), a137 ↦ ((Tuple Int Int)@[a140] -> a141)@[a138]); (a140 ≤ a121_2) and (a140 ≤ a107_0))
|||||(Kinding) |- a143 : Label
||||||(Kinding) |- a144 : Type
||||||(Kinding) |- a143 : Label
|||||(PatSynt) a143 |- x ▷ (x:[a144]_(a143); ())
|||||(TyUnify)  |- a144@[a143] ~ a142 ▷ (a142 ↦ a144@[a143])
||||(PatSynt) - |- [x] ▷ (x:[a144]_(a143); (a142 ↦ a144@[a143]))
|||||||(Kinding) |- a143 : Label
||||||(TypeInf) x:[a144]_(a143) |- x => (a144; (); ⊤)
|||||(TypeInf) x:[a144]_(a143) |- [x] => (a144@[a145]; (); (a145 ≤ a143))
||||||(Kinding) |- a147 : Label
|||||||(TyUnify)  |- (Tuple a149 a150) ~ a148 ▷ (a148 ↦ (Tuple a149 a150))
|||||||(Kinding) |- a149 : Type
||||||||(Kinding) |- a149 : Type
||||||||(Kinding) |- a147 : Label
|||||||(PatSynt) a147 |- x1 ▷ (x1:[a149]_(a147); ())
|||||||(Kinding) |- a150 : Type
||||||||(Kinding) |- a150 : Type
||||||||(Kinding) |- a147 : Label
|||||||(PatSynt) a147 |- x2 ▷ (x2:[a150]_(a147); ())
||||||(PatSynt) a147 |- (x1, x2) ▷ (x1:[a149]_(a147), x2:[a150]_(a147); (a148 ↦ (Tuple a149 a150)))
|||||||(TyUnify)  |- a148 ~ a144 ▷ (a148 ↦ a144)
|||||||(TyUnify)  |- a147 ~ a145 ▷ (a147 ↦ a145)
||||||(TyUnify)  |- a148@[a147] ~ a144@[a145] ▷ (a147 ↦ a145, a148 ↦ a144)
||||||(TyUnify)  |- (Tuple a149 a150) ~ a144 ▷ (a144 ↦ (Tuple a149 a150))
|||||(PatSynt) - |- [(x1, x2)] ▷ (x1:[a149]_(a147), x2:[a150]_(a147); (a144 ↦ (Tuple a149 a150), a147 ↦ a145, a148 ↦ (Tuple a149 a150), a148 ↦ (Tuple a149 a150)))
|||||||(TypeInf) x:[a144]_(a143), x1:[a149]_(a147), x2:[a150]_(a147) |- + => ((Int@[a151] -> (Int@[a152] -> Int)); (); ⊤)
|||||||||(Kinding) |- a147 : Label
||||||||(TypeInf) x1:[a149]_(a147) |- x1 => (a149; (); ⊤)
|||||||(TypeInf) x:[a144]_(a143), x1:[a149]_(a147), x2:[a150]_(a147) |- [x1] => (a149@[a153]; (); (a153 ≤ a147))
|||||||||(TyUnify)  |- a149 ~ Int ▷ (a149 ↦ Int)
|||||||||(TyUnify)  |- a153 ~ a151 ▷ (a153 ↦ a151)
||||||||(TyUnify)  |- a149@[a153] ~ Int@[a151] ▷ (a149 ↦ Int, a153 ↦ a151)
||||||||(TyUnify)  |- (Int@[a152] -> Int) ~ a154 ▷ (a154 ↦ (Int@[a152] -> Int))
|||||||(TyUnify)  |- (Int@[a151] -> (Int@[a152] -> Int)) ~ (a149@[a153] -> a154) ▷ (a149 ↦ Int, a153 ↦ a151, a154 ↦ (Int@[a152] -> Int))
||||||(TypeInf) x:[a144]_(a143), x1:[a149]_(a147), x2:[a150]_(a147) |- (+ [x1]) => ((Int@[a152] -> Int); (a149 ↦ Int, a153 ↦ a151, a154 ↦ (Int@[a152] -> Int)); (a153 ≤ a147))
||||||||(Kinding) |- a147 : Label
|||||||(TypeInf) x2:[a150]_(a147) |- x2 => (a150; (); ⊤)
||||||(TypeInf) x:[a144]_(a143), x1:[a149]_(a147), x2:[a150]_(a147) |- [x2] => (a150@[a155]; (); (a155 ≤ a147))
||||||||(TyUnify)  |- a150 ~ Int ▷ (a150 ↦ Int)
||||||||(TyUnify)  |- a155 ~ a152 ▷ (a155 ↦ a152)
|||||||(TyUnify)  |- a150@[a155] ~ Int@[a152] ▷ (a150 ↦ Int, a155 ↦ a152)
|||||||(TyUnify)  |- Int ~ a156 ▷ (a156 ↦ Int)
||||||(TyUnify)  |- (Int@[a152] -> Int) ~ (a150@[a155] -> a156) ▷ (a150 ↦ Int, a155 ↦ a152, a156 ↦ Int)
|||||(TypeInf) x:[a144]_(a143), x1:[a149]_(a147), x2:[a150]_(a147) |- ((+ [x1]) [x2]) => (Int; (a154 ↦ (Int@[a152] -> Int), a149 ↦ Int, a150 ↦ Int, a153 ↦ a151, a155 ↦ a152, a156 ↦ Int); (a153 ≤ a147) and (a155 ≤ a147))
||||(TypeInf) x:[a144]_(a143) |- (case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])}) => (Int; (a154 ↦ (Int@[a152] -> Int), a144 ↦ (Tuple Int Int), a147 ↦ a145, a148 ↦ (Tuple Int Int), a148 ↦ (Tuple Int Int), a149 ↦ Int, a150 ↦ Int, a153 ↦ a151, a155 ↦ a152, a156 ↦ Int); (a145 ≤ a143) and (a153 ≤ a147) and (a155 ≤ a147))
|||(TypeInf) {} |- (\[x].(case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])})) => (((Tuple Int Int)@[a143] -> Int); (a154 ↦ (Int@[a152] -> Int), a144 ↦ (Tuple Int Int), a142 ↦ (Tuple Int Int)@[a143], a147 ↦ a145, a148 ↦ (Tuple Int Int), a148 ↦ (Tuple Int Int), a149 ↦ Int, a150 ↦ Int, a153 ↦ a151, a155 ↦ a152, a156 ↦ Int); (a145 ≤ a143) and (a153 ≤ a147) and (a155 ≤ a147))
||(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2) |- [(\[x].(case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])}))] => (((Tuple Int Int)@[a143] -> Int)@[a157]; (a154 ↦ (Int@[a152] -> Int), a144 ↦ (Tuple Int Int), a142 ↦ (Tuple Int Int)@[a143], a147 ↦ a145, a148 ↦ (Tuple Int Int), a148 ↦ (Tuple Int Int), a149 ↦ Int, a150 ↦ Int, a153 ↦ a151, a155 ↦ a152, a156 ↦ Int); (a145 ≤ a143) and (a153 ≤ a147) and (a155 ≤ a147))
|||||||(TyUnify)  |- Int ~ Int ▷ ()
|||||||(TyUnify)  |- Int ~ Int ▷ ()
||||||(TyUnify)  |- (Tuple Int Int) ~ (Tuple Int Int) ▷ ()
||||||(TyUnify)  |- a140 ~ a143 ▷ (a140 ↦ a143)
|||||(TyUnify)  |- (Tuple Int Int)@[a140] ~ (Tuple Int Int)@[a143] ▷ (a140 ↦ a143)
|||||(TyUnify)  |- Int ~ a141 ▷ (a141 ↦ Int)
||||(TyUnify)  |- ((Tuple Int Int)@[a143] -> Int) ~ ((Tuple Int Int)@[a140] -> a141) ▷ (a141 ↦ Int, a140 ↦ a143)
||||(TyUnify)  |- a157 ~ a138 ▷ (a157 ↦ a138)
|||(TyUnify)  |- ((Tuple Int Int)@[a143] -> Int)@[a157] ~ ((Tuple Int Int)@[a140] -> a141)@[a138] ▷ (a141 ↦ Int, a140 ↦ a143, a157 ↦ a138)
|||(TyUnify)  |- Int ~ a158 ▷ (a158 ↦ Int)
||(TyUnify)  |- (((Tuple Int Int)@[a140] -> a141)@[a138] -> a141) ~ (((Tuple Int Int)@[a143] -> Int)@[a157] -> a158) ▷ (a141 ↦ Int, a140 ↦ a143, a157 ↦ a138, a158 ↦ Int)
|(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2) |- ((\[sumTpl].(sumTpl [(__y_2, __b1_0)])) [(\[x].(case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])}))]) => (Int; (a154 ↦ (Int@[a152] -> Int), a156 ↦ Int, a141 ↦ Int, a137 ↦ ((Tuple Int Int)@[a143] -> Int)@[a138], a139 ↦ ((Tuple Int Int)@[a143] -> Int), a140 ↦ a143, a142 ↦ (Tuple Int Int)@[a143], a144 ↦ (Tuple Int Int), a147 ↦ a145, a148 ↦ (Tuple Int Int), a148 ↦ (Tuple Int Int), a149 ↦ Int, a150 ↦ Int, a153 ↦ a151, a155 ↦ a152, a157 ↦ a138, a158 ↦ Int); (a140 ≤ a121_2) and (a140 ≤ a107_0) and (a145 ≤ a143) and (a153 ≤ a147) and (a155 ≤ a147))
(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2), a:[Int]_(a134), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118), main:[a135]_(a136) |- [((\[sumTpl].(sumTpl [(__y_2, __b1_0)])) [(\[x].(case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])}))])] => (Int@[a159]; (a154 ↦ (Int@[a152] -> Int), a156 ↦ Int, a141 ↦ Int, a137 ↦ ((Tuple Int Int)@[a143] -> Int)@[a138], a139 ↦ ((Tuple Int Int)@[a143] -> Int), a140 ↦ a143, a142 ↦ (Tuple Int Int)@[a143], a144 ↦ (Tuple Int Int), a147 ↦ a145, a148 ↦ (Tuple Int Int), a148 ↦ (Tuple Int Int), a149 ↦ Int, a150 ↦ Int, a153 ↦ a151, a155 ↦ a152, a157 ↦ a138, a158 ↦ Int); (a140 ≤ a121_2) and (a140 ≤ a107_0) and (a145 ≤ a143) and (a153 ≤ a147) and (a155 ≤ a147) and (a159 ≤ a121_2) and (a159 ≤ a107_0))
head : ((List a170)@[a164] -> Int)@[a175]
|||(Kinding) |- a164 : Label
||||(Kinding) |- a165 : Type
||||(Kinding) |- a164 : Label
|||(PatSynt) a164 |- xs ▷ (xs:[a165]_(a164); ())
|||(TyUnify)  |- a165@[a164] ~ a163 ▷ (a163 ↦ a165@[a164])
||(PatSynt) - |- [xs] ▷ (xs:[a165]_(a164); (a163 ↦ a165@[a164]))
|||||(Kinding) |- a164 : Label
||||(TypeInf) xs:[a165]_(a164) |- xs => (a165; (); ⊤)
|||(TypeInf) xs:[a165]_(a164) |- [xs] => (a165@[a166]; (); (a166 ≤ a164))
||||(Kinding) |- a168 : Label
|||||(TyUnify)  |- (List a170) ~ a169 ▷ (a169 ↦ (List a170))
||||(PatSynt) a168 |- [] ▷ ({}; (a169 ↦ (List a170)))
|||||(TyUnify)  |- a169 ~ a165 ▷ (a169 ↦ a165)
|||||(TyUnify)  |- a168 ~ a166 ▷ (a168 ↦ a166)
||||(TyUnify)  |- a169@[a168] ~ a165@[a166] ▷ (a168 ↦ a166, a169 ↦ a165)
||||(TyUnify)  |- (List a170) ~ a165 ▷ (a165 ↦ (List a170))
|||(PatSynt) - |- [[]] ▷ ({}; (a165 ↦ (List a170), a168 ↦ a166, a169 ↦ (List a170), a169 ↦ (List a170)))
|||(TypeInf) xs:[a165]_(a164) |- 0 => (Int; (); ⊤)
||||(Kinding) |- a172 : Label
||||||(Kinding) |- a174 : Type
||||||(Kinding) |- a172 : Label
|||||(PatSynt) a172 |- h ▷ (h:[a174]_(a172); ())
|||||||(Kinding) |- a174 : Type
||||||(Kinding) |- a174 : Type
||||||(Kinding) |- a172 : Label
|||||(PatSynt) a172 |- rst ▷ (rst:[(List a174)]_(a172); ())
||||(PatSynt) a172 |- (h : rst) ▷ (h:[a174]_(a172), rst:[(List a174)]_(a172); ())
|||||(TyUnify)  |- a173 ~ a165 ▷ (a173 ↦ a165)
|||||(TyUnify)  |- a172 ~ a166 ▷ (a172 ↦ a166)
||||(TyUnify)  |- a173@[a172] ~ a165@[a166] ▷ (a172 ↦ a166, a173 ↦ a165)
|||(PatSynt) - |- [(h : rst)] ▷ (h:[a174]_(a172), rst:[(List a174)]_(a172); (a172 ↦ a166, a173 ↦ a165))
||||(Kinding) |- a172 : Label
|||(TypeInf) h:[a174]_(a172), rst:[(List a174)]_(a172), xs:[a165]_(a164) |- h => (a174; (); ⊤)
|||(TyUnify)  |- a174 ~ Int ▷ (a174 ↦ Int)
||(TypeInf) xs:[a165]_(a164) |- (case [xs] of {[[]] -> 0; [(h : rst)] -> h}) => (Int; (a165 ↦ (List a170), a168 ↦ a166, a169 ↦ (List a170), a169 ↦ (List a170), a172 ↦ a166, a173 ↦ (List a170), a174 ↦ Int); (a166 ≤ a164))
|(TypeInf) {} |- (\[xs].(case [xs] of {[[]] -> 0; [(h : rst)] -> h})) => (((List a170)@[a164] -> Int); (a165 ↦ (List a170), a163 ↦ (List a170)@[a164], a168 ↦ a166, a169 ↦ (List a170), a169 ↦ (List a170), a172 ↦ a166, a173 ↦ (List a170), a174 ↦ Int); (a166 ≤ a164))
(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2), a:[Int]_(a134), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), head:[a161]_(a162), length:[((List a117)@[a116] -> Int)]_(a115), ll:[((List a120)@[a119] -> Int)]_(a118), main:[Int]_(a160) |- [(\[xs].(case [xs] of {[[]] -> 0; [(h : rst)] -> h}))] => (((List a170)@[a164] -> Int)@[a175]; (a165 ↦ (List a170), a163 ↦ (List a170)@[a164], a168 ↦ a166, a169 ↦ (List a170), a169 ↦ (List a170), a172 ↦ a166, a173 ↦ (List a170), a174 ↦ Int); (a166 ≤ a164))
length : ((List a187)@[a181] -> Int)@[a200]
|||(Kinding) |- a181 : Label
||||(Kinding) |- a182 : Type
||||(Kinding) |- a181 : Label
|||(PatSynt) a181 |- xs ▷ (xs:[a182]_(a181); ())
|||(TyUnify)  |- a182@[a181] ~ a180 ▷ (a180 ↦ a182@[a181])
||(PatSynt) - |- [xs] ▷ (xs:[a182]_(a181); (a180 ↦ a182@[a181]))
|||||(Kinding) |- a181 : Label
||||(TypeInf) xs:[a182]_(a181) |- xs => (a182; (); ⊤)
|||(TypeInf) length:[a178]_(a179), xs:[a182]_(a181) |- [xs] => (a182@[a183]; (); (a183 ≤ a181))
||||(Kinding) |- a185 : Label
|||||(TyUnify)  |- (List a187) ~ a186 ▷ (a186 ↦ (List a187))
||||(PatSynt) a185 |- [] ▷ ({}; (a186 ↦ (List a187)))
|||||(TyUnify)  |- a186 ~ a182 ▷ (a186 ↦ a182)
|||||(TyUnify)  |- a185 ~ a183 ▷ (a185 ↦ a183)
||||(TyUnify)  |- a186@[a185] ~ a182@[a183] ▷ (a185 ↦ a183, a186 ↦ a182)
||||(TyUnify)  |- (List a187) ~ a182 ▷ (a182 ↦ (List a187))
|||(PatSynt) - |- [[]] ▷ ({}; (a182 ↦ (List a187), a185 ↦ a183, a186 ↦ (List a187), a186 ↦ (List a187)))
|||(TypeInf) length:[a178]_(a179), xs:[a182]_(a181) |- 0 => (Int; (); ⊤)
||||(Kinding) |- a189 : Label
||||||(Kinding) |- a191 : Type
||||||(Kinding) |- a189 : Label
|||||(PatSynt) a189 |- hh ▷ (hh:[a191]_(a189); ())
|||||||(Kinding) |- a191 : Type
||||||(Kinding) |- a191 : Type
||||||(Kinding) |- a189 : Label
|||||(PatSynt) a189 |- rst ▷ (rst:[(List a191)]_(a189); ())
||||(PatSynt) a189 |- (hh : rst) ▷ (hh:[a191]_(a189), rst:[(List a191)]_(a189); ())
|||||(TyUnify)  |- a190 ~ a182 ▷ (a190 ↦ a182)
|||||(TyUnify)  |- a189 ~ a183 ▷ (a189 ↦ a183)
||||(TyUnify)  |- a190@[a189] ~ a182@[a183] ▷ (a189 ↦ a183, a190 ↦ a182)
|||(PatSynt) - |- [(hh : rst)] ▷ (hh:[a191]_(a189), rst:[(List a191)]_(a189); (a189 ↦ a183, a190 ↦ a182))
|||||(TypeInf) hh:[a191]_(a189), length:[a178]_(a179), rst:[(List a191)]_(a189), xs:[a182]_(a181) |- + => ((Int@[a192] -> (Int@[a193] -> Int)); (); ⊤)
||||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||||(TypeInf) hh:[a191]_(a189), length:[a178]_(a179), rst:[(List a191)]_(a189), xs:[a182]_(a181) |- [1] => (Int@[a194]; (); ⊤)
|||||||(TyUnify)  |- Int ~ Int ▷ ()
|||||||(TyUnify)  |- a194 ~ a192 ▷ (a194 ↦ a192)
||||||(TyUnify)  |- Int@[a194] ~ Int@[a192] ▷ (a194 ↦ a192)
||||||(TyUnify)  |- (Int@[a193] -> Int) ~ a195 ▷ (a195 ↦ (Int@[a193] -> Int))
|||||(TyUnify)  |- (Int@[a192] -> (Int@[a193] -> Int)) ~ (Int@[a194] -> a195) ▷ (a194 ↦ a192, a195 ↦ (Int@[a193] -> Int))
||||(TypeInf) hh:[a191]_(a189), length:[a178]_(a179), rst:[(List a191)]_(a189), xs:[a182]_(a181) |- (+ [1]) => ((Int@[a193] -> Int); (a194 ↦ a192, a195 ↦ (Int@[a193] -> Int)); ⊤)
|||||||(Kinding) |- a179 : Label
||||||(TypeInf) length:[a178]_(a179), rst:[(List a191)]_(a189) |- length => (a178; (); ⊤)
||||||||(Kinding) |- a189 : Label
|||||||(TypeInf) rst:[(List a191)]_(a189) |- rst => ((List a191); (); ⊤)
||||||(TypeInf) length:[a178]_(a179), rst:[(List a191)]_(a189) |- [rst] => ((List a191)@[a196]; (); (a196 ≤ a189))
||||||(TyUnify)  |- a178 ~ ((List a191)@[a196] -> a197) ▷ (a178 ↦ ((List a191)@[a196] -> a197))
|||||(TypeInf) length:[a178]_(a179), rst:[(List a191)]_(a189) |- (length [rst]) => (a197; (a178 ↦ ((List a191)@[a196] -> a197)); (a196 ≤ a189))
||||(TypeInf) hh:[a191]_(a189), length:[a178]_(a179), rst:[(List a191)]_(a189), xs:[a182]_(a181) |- [(length [rst])] => (a197@[a198]; (a178 ↦ ((List a191)@[a196] -> a197)); (a196 ≤ a189) and (a198 ≤ a189) and (a198 ≤ a179))
||||||(TyUnify)  |- a197 ~ Int ▷ (a197 ↦ Int)
||||||(TyUnify)  |- a198 ~ a193 ▷ (a198 ↦ a193)
|||||(TyUnify)  |- a197@[a198] ~ Int@[a193] ▷ (a197 ↦ Int, a198 ↦ a193)
|||||(TyUnify)  |- Int ~ a199 ▷ (a199 ↦ Int)
||||(TyUnify)  |- (Int@[a193] -> Int) ~ (a197@[a198] -> a199) ▷ (a197 ↦ Int, a198 ↦ a193, a199 ↦ Int)
|||(TypeInf) hh:[a191]_(a189), length:[a178]_(a179), rst:[(List a191)]_(a189), xs:[a182]_(a181) |- ((+ [1]) [(length [rst])]) => (Int; (a195 ↦ (Int@[a193] -> Int), a197 ↦ Int, a178 ↦ ((List a191)@[a196] -> Int), a194 ↦ a192, a198 ↦ a193, a199 ↦ Int); (a196 ≤ a189) and (a198 ≤ a189) and (a198 ≤ a179))
|||(TyUnify)  |- Int ~ Int ▷ ()
||(TypeInf) length:[a178]_(a179), xs:[a182]_(a181) |- (case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}) => (Int; (a195 ↦ (Int@[a193] -> Int), a197 ↦ Int, a178 ↦ ((List a191)@[a196] -> Int), a182 ↦ (List a187), a185 ↦ a183, a186 ↦ (List a187), a186 ↦ (List a187), a189 ↦ a183, a190 ↦ (List a187), a194 ↦ a192, a198 ↦ a193, a199 ↦ Int); (a183 ≤ a181) and (a196 ≤ a189) and (a198 ≤ a189) and (a198 ≤ a179))
|(TypeInf) length:[a178]_(a179) |- (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])})) => (((List a187)@[a181] -> Int); (a195 ↦ (Int@[a193] -> Int), a197 ↦ Int, a178 ↦ ((List a191)@[a196] -> Int), a182 ↦ (List a187), a180 ↦ (List a187)@[a181], a185 ↦ a183, a186 ↦ (List a187), a186 ↦ (List a187), a189 ↦ a183, a190 ↦ (List a187), a194 ↦ a192, a198 ↦ a193, a199 ↦ Int); (a183 ≤ a181) and (a196 ≤ a189) and (a198 ≤ a189) and (a198 ≤ a179))
(TypeInf) __b1_0:[Int]_(a107_0), __y_2:[Int]_(a121_2), a:[Int]_(a134), b2:[Int]_(a108), f:[(Int@[a110] -> Int)]_(a109), g:[(Int@[a112] -> Int)]_(a111), h:[(Int@[a114] -> Int)]_(a113), head:[((List a170)@[a164] -> Int)]_(a176), length:[a178]_(a179), ll:[((List a120)@[a119] -> Int)]_(a118), main:[Int]_(a177) |- [(\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])}))] => (((List a187)@[a181] -> Int)@[a200]; (a195 ↦ (Int@[a193] -> Int), a197 ↦ Int, a178 ↦ ((List a191)@[a196] -> Int), a182 ↦ (List a187), a180 ↦ (List a187)@[a181], a185 ↦ a183, a186 ↦ (List a187), a186 ↦ (List a187), a189 ↦ a183, a190 ↦ (List a187), a194 ↦ a192, a198 ↦ a193, a199 ↦ Int); (a183 ≤ a181) and (a196 ≤ a189) and (a198 ≤ a189) and (a198 ≤ a179) and (a200 ≤ a179))

=== Inferred Types (Syntax.VL) ===
main : Int@[a159]
head : ((List a170)@[a164] -> Int)@[a175]
length : ((List a187)@[a181] -> Int)@[a200]

[DEBUG] Add global env : main : Int@[a159]
head : ((List a170)@[a164] -> Int)@[a175]
length : ((List a187)@[a181] -> Int)@[a200]
[DEBUG] Add global constraints : (a143 ≤ a121_2) and (a143 ≤ a107_0) and (a145 ≤ a143) and (a151 ≤ a145) and (a152 ≤ a145) and (a159 ≤ a121_2) and (a159 ≤ a107_0) and (a166 ≤ a164) and (a183 ≤ a181) and (a196 ≤ a183) and (a193 ≤ a183) and (a193 ≤ a179) and (a200 ≤ a179)
[DEBUG] Counter: 201
[DEBUG] globalConstraints:
(a143 ≤ a121_2) and (a143 ≤ a107_0) and (a145 ≤ a143) and (a151 ≤ a145) and (a152 ≤ a145) and (a159 ≤ a121_2) and (a159 ≤ a107_0) and (a166 ≤ a164) and (a183 ≤ a181) and (a196 ≤ a183) and (a193 ≤ a183) and (a193 ≤ a179) and (a200 ≤ a179) and (a107_0 ≤ a42) and (a107_0 ≤ [{B:[1.0.0]}]) and (((a121_2 ≤ a38) and (a121_2 ≤ [{B:[1.0.0]}])) or ((a121_2 ≤ a2) and (a121_2 ≤ [{B:[1.0.1]}]))) and (((a134 ≤ a133) and (a134 ≤ [{A:[1.0.0]}])) or ((a134 ≤ a128) and (a134 ≤ [{A:[1.0.1]}]))) and (a110_2 ≤ a121_1) and (a133 ≤ a121_1) and (a133 ≤ a109_2) and (((a109_2 ≤ a56) and (a110_2 ≤ a48) and (a109_2 ≤ [{B:[1.0.0]}])) or ((a109_2 ≤ a20) and (a110_2 ≤ a12) and (a109_2 ≤ [{B:[1.0.1]}]))) and (((a121_1 ≤ a38) and (a121_1 ≤ [{B:[1.0.0]}])) or ((a121_1 ≤ a2) and (a121_1 ≤ [{B:[1.0.1]}]))) and (a110_1 ≤ a121_0) and (a110_0 ≤ a121_0) and (a110_0 ≤ a109_1) and (a128 ≤ a121_0) and (a128 ≤ a109_1) and (a128 ≤ a109_0) and (((a109_0 ≤ a56) and (a110_0 ≤ a48) and (a109_0 ≤ [{B:[1.0.0]}])) or ((a109_0 ≤ a20) and (a110_0 ≤ a12) and (a109_0 ≤ [{B:[1.0.1]}]))) and (((a109_1 ≤ a56) and (a110_1 ≤ a48) and (a109_1 ≤ [{B:[1.0.0]}])) or ((a109_1 ≤ a20) and (a110_1 ≤ a12) and (a109_1 ≤ [{B:[1.0.1]}]))) and (((a121_0 ≤ a38) and (a121_0 ≤ [{B:[1.0.0]}])) or ((a121_0 ≤ a2) and (a121_0 ≤ [{B:[1.0.1]}]))) and (((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))) and (a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}]) and (a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}]) and (a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}]) and (a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}]) and (((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}]))) and (a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}]) and (a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a106 ≤ a99) and (a81 ≤ a79) and (a94 ≤ a81) and (a91 ≤ a81) and (a91 ≤ a77) and (a98 ≤ a77) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
A
(a,(((a134 ≤ a133) and (a134 ≤ [{A:[1.0.0]}])) or ((a134 ≤ a128) and (a134 ≤ [{A:[1.0.1]}])))), B
(b1,(a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}])), (b2,(a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}])), (f,(((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}])))), (g,(a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}])), (h,(a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}])), (length,(a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}])), (ll,(a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}])), (y,(((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
None

=== External Variables ===
__b1_0 Main-Root a107_0
__f_0 A-1.0.1 a109_0
__f_1 A-1.0.1 a109_1
__f_2 A-1.0.0 a109_2
__y_0 A-1.0.1 a121_0
__y_1 A-1.0.0 a121_1
__y_2 Main-Root a121_2

=== Constraints ===
(a143 ≤ a121_2) and (a143 ≤ a107_0) and (a145 ≤ a143) and (a151 ≤ a145) and (a152 ≤ a145) and (a159 ≤ a121_2) and (a159 ≤ a107_0) and (a166 ≤ a164) and (a183 ≤ a181) and (a196 ≤ a183) and (a193 ≤ a183) and (a193 ≤ a179) and (a200 ≤ a179) and (a107_0 ≤ a42) and (a107_0 ≤ [{B:[1.0.0]}]) and (((a121_2 ≤ a38) and (a121_2 ≤ [{B:[1.0.0]}])) or ((a121_2 ≤ a2) and (a121_2 ≤ [{B:[1.0.1]}]))) and (((a134 ≤ a133) and (a134 ≤ [{A:[1.0.0]}])) or ((a134 ≤ a128) and (a134 ≤ [{A:[1.0.1]}]))) and (a110_2 ≤ a121_1) and (a133 ≤ a121_1) and (a133 ≤ a109_2) and (((a109_2 ≤ a56) and (a110_2 ≤ a48) and (a109_2 ≤ [{B:[1.0.0]}])) or ((a109_2 ≤ a20) and (a110_2 ≤ a12) and (a109_2 ≤ [{B:[1.0.1]}]))) and (((a121_1 ≤ a38) and (a121_1 ≤ [{B:[1.0.0]}])) or ((a121_1 ≤ a2) and (a121_1 ≤ [{B:[1.0.1]}]))) and (a110_1 ≤ a121_0) and (a110_0 ≤ a121_0) and (a110_0 ≤ a109_1) and (a128 ≤ a121_0) and (a128 ≤ a109_1) and (a128 ≤ a109_0) and (((a109_0 ≤ a56) and (a110_0 ≤ a48) and (a109_0 ≤ [{B:[1.0.0]}])) or ((a109_0 ≤ a20) and (a110_0 ≤ a12) and (a109_0 ≤ [{B:[1.0.1]}]))) and (((a109_1 ≤ a56) and (a110_1 ≤ a48) and (a109_1 ≤ [{B:[1.0.0]}])) or ((a109_1 ≤ a20) and (a110_1 ≤ a12) and (a109_1 ≤ [{B:[1.0.1]}]))) and (((a121_0 ≤ a38) and (a121_0 ≤ [{B:[1.0.0]}])) or ((a121_0 ≤ a2) and (a121_0 ≤ [{B:[1.0.1]}]))) and (((a121 ≤ a38) and (a121 ≤ [{B:[1.0.0]}])) or ((a121 ≤ a2) and (a121 ≤ [{B:[1.0.1]}]))) and (a118 ≤ a106) and (a119 ≤ a79) and (a120 ≤ a85) and (a118 ≤ [{B:[1.0.0]}]) and (a115 ≤ a98) and (a116 ≤ a79) and (a117 ≤ a85) and (a115 ≤ [{B:[1.0.0]}]) and (a113 ≤ a35) and (a114 ≤ a27) and (a113 ≤ [{B:[1.0.1]}]) and (a111 ≤ a71) and (a112 ≤ a63) and (a111 ≤ [{B:[1.0.0]}]) and (((a109 ≤ a56) and (a110 ≤ a48) and (a109 ≤ [{B:[1.0.0]}])) or ((a109 ≤ a20) and (a110 ≤ a12) and (a109 ≤ [{B:[1.0.1]}]))) and (a108 ≤ a6) and (a108 ≤ [{B:[1.0.1]}]) and (a107 ≤ a42) and (a107 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a106 ≤ a99) and (a81 ≤ a79) and (a94 ≤ a81) and (a91 ≤ a81) and (a91 ≤ a77) and (a98 ≤ a77) and (a14 ≤ a12) and (a29 ≤ a27)

=== Solver result ===
a106 : {}
a107 : {B:[1.0.0]}
a107_0 : {B:[1.0.0]}
a108 : {B:[1.0.1]}
a109 : {B:[1.0.1]}
a109_0 : {B:[1.0.1]}
a109_1 : {B:[1.0.1]}
a109_2 : {B:[1.0.1]}
a110 : {}
a110_0 : {B:[1.0.1]}
a110_1 : {B:[1.0.1]}
a110_2 : {B:[1.0.1]}
a111 : {B:[1.0.0]}
a112 : {}
a113 : {B:[1.0.1]}
a114 : {}
a115 : {B:[1.0.0]}
a116 : {}
a117 : {}
a118 : {B:[1.0.0]}
a119 : {}
a12 : {}
a120 : {}
a121 : {B:[1.0.1]}
a121_0 : {B:[1.0.1]}
a121_1 : {B:[1.0.1]}
a121_2 : {B:[1.0.0]}
a128 : {B:[1.0.1]}
a133 : {B:[1.0.1]}
a134 : {A:[1.0.1], B:[1.0.1]}
a14 : {}
a143 : {B:[1.0.0]}
a145 : {B:[1.0.0]}
a151 : {B:[1.0.0]}
a152 : {B:[1.0.0]}
a159 : {B:[1.0.0]}
a164 : {}
a166 : {}
a179 : {}
a181 : {}
a183 : {}
a193 : {}
a196 : {}
a2 : {}
a20 : {}
a200 : {}
a27 : {}
a29 : {}
a35 : {}
a38 : {}
a42 : {}
a48 : {}
a50 : {}
a56 : {}
a6 : {}
a63 : {}
a65 : {}
a71 : {}
a77 : {}
a79 : {}
a81 : {}
a85 : {}
a91 : {}
a94 : {}
a98 : {}
a99 : {}

=== Labels of External Variables ===
__b1_0 : b1 : Main-Root : a107_0 : {B:[1.0.0]}
__f_0 : f : A-1.0.1 : a109_0 : {B:[1.0.1]}
__f_1 : f : A-1.0.1 : a109_1 : {B:[1.0.1]}
__f_2 : f : A-1.0.0 : a109_2 : {B:[1.0.1]}
__y_0 : y : A-1.0.1 : a121_0 : {B:[1.0.1]}
__y_1 : y : A-1.0.0 : a121_1 : {B:[1.0.1]}
__y_2 : y : Main-Root : a121_2 : {B:[1.0.0]}

=== Prettyprint ===

-- A v1.0.0
module A where
import B
a = f y

-- A v1.0.1
module A where
import B
a = f (f y)

-- B v1.0.0
module B where
y = 1
b1 = 1
f x = x + 1
g x = x + 1
ll = length
length xs
  = case xs of
        [] -> 0
        hh : rst -> 1 + length rst

-- B v1.0.1
module B where
y = 2
b2 = 2
f x = x + 2
h x = x * 1

-- Main vRoot
module Main where
import A
import B
main
  = let sumTpl x
          = case x of
                (x1, x2) -> x1 + x2
      in sumTpl (y, b1)
head xs
  = case xs of
        [] -> 0
        h : rst -> h
length xs
  = case xs of
        [] -> 0
        hh : rst -> 1 + length rst

=== VLDecls ===
A-1.0.0 : a = (__f_2 [__y_1])
A-1.0.1 : a = (__f_0 [(__f_1 [__y_0])])
B-1.0.0 : b1 = 1, f = (\[x].((+ [x]) [1])), g = (\[x].((+ [x]) [1])), length = (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])})), ll = length, y = 1
B-1.0.1 : b2 = 2, f = (\[x].((+ [x]) [2])), h = (\[x].((* [x]) [1])), y = 2
Main-Root : head = (\[xs].(case [xs] of {[[]] -> 0; [(h : rst)] -> h})), length = (\[xs].(case [xs] of {[[]] -> 0; [(hh : rst)] -> ((+ [1]) [(length [rst])])})), main = ((\[sumTpl].(sumTpl [(__y_2, __b1_0)])) [(\[x].(case [x] of {[(x1, x2)] -> ((+ [x1]) [x2])}))])

=== Extraction ===
(\ sumTpl -> sumTpl (1, 1))
  (\ x ->
     case x of
         (x1, x2) -> (+) x1 x2)
