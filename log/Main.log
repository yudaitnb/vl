=== Parsing ===
[DEBUG] rootDirPath : ./examples/
[DEBUG] logDirPath  : ./log/
[DEBUG] validExt    : .hs
[DEBUG] Start parsing Main-Root
[DEBUG] Start parsing A-TBD
[DEBUG] Versions found : [1.0.0, 1.0.1]
[DEBUG] Start parsing B-TBD
[DEBUG] Versions found : [1.0.0, 1.0.1]
[DEBUG] There are no rest modules to parse.
=== Parsed Modules ===
=== A-1.0.0
module A where

import B

a = f y

=== A-1.0.1
module A where

import B

a = f (f y)

=== B-1.0.0
module B where

y = 1
b1 = 1
f x = x + 1

g x = x + 1



=== B-1.0.1
module B where

y = 2
b2 = 2
f x = x + 2

h x = x * 1



=== Main-Root
module Main where

import A
import B












































main =
  let lst = [y,b2]
      n = length lst
  in head lst

head xs = case xs of
  []     -> 0
  hh:rst -> hh

length xs = case xs of
  []     -> 0
  hh:rst -> 1 + length rst

Module (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 1 1 61 1, srcInfoPoints = [SrcSpan "./examples/Main.hs" 1 1 1 1,SrcSpan "./examples/Main.hs" 1 1 1 1,SrcSpan "./examples/Main.hs" 3 1 3 1,SrcSpan "./examples/Main.hs" 4 1 4 1,SrcSpan "./examples/Main.hs" 49 1 49 1,SrcSpan "./examples/Main.hs" 54 1 54 1,SrcSpan "./examples/Main.hs" 58 1 58 1,SrcSpan "./examples/Main.hs" 61 1 61 1,SrcSpan "./examples/Main.hs" 61 1 61 1]}) (Just (ModuleHead (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 1 1 1 18, srcInfoPoints = [SrcSpan "./examples/Main.hs" 1 1 1 7,SrcSpan "./examples/Main.hs" 1 13 1 18]}) (ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 1 8 1 12, srcInfoPoints = []}) "Main") Nothing Nothing)) [] [ImportDecl {importAnn = SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 3 1 3 9, srcInfoPoints = [SrcSpan "./examples/Main.hs" 3 1 3 7]}, importModule = ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 3 8 3 9, srcInfoPoints = []}) "A", importQualified = False, importSrc = False, importSafe = False, importPkg = Nothing, importAs = Nothing, importSpecs = Nothing},ImportDecl {importAnn = SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 4 1 4 9, srcInfoPoints = [SrcSpan "./examples/Main.hs" 4 1 4 7]}, importModule = ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 4 8 4 9, srcInfoPoints = []}) "B", importQualified = False, importSrc = False, importSafe = False, importPkg = Nothing, importAs = Nothing, importSpecs = Nothing}] [PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 49 1 52 14, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 49 1 49 5, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 49 1 49 5, srcInfoPoints = []}) "main")) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 49 6 52 14, srcInfoPoints = [SrcSpan "./examples/Main.hs" 49 6 49 7]}) (Let (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 3 52 14, srcInfoPoints = [SrcSpan "./examples/Main.hs" 50 3 50 6,SrcSpan "./examples/Main.hs" 52 3 52 5]}) (BDecls (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 7 51 21, srcInfoPoints = [SrcSpan "./examples/Main.hs" 50 7 50 7,SrcSpan "./examples/Main.hs" 51 7 51 7,SrcSpan "./examples/Main.hs" 52 3 52 0]}) [PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 7 50 19, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 7 50 10, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 7 50 10, srcInfoPoints = []}) "lst")) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 11 50 19, srcInfoPoints = [SrcSpan "./examples/Main.hs" 50 11 50 12]}) (List (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 13 50 19, srcInfoPoints = [SrcSpan "./examples/Main.hs" 50 13 50 14,SrcSpan "./examples/Main.hs" 50 15 50 16,SrcSpan "./examples/Main.hs" 50 18 50 19]}) [Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 14 50 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 14 50 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 14 50 15, srcInfoPoints = []}) "y")),Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 16 50 18, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 16 50 18, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 50 16 50 18, srcInfoPoints = []}) "b2"))])) Nothing,PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 7 51 21, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 7 51 8, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 7 51 8, srcInfoPoints = []}) "n")) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 9 51 21, srcInfoPoints = [SrcSpan "./examples/Main.hs" 51 9 51 10]}) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 11 51 21, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 11 51 17, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 11 51 17, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 11 51 17, srcInfoPoints = []}) "length"))) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 18 51 21, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 18 51 21, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 51 18 51 21, srcInfoPoints = []}) "lst"))))) Nothing]) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 52 6 52 14, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 52 6 52 10, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 52 6 52 10, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 52 6 52 10, srcInfoPoints = []}) "head"))) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 52 11 52 14, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 52 11 52 14, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 52 11 52 14, srcInfoPoints = []}) "lst")))))) Nothing,FunBind (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 1 56 15, srcInfoPoints = []}) [Match (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 1 56 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 1 54 5, srcInfoPoints = []}) "head") [PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 6 54 8, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 6 54 8, srcInfoPoints = []}) "xs")] (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 9 56 15, srcInfoPoints = [SrcSpan "./examples/Main.hs" 54 9 54 10]}) (Case (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 11 56 15, srcInfoPoints = [SrcSpan "./examples/Main.hs" 54 11 54 15,SrcSpan "./examples/Main.hs" 54 19 54 21,SrcSpan "./examples/Main.hs" 55 3 55 3,SrcSpan "./examples/Main.hs" 56 3 56 3,SrcSpan "./examples/Main.hs" 58 1 58 0]}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 16 54 18, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 16 54 18, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 54 16 54 18, srcInfoPoints = []}) "xs"))) [Alt (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 55 3 55 14, srcInfoPoints = []}) (PList (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 55 3 55 5, srcInfoPoints = [SrcSpan "./examples/Main.hs" 55 3 55 4,SrcSpan "./examples/Main.hs" 55 4 55 5]}) []) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 55 10 55 14, srcInfoPoints = [SrcSpan "./examples/Main.hs" 55 10 55 12]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 55 13 55 14, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 55 13 55 14, srcInfoPoints = []}) 0 "0"))) Nothing,Alt (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 3 56 15, srcInfoPoints = []}) (PInfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 3 56 9, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 3 56 5, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 3 56 5, srcInfoPoints = []}) "hh")) (Special (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 5 56 6, srcInfoPoints = []}) (Cons (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 5 56 6, srcInfoPoints = []}))) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 6 56 9, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 6 56 9, srcInfoPoints = []}) "rst"))) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 10 56 15, srcInfoPoints = [SrcSpan "./examples/Main.hs" 56 10 56 12]}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 13 56 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 13 56 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 56 13 56 15, srcInfoPoints = []}) "hh")))) Nothing])) Nothing],FunBind (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 1 60 27, srcInfoPoints = []}) [Match (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 1 60 27, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 1 58 7, srcInfoPoints = []}) "length") [PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 8 58 10, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 8 58 10, srcInfoPoints = []}) "xs")] (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 11 60 27, srcInfoPoints = [SrcSpan "./examples/Main.hs" 58 11 58 12]}) (Case (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 13 60 27, srcInfoPoints = [SrcSpan "./examples/Main.hs" 58 13 58 17,SrcSpan "./examples/Main.hs" 58 21 58 23,SrcSpan "./examples/Main.hs" 59 3 59 3,SrcSpan "./examples/Main.hs" 60 3 60 3,SrcSpan "./examples/Main.hs" 61 1 61 0]}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 18 58 20, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 18 58 20, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 58 18 58 20, srcInfoPoints = []}) "xs"))) [Alt (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 59 3 59 14, srcInfoPoints = []}) (PList (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 59 3 59 5, srcInfoPoints = [SrcSpan "./examples/Main.hs" 59 3 59 4,SrcSpan "./examples/Main.hs" 59 4 59 5]}) []) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 59 10 59 14, srcInfoPoints = [SrcSpan "./examples/Main.hs" 59 10 59 12]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 59 13 59 14, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 59 13 59 14, srcInfoPoints = []}) 0 "0"))) Nothing,Alt (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 3 60 27, srcInfoPoints = []}) (PInfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 3 60 9, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 3 60 5, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 3 60 5, srcInfoPoints = []}) "hh")) (Special (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 5 60 6, srcInfoPoints = []}) (Cons (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 5 60 6, srcInfoPoints = []}))) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 6 60 9, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 6 60 9, srcInfoPoints = []}) "rst"))) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 10 60 27, srcInfoPoints = [SrcSpan "./examples/Main.hs" 60 10 60 12]}) (InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 13 60 27, srcInfoPoints = []}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 13 60 14, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 13 60 14, srcInfoPoints = []}) 1 "1")) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 15 60 16, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 15 60 16, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 15 60 16, srcInfoPoints = []}) "+"))) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 17 60 27, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 17 60 23, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 17 60 23, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 17 60 23, srcInfoPoints = []}) "length"))) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 24 60 27, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 24 60 27, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "./examples/Main.hs" 60 24 60 27, srcInfoPoints = []}) "rst")))))) Nothing])) Nothing]]
=== Compilation order ===
B-1.0.1
B-1.0.0
A-1.0.1
A-1.0.0
Main-Root

===================================
=== Start compiling module B-1.0.1
===================================

=== AST (Syntax.Absyn) ===
module B where

y = 2
b2 = 2
f x = x + 2

h x = x * 1




=== Desugared AST (Syntax.Desugared) ===
module B where where
y = 2

b2 = 2

f = (\x.((+ x) 2))

h = (\x.((* x) 1))


=== Normalized AST (Syntax.Desugared) ===
module B where where
y = 2

b2 = 2

f = (\x.((+ x) 2))

h = (\x.((* x) 1))


=== AST (Syntax.VL) ===
module B where where
y = [2]

b2 = [2]

f = [(\[x].((+ [x]) [2]))]

h = [(\[x].((* [x]) [1]))]


=== AST (Syntax.VL), after duplicating external variables ===
module B where where
y = [2]

b2 = [2]

f = [(\[x].((+ [x]) [2]))]

h = [(\[x].((* [x]) [1]))]

[DEBUG] ct     : 
[DEBUG] ct'    : 
[DEBUG] ctdiff : 
[DEBUG] ctstart: 

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : {}
[DEBUG] Imported UEnv      : {}
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : {}
[DEBUG] Duplicated Imported UEnv        : {}
[DEBUG] Duplicated Imported Constraints : ⊤

[DEBUG] add duplicated constraints                 : 
⊤
[DEBUG] add duplicated external variable resources : 
{}

[DEBUG] Initial Counter     : 0

=== Type Inference (Syntax.VL) ===
y : Int@[a2]
|(TypeInf) {} |- 2 => (Int; (); ⊤)
(TypeInf) y:[a0]_(a1) |- [2] => (Int@[a2]; (); ⊤)
b2 : Int@[a6]
|(TypeInf) {} |- 2 => (Int; (); ⊤)
(TypeInf) b2:[a4]_(a5), y:[Int@[a2]]_(a3) |- [2] => (Int@[a6]; (); ⊤)
f : (Int@[a12] -> Int)@[a20]
|||(Kinding) |- a12 : Label
||||(Kinding) |- a13 : Type
||||(Kinding) |- a12 : Label
|||(PatSynt) a12 |- x ▷ (x:[a13]_(a12); ())
|||(TyUnify)  |- a13@[a12] ~ a11 ▷ (a11 ↦ a13@[a12])
||(PatSynt) - |- [x] ▷ (x:[a13]_(a12); (a11 ↦ a13@[a12]))
||||(TypeInf) x:[a13]_(a12) |- + => ((Int@[a14] -> (Int@[a15] -> Int)); (); ⊤)
||||||(Kinding) |- a12 : Label
|||||(TypeInf) x:[a13]_(a12) |- x => (a13; (); ⊤)
||||(TypeInf) x:[a13]_(a12) |- [x] => (a13@[a16]; (); (a16 ≤ a12))
||||||(TyUnify)  |- a13 ~ Int ▷ (a13 ↦ Int)
||||||(TyUnify)  |- a16 ~ a14 ▷ (a16 ↦ a14)
|||||(TyUnify)  |- a13@[a16] ~ Int@[a14] ▷ (a13 ↦ Int, a16 ↦ a14)
|||||(TyUnify)  |- (Int@[a15] -> Int) ~ a17 ▷ (a17 ↦ (Int@[a15] -> Int))
||||(TyUnify)  |- (Int@[a14] -> (Int@[a15] -> Int)) ~ (a13@[a16] -> a17) ▷ (a13 ↦ Int, a16 ↦ a14, a17 ↦ (Int@[a15] -> Int))
|||(TypeInf) x:[a13]_(a12) |- (+ [x]) => ((Int@[a15] -> Int); (a13 ↦ Int, a16 ↦ a14, a17 ↦ (Int@[a15] -> Int)); (a16 ≤ a12))
||||(TypeInf) {} |- 2 => (Int; (); ⊤)
|||(TypeInf) x:[a13]_(a12) |- [2] => (Int@[a18]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a18 ~ a15 ▷ (a18 ↦ a15)
||||(TyUnify)  |- Int@[a18] ~ Int@[a15] ▷ (a18 ↦ a15)
||||(TyUnify)  |- Int ~ a19 ▷ (a19 ↦ Int)
|||(TyUnify)  |- (Int@[a15] -> Int) ~ (Int@[a18] -> a19) ▷ (a18 ↦ a15, a19 ↦ Int)
||(TypeInf) x:[a13]_(a12) |- ((+ [x]) [2]) => (Int; (a17 ↦ (Int@[a15] -> Int), a13 ↦ Int, a16 ↦ a14, a18 ↦ a15, a19 ↦ Int); (a16 ≤ a12))
|(TypeInf) {} |- (\[x].((+ [x]) [2])) => ((Int@[a12] -> Int); (a17 ↦ (Int@[a15] -> Int), a13 ↦ Int, a11 ↦ Int@[a12], a16 ↦ a14, a18 ↦ a15, a19 ↦ Int); (a16 ≤ a12))
(TypeInf) b2:[Int@[a6]]_(a7), f:[a9]_(a10), y:[Int@[a2]]_(a8) |- [(\[x].((+ [x]) [2]))] => ((Int@[a12] -> Int)@[a20]; (a17 ↦ (Int@[a15] -> Int), a13 ↦ Int, a11 ↦ Int@[a12], a16 ↦ a14, a18 ↦ a15, a19 ↦ Int); (a16 ≤ a12))
h : (Int@[a27] -> Int)@[a35]
|||(Kinding) |- a27 : Label
||||(Kinding) |- a28 : Type
||||(Kinding) |- a27 : Label
|||(PatSynt) a27 |- x ▷ (x:[a28]_(a27); ())
|||(TyUnify)  |- a28@[a27] ~ a26 ▷ (a26 ↦ a28@[a27])
||(PatSynt) - |- [x] ▷ (x:[a28]_(a27); (a26 ↦ a28@[a27]))
||||(TypeInf) x:[a28]_(a27) |- * => ((Int@[a29] -> (Int@[a30] -> Int)); (); ⊤)
||||||(Kinding) |- a27 : Label
|||||(TypeInf) x:[a28]_(a27) |- x => (a28; (); ⊤)
||||(TypeInf) x:[a28]_(a27) |- [x] => (a28@[a31]; (); (a31 ≤ a27))
||||||(TyUnify)  |- a28 ~ Int ▷ (a28 ↦ Int)
||||||(TyUnify)  |- a31 ~ a29 ▷ (a31 ↦ a29)
|||||(TyUnify)  |- a28@[a31] ~ Int@[a29] ▷ (a28 ↦ Int, a31 ↦ a29)
|||||(TyUnify)  |- (Int@[a30] -> Int) ~ a32 ▷ (a32 ↦ (Int@[a30] -> Int))
||||(TyUnify)  |- (Int@[a29] -> (Int@[a30] -> Int)) ~ (a28@[a31] -> a32) ▷ (a28 ↦ Int, a31 ↦ a29, a32 ↦ (Int@[a30] -> Int))
|||(TypeInf) x:[a28]_(a27) |- (* [x]) => ((Int@[a30] -> Int); (a28 ↦ Int, a31 ↦ a29, a32 ↦ (Int@[a30] -> Int)); (a31 ≤ a27))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a28]_(a27) |- [1] => (Int@[a33]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a33 ~ a30 ▷ (a33 ↦ a30)
||||(TyUnify)  |- Int@[a33] ~ Int@[a30] ▷ (a33 ↦ a30)
||||(TyUnify)  |- Int ~ a34 ▷ (a34 ↦ Int)
|||(TyUnify)  |- (Int@[a30] -> Int) ~ (Int@[a33] -> a34) ▷ (a33 ↦ a30, a34 ↦ Int)
||(TypeInf) x:[a28]_(a27) |- ((* [x]) [1]) => (Int; (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))
|(TypeInf) {} |- (\[x].((* [x]) [1])) => ((Int@[a27] -> Int); (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a26 ↦ Int@[a27], a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))
(TypeInf) b2:[Int@[a6]]_(a22), f:[(Int@[a12] -> Int)@[a20]]_(a21), h:[a24]_(a25), y:[Int@[a2]]_(a23) |- [(\[x].((* [x]) [1]))] => ((Int@[a27] -> Int)@[a35]; (a32 ↦ (Int@[a30] -> Int), a28 ↦ Int, a26 ↦ Int@[a27], a31 ↦ a29, a33 ↦ a30, a34 ↦ Int); (a31 ≤ a27))

=== Inferred Types (Syntax.VL) ===
y : Int@[a2]
b2 : Int@[a6]
f : (Int@[a12] -> Int)@[a20]
h : (Int@[a27] -> Int)@[a35]

[DEBUG] Add global env : y : Int@[a2]
b2 : Int@[a6]
f : (Int@[a12] -> Int)@[a20]
h : (Int@[a27] -> Int)@[a35]
[DEBUG] Add global constraints : (a14 ≤ a12) and (a29 ≤ a27)
[DEBUG] Counter: 36
[DEBUG] globalConstraints:
(a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:


[DEBUG] List of modules not yet compiled:
B-1.0.0
A-1.0.1
A-1.0.0
Main-Root


===================================
=== Start compiling module B-1.0.0
===================================

=== AST (Syntax.Absyn) ===
module B where

y = 1
b1 = 1
f x = x + 1

g x = x + 1




=== Desugared AST (Syntax.Desugared) ===
module B where where
y = 1

b1 = 1

f = (\x.((+ x) 1))

g = (\x.((+ x) 1))


=== Normalized AST (Syntax.Desugared) ===
module B where where
y = 1

b1 = 1

f = (\x.((+ x) 1))

g = (\x.((+ x) 1))


=== AST (Syntax.VL) ===
module B where where
y = [1]

b1 = [1]

f = [(\[x].((+ [x]) [1]))]

g = [(\[x].((+ [x]) [1]))]


=== AST (Syntax.VL), after duplicating external variables ===
module B where where
y = [1]

b1 = [1]

f = [(\[x].((+ [x]) [1]))]

g = [(\[x].((+ [x]) [1]))]

[DEBUG] ct     : 
[DEBUG] ct'    : 
[DEBUG] ctdiff : 
[DEBUG] ctstart: 

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : {}
[DEBUG] Imported UEnv      : {}
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : {}
[DEBUG] Duplicated Imported UEnv        : {}
[DEBUG] Duplicated Imported Constraints : ⊤

[DEBUG] add duplicated constraints                 : 
⊤
[DEBUG] add duplicated external variable resources : 
{}

[DEBUG] Initial Counter     : 36

=== Type Inference (Syntax.VL) ===
y : Int@[a38]
|(TypeInf) {} |- 1 => (Int; (); ⊤)
(TypeInf) y:[a36]_(a37) |- [1] => (Int@[a38]; (); ⊤)
b1 : Int@[a42]
|(TypeInf) {} |- 1 => (Int; (); ⊤)
(TypeInf) b1:[a40]_(a41), y:[Int@[a38]]_(a39) |- [1] => (Int@[a42]; (); ⊤)
f : (Int@[a48] -> Int)@[a56]
|||(Kinding) |- a48 : Label
||||(Kinding) |- a49 : Type
||||(Kinding) |- a48 : Label
|||(PatSynt) a48 |- x ▷ (x:[a49]_(a48); ())
|||(TyUnify)  |- a49@[a48] ~ a47 ▷ (a47 ↦ a49@[a48])
||(PatSynt) - |- [x] ▷ (x:[a49]_(a48); (a47 ↦ a49@[a48]))
||||(TypeInf) x:[a49]_(a48) |- + => ((Int@[a50] -> (Int@[a51] -> Int)); (); ⊤)
||||||(Kinding) |- a48 : Label
|||||(TypeInf) x:[a49]_(a48) |- x => (a49; (); ⊤)
||||(TypeInf) x:[a49]_(a48) |- [x] => (a49@[a52]; (); (a52 ≤ a48))
||||||(TyUnify)  |- a49 ~ Int ▷ (a49 ↦ Int)
||||||(TyUnify)  |- a52 ~ a50 ▷ (a52 ↦ a50)
|||||(TyUnify)  |- a49@[a52] ~ Int@[a50] ▷ (a49 ↦ Int, a52 ↦ a50)
|||||(TyUnify)  |- (Int@[a51] -> Int) ~ a53 ▷ (a53 ↦ (Int@[a51] -> Int))
||||(TyUnify)  |- (Int@[a50] -> (Int@[a51] -> Int)) ~ (a49@[a52] -> a53) ▷ (a49 ↦ Int, a52 ↦ a50, a53 ↦ (Int@[a51] -> Int))
|||(TypeInf) x:[a49]_(a48) |- (+ [x]) => ((Int@[a51] -> Int); (a49 ↦ Int, a52 ↦ a50, a53 ↦ (Int@[a51] -> Int)); (a52 ≤ a48))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a49]_(a48) |- [1] => (Int@[a54]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a54 ~ a51 ▷ (a54 ↦ a51)
||||(TyUnify)  |- Int@[a54] ~ Int@[a51] ▷ (a54 ↦ a51)
||||(TyUnify)  |- Int ~ a55 ▷ (a55 ↦ Int)
|||(TyUnify)  |- (Int@[a51] -> Int) ~ (Int@[a54] -> a55) ▷ (a54 ↦ a51, a55 ↦ Int)
||(TypeInf) x:[a49]_(a48) |- ((+ [x]) [1]) => (Int; (a53 ↦ (Int@[a51] -> Int), a49 ↦ Int, a52 ↦ a50, a54 ↦ a51, a55 ↦ Int); (a52 ≤ a48))
|(TypeInf) {} |- (\[x].((+ [x]) [1])) => ((Int@[a48] -> Int); (a53 ↦ (Int@[a51] -> Int), a49 ↦ Int, a47 ↦ Int@[a48], a52 ↦ a50, a54 ↦ a51, a55 ↦ Int); (a52 ≤ a48))
(TypeInf) b1:[Int@[a42]]_(a43), f:[a45]_(a46), y:[Int@[a38]]_(a44) |- [(\[x].((+ [x]) [1]))] => ((Int@[a48] -> Int)@[a56]; (a53 ↦ (Int@[a51] -> Int), a49 ↦ Int, a47 ↦ Int@[a48], a52 ↦ a50, a54 ↦ a51, a55 ↦ Int); (a52 ≤ a48))
g : (Int@[a63] -> Int)@[a71]
|||(Kinding) |- a63 : Label
||||(Kinding) |- a64 : Type
||||(Kinding) |- a63 : Label
|||(PatSynt) a63 |- x ▷ (x:[a64]_(a63); ())
|||(TyUnify)  |- a64@[a63] ~ a62 ▷ (a62 ↦ a64@[a63])
||(PatSynt) - |- [x] ▷ (x:[a64]_(a63); (a62 ↦ a64@[a63]))
||||(TypeInf) x:[a64]_(a63) |- + => ((Int@[a65] -> (Int@[a66] -> Int)); (); ⊤)
||||||(Kinding) |- a63 : Label
|||||(TypeInf) x:[a64]_(a63) |- x => (a64; (); ⊤)
||||(TypeInf) x:[a64]_(a63) |- [x] => (a64@[a67]; (); (a67 ≤ a63))
||||||(TyUnify)  |- a64 ~ Int ▷ (a64 ↦ Int)
||||||(TyUnify)  |- a67 ~ a65 ▷ (a67 ↦ a65)
|||||(TyUnify)  |- a64@[a67] ~ Int@[a65] ▷ (a64 ↦ Int, a67 ↦ a65)
|||||(TyUnify)  |- (Int@[a66] -> Int) ~ a68 ▷ (a68 ↦ (Int@[a66] -> Int))
||||(TyUnify)  |- (Int@[a65] -> (Int@[a66] -> Int)) ~ (a64@[a67] -> a68) ▷ (a64 ↦ Int, a67 ↦ a65, a68 ↦ (Int@[a66] -> Int))
|||(TypeInf) x:[a64]_(a63) |- (+ [x]) => ((Int@[a66] -> Int); (a64 ↦ Int, a67 ↦ a65, a68 ↦ (Int@[a66] -> Int)); (a67 ≤ a63))
||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||(TypeInf) x:[a64]_(a63) |- [1] => (Int@[a69]; (); ⊤)
|||||(TyUnify)  |- Int ~ Int ▷ ()
|||||(TyUnify)  |- a69 ~ a66 ▷ (a69 ↦ a66)
||||(TyUnify)  |- Int@[a69] ~ Int@[a66] ▷ (a69 ↦ a66)
||||(TyUnify)  |- Int ~ a70 ▷ (a70 ↦ Int)
|||(TyUnify)  |- (Int@[a66] -> Int) ~ (Int@[a69] -> a70) ▷ (a69 ↦ a66, a70 ↦ Int)
||(TypeInf) x:[a64]_(a63) |- ((+ [x]) [1]) => (Int; (a68 ↦ (Int@[a66] -> Int), a64 ↦ Int, a67 ↦ a65, a69 ↦ a66, a70 ↦ Int); (a67 ≤ a63))
|(TypeInf) {} |- (\[x].((+ [x]) [1])) => ((Int@[a63] -> Int); (a68 ↦ (Int@[a66] -> Int), a64 ↦ Int, a62 ↦ Int@[a63], a67 ↦ a65, a69 ↦ a66, a70 ↦ Int); (a67 ≤ a63))
(TypeInf) b1:[Int@[a42]]_(a58), f:[(Int@[a48] -> Int)@[a56]]_(a57), g:[a60]_(a61), y:[Int@[a38]]_(a59) |- [(\[x].((+ [x]) [1]))] => ((Int@[a63] -> Int)@[a71]; (a68 ↦ (Int@[a66] -> Int), a64 ↦ Int, a62 ↦ Int@[a63], a67 ↦ a65, a69 ↦ a66, a70 ↦ Int); (a67 ≤ a63))

=== Inferred Types (Syntax.VL) ===
y : Int@[a38]
b1 : Int@[a42]
f : (Int@[a48] -> Int)@[a56]
g : (Int@[a63] -> Int)@[a71]

[DEBUG] Add global env : y : Int@[a38]
b1 : Int@[a42]
f : (Int@[a48] -> Int)@[a56]
g : (Int@[a63] -> Int)@[a71]
[DEBUG] Add global constraints : (a50 ≤ a48) and (a65 ≤ a63)
[DEBUG] Counter: 72

============================================
=== Bundling top-level symbols of module B
============================================
[DEBUG] Add bundled tenv        : b1:[Int]_(a72), b2:[Int]_(a73), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), y:[Int]_(a80)
[DEBUG] Add bundled uenv        : a72:Label, a73:Label, a74:Label, a75:Label, a76:Label, a77:Label, a78:Label, a79:Label, a80:Label
[DEBUG] Add bundled/global constraints : (((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))) and (a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}]) and (a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}]) and (((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}]))) and (a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}]) and (a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}])
[DEBUG] Add bundled constraints schemes : (b1,(a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}])), (b2,(a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}])), (f,(((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}])))), (g,(a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}])), (h,(a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}])), (y,(((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))))
[DEBUG] Counter     : 81
[DEBUG] globalConstraints:
(((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))) and (a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}]) and (a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}]) and (((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}]))) and (a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}]) and (a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
B
(b1,(a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}])), (b2,(a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}])), (f,(((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}])))), (g,(a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}])), (h,(a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}])), (y,(((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
A-1.0.1
A-1.0.0
Main-Root


===================================
=== Start compiling module A-1.0.1
===================================

=== AST (Syntax.Absyn) ===
module A where

import B

a = f (f y)


=== Desugared AST (Syntax.Desugared) ===
module A where where
a = (f (f y))


=== Normalized AST (Syntax.Desugared) ===
module A where where
a = (f (f y))


=== AST (Syntax.VL) ===
module A where where
a = [(f [(f [y])])]


=== AST (Syntax.VL), after duplicating external variables ===
module A where where
a = [(__f_0 [(__f_1 [__y_0])])]

[DEBUG] ct     : 
[DEBUG] ct'    : f->2, y->1
[DEBUG] ctdiff : f->2, y->1
[DEBUG] ctstart: f->0, y->0

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : b1:[Int]_(a72), b2:[Int]_(a73), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), y:[Int]_(a80)
[DEBUG] Imported UEnv      : a72:Label, a73:Label, a74:Label, a75:Label, a76:Label, a77:Label, a78:Label, a79:Label, a80:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __f_0:[(Int@[a75_0] -> Int)]_(a74_0), __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0), b1:[Int]_(a72), b2:[Int]_(a73), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78)
[DEBUG] Duplicated Imported UEnv        : a72:Label, a73:Label, a74_0:Label, a74_1:Label, a75_0:Label, a75_1:Label, a76:Label, a77:Label, a78:Label, a79:Label, a80_0:Label
[DEBUG] Duplicated Imported Constraints : (((a74_0 ≤ a56) and (a75_0 ≤ a48) and (a74_0 ≤ [{B:[1.0.0]}])) or ((a74_0 ≤ a20) and (a75_0 ≤ a12) and (a74_0 ≤ [{B:[1.0.1]}]))) and (((a74_1 ≤ a56) and (a75_1 ≤ a48) and (a74_1 ≤ [{B:[1.0.0]}])) or ((a74_1 ≤ a20) and (a75_1 ≤ a12) and (a74_1 ≤ [{B:[1.0.1]}]))) and (((a80_0 ≤ a38) and (a80_0 ≤ [{B:[1.0.0]}])) or ((a80_0 ≤ a2) and (a80_0 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(((a74_0 ≤ a56) and (a75_0 ≤ a48) and (a74_0 ≤ [{B:[1.0.0]}])) or ((a74_0 ≤ a20) and (a75_0 ≤ a12) and (a74_0 ≤ [{B:[1.0.1]}]))) and (((a74_1 ≤ a56) and (a75_1 ≤ a48) and (a74_1 ≤ [{B:[1.0.0]}])) or ((a74_1 ≤ a20) and (a75_1 ≤ a12) and (a74_1 ≤ [{B:[1.0.1]}]))) and (((a80_0 ≤ a38) and (a80_0 ≤ [{B:[1.0.0]}])) or ((a80_0 ≤ a2) and (a80_0 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__f_0 -> f
a74_0,
__f_1 -> f
a74_1,
__y_0 -> y
a80_0

[DEBUG] Initial Counter     : 81

=== Type Inference (Syntax.VL) ===
a : Int@[a87]
|||(Kinding) |- a74_0 : Label
||(TypeInf) __f_0:[(Int@[a75_0] -> Int)]_(a74_0), __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0) |- __f_0 => ((Int@[a75_0] -> Int); (); ⊤)
|||||(Kinding) |- a74_1 : Label
||||(TypeInf) __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0) |- __f_1 => ((Int@[a75_1] -> Int); (); ⊤)
||||||(Kinding) |- a80_0 : Label
|||||(TypeInf) __y_0:[Int]_(a80_0) |- __y_0 => (Int; (); ⊤)
||||(TypeInf) __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0) |- [__y_0] => (Int@[a83]; (); (a83 ≤ a80_0))
||||||(TyUnify)  |- Int ~ Int ▷ ()
||||||(TyUnify)  |- a83 ~ a75_1 ▷ (a83 ↦ a75_1)
|||||(TyUnify)  |- Int@[a83] ~ Int@[a75_1] ▷ (a83 ↦ a75_1)
|||||(TyUnify)  |- Int ~ a84 ▷ (a84 ↦ Int)
||||(TyUnify)  |- (Int@[a75_1] -> Int) ~ (Int@[a83] -> a84) ▷ (a83 ↦ a75_1, a84 ↦ Int)
|||(TypeInf) __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0) |- (__f_1 [__y_0]) => (Int; (a83 ↦ a75_1, a84 ↦ Int); (a83 ≤ a80_0))
||(TypeInf) __f_0:[(Int@[a75_0] -> Int)]_(a74_0), __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0) |- [(__f_1 [__y_0])] => (Int@[a85]; (a83 ↦ a75_1, a84 ↦ Int); (a83 ≤ a80_0) and (a85 ≤ a80_0) and (a85 ≤ a74_1))
||||(TyUnify)  |- Int ~ Int ▷ ()
||||(TyUnify)  |- a85 ~ a75_0 ▷ (a85 ↦ a75_0)
|||(TyUnify)  |- Int@[a85] ~ Int@[a75_0] ▷ (a85 ↦ a75_0)
|||(TyUnify)  |- Int ~ a86 ▷ (a86 ↦ Int)
||(TyUnify)  |- (Int@[a75_0] -> Int) ~ (Int@[a85] -> a86) ▷ (a85 ↦ a75_0, a86 ↦ Int)
|(TypeInf) __f_0:[(Int@[a75_0] -> Int)]_(a74_0), __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0) |- (__f_0 [(__f_1 [__y_0])]) => (Int; (a84 ↦ Int, a83 ↦ a75_1, a85 ↦ a75_0, a86 ↦ Int); (a83 ≤ a80_0) and (a85 ≤ a80_0) and (a85 ≤ a74_1))
(TypeInf) __f_0:[(Int@[a75_0] -> Int)]_(a74_0), __f_1:[(Int@[a75_1] -> Int)]_(a74_1), __y_0:[Int]_(a80_0), a:[a81]_(a82), b1:[Int]_(a72), b2:[Int]_(a73), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78) |- [(__f_0 [(__f_1 [__y_0])])] => (Int@[a87]; (a84 ↦ Int, a83 ↦ a75_1, a85 ↦ a75_0, a86 ↦ Int); (a83 ≤ a80_0) and (a85 ≤ a80_0) and (a85 ≤ a74_1) and (a87 ≤ a80_0) and (a87 ≤ a74_1) and (a87 ≤ a74_0))

=== Inferred Types (Syntax.VL) ===
a : Int@[a87]

[DEBUG] Add global env : a : Int@[a87]
[DEBUG] Add global constraints : (a75_1 ≤ a80_0) and (a75_0 ≤ a80_0) and (a75_0 ≤ a74_1) and (a87 ≤ a80_0) and (a87 ≤ a74_1) and (a87 ≤ a74_0)
[DEBUG] Counter: 88
[DEBUG] globalConstraints:
(a75_1 ≤ a80_0) and (a75_0 ≤ a80_0) and (a75_0 ≤ a74_1) and (a87 ≤ a80_0) and (a87 ≤ a74_1) and (a87 ≤ a74_0) and (((a74_0 ≤ a56) and (a75_0 ≤ a48) and (a74_0 ≤ [{B:[1.0.0]}])) or ((a74_0 ≤ a20) and (a75_0 ≤ a12) and (a74_0 ≤ [{B:[1.0.1]}]))) and (((a74_1 ≤ a56) and (a75_1 ≤ a48) and (a74_1 ≤ [{B:[1.0.0]}])) or ((a74_1 ≤ a20) and (a75_1 ≤ a12) and (a74_1 ≤ [{B:[1.0.1]}]))) and (((a80_0 ≤ a38) and (a80_0 ≤ [{B:[1.0.0]}])) or ((a80_0 ≤ a2) and (a80_0 ≤ [{B:[1.0.1]}]))) and (((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))) and (a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}]) and (a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}]) and (((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}]))) and (a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}]) and (a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
B
(b1,(a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}])), (b2,(a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}])), (f,(((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}])))), (g,(a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}])), (h,(a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}])), (y,(((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
A-1.0.0
Main-Root


===================================
=== Start compiling module A-1.0.0
===================================

=== AST (Syntax.Absyn) ===
module A where

import B

a = f y


=== Desugared AST (Syntax.Desugared) ===
module A where where
a = (f y)


=== Normalized AST (Syntax.Desugared) ===
module A where where
a = (f y)


=== AST (Syntax.VL) ===
module A where where
a = [(f [y])]


=== AST (Syntax.VL), after duplicating external variables ===
module A where where
a = [(__f_2 [__y_1])]

[DEBUG] ct     : f->2, y->1
[DEBUG] ct'    : f->3, y->2
[DEBUG] ctdiff : f->1, y->1
[DEBUG] ctstart: f->2, y->1

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : b1:[Int]_(a72), b2:[Int]_(a73), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), y:[Int]_(a80)
[DEBUG] Imported UEnv      : a72:Label, a73:Label, a74:Label, a75:Label, a76:Label, a77:Label, a78:Label, a79:Label, a80:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __f_2:[(Int@[a75_2] -> Int)]_(a74_2), __y_1:[Int]_(a80_1), b1:[Int]_(a72), b2:[Int]_(a73), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78)
[DEBUG] Duplicated Imported UEnv        : a72:Label, a73:Label, a74_2:Label, a75_2:Label, a76:Label, a77:Label, a78:Label, a79:Label, a80_1:Label
[DEBUG] Duplicated Imported Constraints : (((a74_2 ≤ a56) and (a75_2 ≤ a48) and (a74_2 ≤ [{B:[1.0.0]}])) or ((a74_2 ≤ a20) and (a75_2 ≤ a12) and (a74_2 ≤ [{B:[1.0.1]}]))) and (((a80_1 ≤ a38) and (a80_1 ≤ [{B:[1.0.0]}])) or ((a80_1 ≤ a2) and (a80_1 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(((a74_2 ≤ a56) and (a75_2 ≤ a48) and (a74_2 ≤ [{B:[1.0.0]}])) or ((a74_2 ≤ a20) and (a75_2 ≤ a12) and (a74_2 ≤ [{B:[1.0.1]}]))) and (((a80_1 ≤ a38) and (a80_1 ≤ [{B:[1.0.0]}])) or ((a80_1 ≤ a2) and (a80_1 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__f_2 -> f
a74_2,
__y_1 -> y
a80_1

[DEBUG] Initial Counter     : 88

=== Type Inference (Syntax.VL) ===
a : Int@[a92]
|||(Kinding) |- a74_2 : Label
||(TypeInf) __f_2:[(Int@[a75_2] -> Int)]_(a74_2), __y_1:[Int]_(a80_1) |- __f_2 => ((Int@[a75_2] -> Int); (); ⊤)
||||(Kinding) |- a80_1 : Label
|||(TypeInf) __y_1:[Int]_(a80_1) |- __y_1 => (Int; (); ⊤)
||(TypeInf) __f_2:[(Int@[a75_2] -> Int)]_(a74_2), __y_1:[Int]_(a80_1) |- [__y_1] => (Int@[a90]; (); (a90 ≤ a80_1))
||||(TyUnify)  |- Int ~ Int ▷ ()
||||(TyUnify)  |- a90 ~ a75_2 ▷ (a90 ↦ a75_2)
|||(TyUnify)  |- Int@[a90] ~ Int@[a75_2] ▷ (a90 ↦ a75_2)
|||(TyUnify)  |- Int ~ a91 ▷ (a91 ↦ Int)
||(TyUnify)  |- (Int@[a75_2] -> Int) ~ (Int@[a90] -> a91) ▷ (a90 ↦ a75_2, a91 ↦ Int)
|(TypeInf) __f_2:[(Int@[a75_2] -> Int)]_(a74_2), __y_1:[Int]_(a80_1) |- (__f_2 [__y_1]) => (Int; (a90 ↦ a75_2, a91 ↦ Int); (a90 ≤ a80_1))
(TypeInf) __f_2:[(Int@[a75_2] -> Int)]_(a74_2), __y_1:[Int]_(a80_1), a:[a88]_(a89), b1:[Int]_(a72), b2:[Int]_(a73), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78) |- [(__f_2 [__y_1])] => (Int@[a92]; (a90 ↦ a75_2, a91 ↦ Int); (a90 ≤ a80_1) and (a92 ≤ a80_1) and (a92 ≤ a74_2))

=== Inferred Types (Syntax.VL) ===
a : Int@[a92]

[DEBUG] Add global env : a : Int@[a92]
[DEBUG] Add global constraints : (a75_2 ≤ a80_1) and (a92 ≤ a80_1) and (a92 ≤ a74_2)
[DEBUG] Counter: 93

============================================
=== Bundling top-level symbols of module A
============================================
[DEBUG] Add bundled tenv        : a:[Int]_(a93)
[DEBUG] Add bundled uenv        : a93:Label
[DEBUG] Add bundled/global constraints : (((a93 ≤ a92) and (a93 ≤ [{A:[1.0.0]}])) or ((a93 ≤ a87) and (a93 ≤ [{A:[1.0.1]}])))
[DEBUG] Add bundled constraints schemes : (a,(((a93 ≤ a92) and (a93 ≤ [{A:[1.0.0]}])) or ((a93 ≤ a87) and (a93 ≤ [{A:[1.0.1]}]))))
[DEBUG] Counter     : 94
[DEBUG] globalConstraints:
(((a93 ≤ a92) and (a93 ≤ [{A:[1.0.0]}])) or ((a93 ≤ a87) and (a93 ≤ [{A:[1.0.1]}]))) and (a75_2 ≤ a80_1) and (a92 ≤ a80_1) and (a92 ≤ a74_2) and (((a74_2 ≤ a56) and (a75_2 ≤ a48) and (a74_2 ≤ [{B:[1.0.0]}])) or ((a74_2 ≤ a20) and (a75_2 ≤ a12) and (a74_2 ≤ [{B:[1.0.1]}]))) and (((a80_1 ≤ a38) and (a80_1 ≤ [{B:[1.0.0]}])) or ((a80_1 ≤ a2) and (a80_1 ≤ [{B:[1.0.1]}]))) and (a75_1 ≤ a80_0) and (a75_0 ≤ a80_0) and (a75_0 ≤ a74_1) and (a87 ≤ a80_0) and (a87 ≤ a74_1) and (a87 ≤ a74_0) and (((a74_0 ≤ a56) and (a75_0 ≤ a48) and (a74_0 ≤ [{B:[1.0.0]}])) or ((a74_0 ≤ a20) and (a75_0 ≤ a12) and (a74_0 ≤ [{B:[1.0.1]}]))) and (((a74_1 ≤ a56) and (a75_1 ≤ a48) and (a74_1 ≤ [{B:[1.0.0]}])) or ((a74_1 ≤ a20) and (a75_1 ≤ a12) and (a74_1 ≤ [{B:[1.0.1]}]))) and (((a80_0 ≤ a38) and (a80_0 ≤ [{B:[1.0.0]}])) or ((a80_0 ≤ a2) and (a80_0 ≤ [{B:[1.0.1]}]))) and (((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))) and (a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}]) and (a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}]) and (((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}]))) and (a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}]) and (a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
A
(a,(((a93 ≤ a92) and (a93 ≤ [{A:[1.0.0]}])) or ((a93 ≤ a87) and (a93 ≤ [{A:[1.0.1]}])))), B
(b1,(a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}])), (b2,(a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}])), (f,(((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}])))), (g,(a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}])), (h,(a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}])), (y,(((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
Main-Root


===================================
=== Start compiling module Main-Root
===================================

=== AST (Syntax.Absyn) ===
module Main where

import A
import B












































main =
  let lst = [y,b2]
      n = length lst
  in head lst

head xs = case xs of
  []     -> 0
  hh:rst -> hh

length xs = case xs of
  []     -> 0
  hh:rst -> 1 + length rst


=== Desugared AST (Syntax.Desugared) ===
module Main where where
main = ((\lst.((\n.(head lst)) (length lst))) [y, b2])

head = (\xs.(case xs of {[] -> 0; (hh : rst) -> hh}))

length = (\xs.(case xs of {[] -> 0; (hh : rst) -> ((+ 1) (length rst))}))


=== Normalized AST (Syntax.Desugared) ===
module Main where where
main = ((\lst.((\n.(head lst)) (length lst))) [y, b2])

head = (\xs.(case xs of {[] -> 0; (hh : rst) -> hh}))

length = (\xs.(case xs of {[] -> 0; (hh : rst) -> ((+ 1) (length rst))}))


=== AST (Syntax.VL) ===
module Main where where
main = ((\[lst].((\[n].(head [lst])) [(length [lst])])) [[y, b2]])

head = (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [hh]}))

length = (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [((+ [1]) [(length [rst])])]}))


=== AST (Syntax.VL), after duplicating external variables ===
module Main where where
main = ((\[lst].((\[n].(head [lst])) [(length [lst])])) [[__y_2, __b2_0]])

head = (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [hh]}))

length = (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [((+ [1]) [(length [rst])])]}))

[DEBUG] ct     : f->3, y->2
[DEBUG] ct'    : b2->1, f->3, head->0, length->0, y->3
[DEBUG] ctdiff : b2->1, f->0, head->0, length->0, y->1
[DEBUG] ctstart: b2->0, f->3, head->0, length->0, y->2

=== Importing Exteranal ModulesType (Syntax.VL) ===
[DEBUG] Imported TEnv      : a:[Int]_(a93), b1:[Int]_(a72), b2:[Int]_(a73), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), y:[Int]_(a80)
[DEBUG] Imported UEnv      : a72:Label, a73:Label, a74:Label, a75:Label, a76:Label, a77:Label, a78:Label, a79:Label, a80:Label, a93:Label
=== Duplicate External Symbols (Syntax.VL) ===
[DEBUG] Duplicated Imported TEnv        : __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78)
[DEBUG] Duplicated Imported UEnv        : a72:Label, a73_0:Label, a74:Label, a75:Label, a76:Label, a77:Label, a78:Label, a79:Label, a80_2:Label, a93:Label
[DEBUG] Duplicated Imported Constraints : (a73_0 ≤ a6) and (a73_0 ≤ [{B:[1.0.1]}]) and (((a80_2 ≤ a38) and (a80_2 ≤ [{B:[1.0.0]}])) or ((a80_2 ≤ a2) and (a80_2 ≤ [{B:[1.0.1]}])))

[DEBUG] add duplicated constraints                 : 
(a73_0 ≤ a6) and (a73_0 ≤ [{B:[1.0.1]}]) and (((a80_2 ≤ a38) and (a80_2 ≤ [{B:[1.0.0]}])) or ((a80_2 ≤ a2) and (a80_2 ≤ [{B:[1.0.1]}])))
[DEBUG] add duplicated external variable resources : 
__b2_0 -> b2
a73_0,
__y_2 -> y
a80_2

[DEBUG] Initial Counter     : 94

=== Type Inference (Syntax.VL) ===
main : Int@[a104]
|||(Kinding) |- a140 : Label
||||(Kinding) |- a141 : Type
||||(Kinding) |- a140 : Label
|||(PatSynt) a140 |- lst ▷ (lst:[a141]_(a140); ())
|||(TyUnify)  |- a141@[a140] ~ a139 ▷ (a139 ↦ a141@[a140])
||(PatSynt) - |- [lst] ▷ (lst:[a141]_(a140); (a139 ↦ a141@[a140]))
|||||(Kinding) |- a143 : Label
||||||(Kinding) |- a144 : Type
||||||(Kinding) |- a143 : Label
|||||(PatSynt) a143 |- n ▷ (n:[a144]_(a143); ())
|||||(TyUnify)  |- a144@[a143] ~ a142 ▷ (a142 ↦ a144@[a143])
||||(PatSynt) - |- [n] ▷ (n:[a144]_(a143); (a142 ↦ a144@[a143]))
||||||(Kinding) |- a136 : Label
|||||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140), main:[a137]_(a138), n:[a144]_(a143) |- head => (((List a103)@[a97] -> Int@[a104]); (); ⊤)
|||||||(Kinding) |- a140 : Label
||||||(TypeInf) lst:[a141]_(a140) |- lst => (a141; (); ⊤)
|||||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140), main:[a137]_(a138), n:[a144]_(a143) |- [lst] => (a141@[a145]; (); (a145 ≤ a140))
|||||||(TyUnify)  |- a141 ~ (List a103) ▷ (a141 ↦ (List a103))
|||||||(TyUnify)  |- a145 ~ a97 ▷ (a145 ↦ a97)
||||||(TyUnify)  |- a141@[a145] ~ (List a103)@[a97] ▷ (a141 ↦ (List a103), a145 ↦ a97)
||||||(TyUnify)  |- Int@[a104] ~ a146 ▷ (a146 ↦ Int@[a104])
|||||(TyUnify)  |- ((List a103)@[a97] -> Int@[a104]) ~ (a141@[a145] -> a146) ▷ (a141 ↦ (List a103), a145 ↦ a97, a146 ↦ Int@[a104])
||||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140), main:[a137]_(a138), n:[a144]_(a143) |- (head [lst]) => (Int@[a104]; (a141 ↦ (List a103), a145 ↦ a97, a146 ↦ Int@[a104]); (a145 ≤ a140))
|||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140), main:[a137]_(a138) |- (\[n].(head [lst])) => ((a144@[a143] -> Int@[a104]); (a141 ↦ (List a103), a142 ↦ a144@[a143], a145 ↦ a97, a146 ↦ Int@[a104]); (a145 ≤ a140))
||||||(Kinding) |- a135 : Label
|||||(TypeInf) length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140) |- length => (((List a120)@[a114] -> Int@[a121]); (); ⊤)
|||||||(Kinding) |- a140 : Label
||||||(TypeInf) lst:[a141]_(a140) |- lst => (a141; (); ⊤)
|||||(TypeInf) length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140) |- [lst] => (a141@[a147]; (); (a147 ≤ a140))
|||||||(TyUnify)  |- a141 ~ (List a120) ▷ (a141 ↦ (List a120))
|||||||(TyUnify)  |- a147 ~ a114 ▷ (a147 ↦ a114)
||||||(TyUnify)  |- a141@[a147] ~ (List a120)@[a114] ▷ (a141 ↦ (List a120), a147 ↦ a114)
||||||(TyUnify)  |- Int@[a121] ~ a148 ▷ (a148 ↦ Int@[a121])
|||||(TyUnify)  |- ((List a120)@[a114] -> Int@[a121]) ~ (a141@[a147] -> a148) ▷ (a141 ↦ (List a120), a147 ↦ a114, a148 ↦ Int@[a121])
||||(TypeInf) length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140) |- (length [lst]) => (Int@[a121]; (a141 ↦ (List a120), a147 ↦ a114, a148 ↦ Int@[a121]); (a147 ≤ a140))
|||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140), main:[a137]_(a138) |- [(length [lst])] => (Int@[a121]@[a149]; (a141 ↦ (List a120), a147 ↦ a114, a148 ↦ Int@[a121]); (a147 ≤ a140) and (a149 ≤ a140) and (a149 ≤ a135))
|||||(TyUnify)  |- Int@[a121] ~ a144 ▷ (a144 ↦ Int@[a121])
|||||(TyUnify)  |- a149 ~ a143 ▷ (a149 ↦ a143)
||||(TyUnify)  |- Int@[a121]@[a149] ~ a144@[a143] ▷ (a144 ↦ Int@[a121], a149 ↦ a143)
||||(TyUnify)  |- Int@[a104] ~ a150 ▷ (a150 ↦ Int@[a104])
|||(TyUnify)  |- (a144@[a143] -> Int@[a104]) ~ (Int@[a121]@[a149] -> a150) ▷ (a144 ↦ Int@[a121], a149 ↦ a143, a150 ↦ Int@[a104])
||||(TyUnify)  |- a103 ~ a120 ▷ (a103 ↦ a120)
|||(TyUnify)  |- (List a103) ~ (List a120) ▷ (a103 ↦ a120)
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), lst:[a141]_(a140), main:[a137]_(a138) |- ((\[n].(head [lst])) [(length [lst])]) => (Int@[a104]; (a146 ↦ Int@[a104], a148 ↦ Int@[a121], a103 ↦ a120, a141 ↦ (List a120), a144 ↦ Int@[a121], a142 ↦ Int@[a121]@[a143], a145 ↦ a97, a147 ↦ a114, a149 ↦ a143, a150 ↦ Int@[a104]); (a145 ≤ a140) and (a147 ≤ a140) and (a149 ≤ a140) and (a149 ≤ a135))
|(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), main:[a137]_(a138) |- (\[lst].((\[n].(head [lst])) [(length [lst])])) => (((List a120)@[a140] -> Int@[a104]); (a146 ↦ Int@[a104], a148 ↦ Int@[a121], a103 ↦ a120, a141 ↦ (List a120), a139 ↦ (List a120)@[a140], a142 ↦ Int@[a121]@[a143], a144 ↦ Int@[a121], a145 ↦ a97, a147 ↦ a114, a149 ↦ a143, a150 ↦ Int@[a104]); (a145 ≤ a140) and (a147 ≤ a140) and (a149 ≤ a140) and (a149 ≤ a135))
||||(Kinding) |- a80_2 : Label
|||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2) |- __y_2 => (Int; (); ⊤)
||||(Kinding) |- a73_0 : Label
|||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2) |- __b2_0 => (Int; (); ⊤)
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2) |- [__y_2, __b2_0] => ((List Int); (); ⊤)
|(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), main:[a137]_(a138) |- [[__y_2, __b2_0]] => ((List Int)@[a151]; (); (a151 ≤ a80_2) and (a151 ≤ a73_0))
||||(TyUnify)  |- Int ~ a120 ▷ (a120 ↦ Int)
|||(TyUnify)  |- (List Int) ~ (List a120) ▷ (a120 ↦ Int)
|||(TyUnify)  |- a151 ~ a140 ▷ (a151 ↦ a140)
||(TyUnify)  |- (List Int)@[a151] ~ (List a120)@[a140] ▷ (a120 ↦ Int, a151 ↦ a140)
||(TyUnify)  |- Int@[a104] ~ a152 ▷ (a152 ↦ Int@[a104])
|(TyUnify)  |- ((List a120)@[a140] -> Int@[a104]) ~ ((List Int)@[a151] -> a152) ▷ (a120 ↦ Int, a151 ↦ a140, a152 ↦ Int@[a104])
(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a136), length:[((List a120)@[a114] -> Int@[a121])]_(a135), main:[a137]_(a138) |- ((\[lst].((\[n].(head [lst])) [(length [lst])])) [[__y_2, __b2_0]]) => (Int@[a104]; (a146 ↦ Int@[a104], a148 ↦ Int@[a121], a103 ↦ a120, a150 ↦ Int@[a104], a120 ↦ Int, a139 ↦ (List Int)@[a140], a141 ↦ (List Int), a142 ↦ Int@[a121]@[a143], a144 ↦ Int@[a121], a145 ↦ a97, a147 ↦ a114, a149 ↦ a143, a151 ↦ a140, a152 ↦ Int@[a104]); (a145 ≤ a140) and (a147 ≤ a140) and (a149 ≤ a140) and (a149 ≤ a135) and (a151 ≤ a80_2) and (a151 ≤ a73_0))
head : ((List a103)@[a97] -> Int@[a104])
||(Kinding) |- a97 : Label
|||(Kinding) |- a98 : Type
|||(Kinding) |- a97 : Label
||(PatSynt) a97 |- xs ▷ (xs:[a98]_(a97); ())
||(TyUnify)  |- a98@[a97] ~ a96 ▷ (a96 ↦ a98@[a97])
|(PatSynt) - |- [xs] ▷ (xs:[a98]_(a97); (a96 ↦ a98@[a97]))
||||(Kinding) |- a97 : Label
|||(TypeInf) xs:[a98]_(a97) |- xs => (a98; (); ⊤)
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[a94]_(a95), xs:[a98]_(a97) |- [xs] => (a98@[a99]; (); (a99 ≤ a97))
|||(Kinding) |- a101 : Label
||||(TyUnify)  |- (List a103) ~ a102 ▷ (a102 ↦ (List a103))
|||(PatSynt) a101 |- [] ▷ ({}; (a102 ↦ (List a103)))
||||(TyUnify)  |- a102 ~ a98 ▷ (a102 ↦ a98)
||||(TyUnify)  |- a101 ~ a99 ▷ (a101 ↦ a99)
|||(TyUnify)  |- a102@[a101] ~ a98@[a99] ▷ (a101 ↦ a99, a102 ↦ a98)
|||(TyUnify)  |- (List a103) ~ a98 ▷ (a98 ↦ (List a103))
||(PatSynt) - |- [[]] ▷ ({}; (a101 ↦ a99, a102 ↦ (List a103), a102 ↦ (List a103), a98 ↦ (List a103)))
|||(TypeInf) {} |- 0 => (Int; (); ⊤)
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[a94]_(a95), xs:[a98]_(a97) |- [0] => (Int@[a104]; (); ⊤)
|||(Kinding) |- a106 : Label
|||||(Kinding) |- a108 : Type
|||||(Kinding) |- a106 : Label
||||(PatSynt) a106 |- hh ▷ (hh:[a108]_(a106); ())
||||||(Kinding) |- a108 : Type
|||||(Kinding) |- a108 : Type
|||||(Kinding) |- a106 : Label
||||(PatSynt) a106 |- rst ▷ (rst:[(List a108)]_(a106); ())
|||(PatSynt) a106 |- (hh : rst) ▷ (hh:[a108]_(a106), rst:[(List a108)]_(a106); ())
||||(TyUnify)  |- a107 ~ a98 ▷ (a107 ↦ a98)
||||(TyUnify)  |- a106 ~ a99 ▷ (a106 ↦ a99)
|||(TyUnify)  |- a107@[a106] ~ a98@[a99] ▷ (a106 ↦ a99, a107 ↦ a98)
||(PatSynt) - |- [(hh : rst)] ▷ (hh:[a108]_(a106), rst:[(List a108)]_(a106); (a106 ↦ a99, a107 ↦ a98))
||||(Kinding) |- a106 : Label
|||(TypeInf) hh:[a108]_(a106) |- hh => (a108; (); ⊤)
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[a94]_(a95), hh:[a108]_(a106), rst:[(List a108)]_(a106), xs:[a98]_(a97) |- [hh] => (a108@[a109]; (); (a109 ≤ a106))
|||(TyUnify)  |- a108 ~ Int ▷ (a108 ↦ Int)
|||(TyUnify)  |- a109 ~ a104 ▷ (a109 ↦ a104)
||(TyUnify)  |- a108@[a109] ~ Int@[a104] ▷ (a108 ↦ Int, a109 ↦ a104)
|(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[a94]_(a95), xs:[a98]_(a97) |- (case [xs] of {[[]] -> [0]; [(hh : rst)] -> [hh]}) => (Int@[a104]; (a101 ↦ a99, a102 ↦ (List a103), a102 ↦ (List a103), a106 ↦ a99, a107 ↦ (List a103), a108 ↦ Int, a109 ↦ a104, a98 ↦ (List a103)); (a99 ≤ a97) and (a109 ≤ a106))
(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[a94]_(a95) |- (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [hh]})) => (((List a103)@[a97] -> Int@[a104]); (a101 ↦ a99, a102 ↦ (List a103), a102 ↦ (List a103), a106 ↦ a99, a107 ↦ (List a103), a108 ↦ Int, a109 ↦ a104, a98 ↦ (List a103), a96 ↦ (List a103)@[a97]); (a99 ≤ a97) and (a109 ≤ a106))
length : ((List a120)@[a114] -> Int@[a121])
||(Kinding) |- a114 : Label
|||(Kinding) |- a115 : Type
|||(Kinding) |- a114 : Label
||(PatSynt) a114 |- xs ▷ (xs:[a115]_(a114); ())
||(TyUnify)  |- a115@[a114] ~ a113 ▷ (a113 ↦ a115@[a114])
|(PatSynt) - |- [xs] ▷ (xs:[a115]_(a114); (a113 ↦ a115@[a114]))
||||(Kinding) |- a114 : Label
|||(TypeInf) xs:[a115]_(a114) |- xs => (a115; (); ⊤)
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a110), length:[a111]_(a112), xs:[a115]_(a114) |- [xs] => (a115@[a116]; (); (a116 ≤ a114))
|||(Kinding) |- a118 : Label
||||(TyUnify)  |- (List a120) ~ a119 ▷ (a119 ↦ (List a120))
|||(PatSynt) a118 |- [] ▷ ({}; (a119 ↦ (List a120)))
||||(TyUnify)  |- a119 ~ a115 ▷ (a119 ↦ a115)
||||(TyUnify)  |- a118 ~ a116 ▷ (a118 ↦ a116)
|||(TyUnify)  |- a119@[a118] ~ a115@[a116] ▷ (a118 ↦ a116, a119 ↦ a115)
|||(TyUnify)  |- (List a120) ~ a115 ▷ (a115 ↦ (List a120))
||(PatSynt) - |- [[]] ▷ ({}; (a115 ↦ (List a120), a118 ↦ a116, a119 ↦ (List a120), a119 ↦ (List a120)))
|||(TypeInf) {} |- 0 => (Int; (); ⊤)
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a110), length:[a111]_(a112), xs:[a115]_(a114) |- [0] => (Int@[a121]; (); ⊤)
|||(Kinding) |- a123 : Label
|||||(Kinding) |- a125 : Type
|||||(Kinding) |- a123 : Label
||||(PatSynt) a123 |- hh ▷ (hh:[a125]_(a123); ())
||||||(Kinding) |- a125 : Type
|||||(Kinding) |- a125 : Type
|||||(Kinding) |- a123 : Label
||||(PatSynt) a123 |- rst ▷ (rst:[(List a125)]_(a123); ())
|||(PatSynt) a123 |- (hh : rst) ▷ (hh:[a125]_(a123), rst:[(List a125)]_(a123); ())
||||(TyUnify)  |- a124 ~ a115 ▷ (a124 ↦ a115)
||||(TyUnify)  |- a123 ~ a116 ▷ (a123 ↦ a116)
|||(TyUnify)  |- a124@[a123] ~ a115@[a116] ▷ (a123 ↦ a116, a124 ↦ a115)
||(PatSynt) - |- [(hh : rst)] ▷ (hh:[a125]_(a123), rst:[(List a125)]_(a123); (a123 ↦ a116, a124 ↦ a115))
|||||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- + => ((Int@[a126] -> (Int@[a127] -> Int)); (); ⊤)
||||||(TypeInf) {} |- 1 => (Int; (); ⊤)
|||||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- [1] => (Int@[a128]; (); ⊤)
|||||||(TyUnify)  |- Int ~ Int ▷ ()
|||||||(TyUnify)  |- a128 ~ a126 ▷ (a128 ↦ a126)
||||||(TyUnify)  |- Int@[a128] ~ Int@[a126] ▷ (a128 ↦ a126)
||||||(TyUnify)  |- (Int@[a127] -> Int) ~ a129 ▷ (a129 ↦ (Int@[a127] -> Int))
|||||(TyUnify)  |- (Int@[a126] -> (Int@[a127] -> Int)) ~ (Int@[a128] -> a129) ▷ (a128 ↦ a126, a129 ↦ (Int@[a127] -> Int))
||||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- (+ [1]) => ((Int@[a127] -> Int); (a128 ↦ a126, a129 ↦ (Int@[a127] -> Int)); ⊤)
|||||||(Kinding) |- a112 : Label
||||||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- length => (a111; (); ⊤)
||||||||(Kinding) |- a123 : Label
|||||||(TypeInf) rst:[(List a125)]_(a123) |- rst => ((List a125); (); ⊤)
||||||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- [rst] => ((List a125)@[a130]; (); (a130 ≤ a123))
||||||(TyUnify)  |- a111 ~ ((List a125)@[a130] -> a131) ▷ (a111 ↦ ((List a125)@[a130] -> a131))
|||||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- (length [rst]) => (a131; (a111 ↦ ((List a125)@[a130] -> a131)); (a130 ≤ a123))
||||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- [(length [rst])] => (a131@[a132]; (a111 ↦ ((List a125)@[a130] -> a131)); (a130 ≤ a123) and (a132 ≤ a123) and (a132 ≤ a112))
||||||(TyUnify)  |- a131 ~ Int ▷ (a131 ↦ Int)
||||||(TyUnify)  |- a132 ~ a127 ▷ (a132 ↦ a127)
|||||(TyUnify)  |- a131@[a132] ~ Int@[a127] ▷ (a131 ↦ Int, a132 ↦ a127)
|||||(TyUnify)  |- Int ~ a133 ▷ (a133 ↦ Int)
||||(TyUnify)  |- (Int@[a127] -> Int) ~ (a131@[a132] -> a133) ▷ (a131 ↦ Int, a132 ↦ a127, a133 ↦ Int)
|||(TypeInf) length:[a111]_(a112), rst:[(List a125)]_(a123) |- ((+ [1]) [(length [rst])]) => (Int; (a129 ↦ (Int@[a127] -> Int), a131 ↦ Int, a111 ↦ ((List a125)@[a130] -> Int), a128 ↦ a126, a132 ↦ a127, a133 ↦ Int); (a130 ≤ a123) and (a132 ≤ a123) and (a132 ≤ a112))
||(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a110), hh:[a125]_(a123), length:[a111]_(a112), rst:[(List a125)]_(a123), xs:[a115]_(a114) |- [((+ [1]) [(length [rst])])] => (Int@[a134]; (a129 ↦ (Int@[a127] -> Int), a131 ↦ Int, a111 ↦ ((List a125)@[a130] -> Int), a128 ↦ a126, a132 ↦ a127, a133 ↦ Int); (a130 ≤ a123) and (a132 ≤ a123) and (a132 ≤ a112) and (a134 ≤ a123) and (a134 ≤ a112))
|||(TyUnify)  |- Int ~ Int ▷ ()
|||(TyUnify)  |- a134 ~ a121 ▷ (a134 ↦ a121)
||(TyUnify)  |- Int@[a134] ~ Int@[a121] ▷ (a134 ↦ a121)
|(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a110), length:[a111]_(a112), xs:[a115]_(a114) |- (case [xs] of {[[]] -> [0]; [(hh : rst)] -> [((+ [1]) [(length [rst])])]}) => (Int@[a121]; (a129 ↦ (Int@[a127] -> Int), a131 ↦ Int, a111 ↦ ((List a125)@[a130] -> Int), a115 ↦ (List a120), a118 ↦ a116, a119 ↦ (List a120), a119 ↦ (List a120), a123 ↦ a116, a124 ↦ (List a120), a128 ↦ a126, a132 ↦ a127, a133 ↦ Int, a134 ↦ a121); (a116 ≤ a114) and (a130 ≤ a123) and (a132 ≤ a123) and (a132 ≤ a112) and (a134 ≤ a123) and (a134 ≤ a112))
(TypeInf) __b2_0:[Int]_(a73_0), __y_2:[Int]_(a80_2), a:[Int]_(a93), b1:[Int]_(a72), f:[(Int@[a75] -> Int)]_(a74), g:[(Int@[a77] -> Int)]_(a76), h:[(Int@[a79] -> Int)]_(a78), head:[((List a103)@[a97] -> Int@[a104])]_(a110), length:[a111]_(a112) |- (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [((+ [1]) [(length [rst])])]})) => (((List a120)@[a114] -> Int@[a121]); (a129 ↦ (Int@[a127] -> Int), a131 ↦ Int, a111 ↦ ((List a125)@[a130] -> Int), a115 ↦ (List a120), a113 ↦ (List a120)@[a114], a118 ↦ a116, a119 ↦ (List a120), a119 ↦ (List a120), a123 ↦ a116, a124 ↦ (List a120), a128 ↦ a126, a132 ↦ a127, a133 ↦ Int, a134 ↦ a121); (a116 ≤ a114) and (a130 ≤ a123) and (a132 ≤ a123) and (a132 ≤ a112) and (a134 ≤ a123) and (a134 ≤ a112))

=== Inferred Types (Syntax.VL) ===
main : Int@[a104]
head : ((List a103)@[a97] -> Int@[a104])
length : ((List a120)@[a114] -> Int@[a121])

[DEBUG] Add global env : main : Int@[a104]
head : ((List a103)@[a97] -> Int@[a104])
length : ((List a120)@[a114] -> Int@[a121])
[DEBUG] Add global constraints : (a97 ≤ a140) and (a114 ≤ a140) and (a143 ≤ a140) and (a143 ≤ a135) and (a140 ≤ a80_2) and (a140 ≤ a73_0) and (a99 ≤ a97) and (a104 ≤ a99) and (a116 ≤ a114) and (a130 ≤ a116) and (a127 ≤ a116) and (a127 ≤ a112) and (a121 ≤ a116) and (a121 ≤ a112)
[DEBUG] Counter: 153
[DEBUG] globalConstraints:
(a97 ≤ a140) and (a114 ≤ a140) and (a143 ≤ a140) and (a143 ≤ a135) and (a140 ≤ a80_2) and (a140 ≤ a73_0) and (a99 ≤ a97) and (a104 ≤ a99) and (a116 ≤ a114) and (a130 ≤ a116) and (a127 ≤ a116) and (a127 ≤ a112) and (a121 ≤ a116) and (a121 ≤ a112) and (a73_0 ≤ a6) and (a73_0 ≤ [{B:[1.0.1]}]) and (((a80_2 ≤ a38) and (a80_2 ≤ [{B:[1.0.0]}])) or ((a80_2 ≤ a2) and (a80_2 ≤ [{B:[1.0.1]}]))) and (((a93 ≤ a92) and (a93 ≤ [{A:[1.0.0]}])) or ((a93 ≤ a87) and (a93 ≤ [{A:[1.0.1]}]))) and (a75_2 ≤ a80_1) and (a92 ≤ a80_1) and (a92 ≤ a74_2) and (((a74_2 ≤ a56) and (a75_2 ≤ a48) and (a74_2 ≤ [{B:[1.0.0]}])) or ((a74_2 ≤ a20) and (a75_2 ≤ a12) and (a74_2 ≤ [{B:[1.0.1]}]))) and (((a80_1 ≤ a38) and (a80_1 ≤ [{B:[1.0.0]}])) or ((a80_1 ≤ a2) and (a80_1 ≤ [{B:[1.0.1]}]))) and (a75_1 ≤ a80_0) and (a75_0 ≤ a80_0) and (a75_0 ≤ a74_1) and (a87 ≤ a80_0) and (a87 ≤ a74_1) and (a87 ≤ a74_0) and (((a74_0 ≤ a56) and (a75_0 ≤ a48) and (a74_0 ≤ [{B:[1.0.0]}])) or ((a74_0 ≤ a20) and (a75_0 ≤ a12) and (a74_0 ≤ [{B:[1.0.1]}]))) and (((a74_1 ≤ a56) and (a75_1 ≤ a48) and (a74_1 ≤ [{B:[1.0.0]}])) or ((a74_1 ≤ a20) and (a75_1 ≤ a12) and (a74_1 ≤ [{B:[1.0.1]}]))) and (((a80_0 ≤ a38) and (a80_0 ≤ [{B:[1.0.0]}])) or ((a80_0 ≤ a2) and (a80_0 ≤ [{B:[1.0.1]}]))) and (((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))) and (a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}]) and (a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}]) and (((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}]))) and (a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}]) and (a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a14 ≤ a12) and (a29 ≤ a27)

[DEBUG] bundledConsSchemes:
A
(a,(((a93 ≤ a92) and (a93 ≤ [{A:[1.0.0]}])) or ((a93 ≤ a87) and (a93 ≤ [{A:[1.0.1]}])))), B
(b1,(a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}])), (b2,(a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}])), (f,(((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}])))), (g,(a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}])), (h,(a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}])), (y,(((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))))

[DEBUG] List of modules not yet compiled:
None

=== External Variables ===
__b2_0 Main-Root a73_0
__f_0 A-1.0.1 a74_0
__f_1 A-1.0.1 a74_1
__f_2 A-1.0.0 a74_2
__y_0 A-1.0.1 a80_0
__y_1 A-1.0.0 a80_1
__y_2 Main-Root a80_2

=== Constraints ===
(a97 ≤ a140) and (a114 ≤ a140) and (a143 ≤ a140) and (a143 ≤ a135) and (a140 ≤ a80_2) and (a140 ≤ a73_0) and (a99 ≤ a97) and (a104 ≤ a99) and (a116 ≤ a114) and (a130 ≤ a116) and (a127 ≤ a116) and (a127 ≤ a112) and (a121 ≤ a116) and (a121 ≤ a112) and (a73_0 ≤ a6) and (a73_0 ≤ [{B:[1.0.1]}]) and (((a80_2 ≤ a38) and (a80_2 ≤ [{B:[1.0.0]}])) or ((a80_2 ≤ a2) and (a80_2 ≤ [{B:[1.0.1]}]))) and (((a93 ≤ a92) and (a93 ≤ [{A:[1.0.0]}])) or ((a93 ≤ a87) and (a93 ≤ [{A:[1.0.1]}]))) and (a75_2 ≤ a80_1) and (a92 ≤ a80_1) and (a92 ≤ a74_2) and (((a74_2 ≤ a56) and (a75_2 ≤ a48) and (a74_2 ≤ [{B:[1.0.0]}])) or ((a74_2 ≤ a20) and (a75_2 ≤ a12) and (a74_2 ≤ [{B:[1.0.1]}]))) and (((a80_1 ≤ a38) and (a80_1 ≤ [{B:[1.0.0]}])) or ((a80_1 ≤ a2) and (a80_1 ≤ [{B:[1.0.1]}]))) and (a75_1 ≤ a80_0) and (a75_0 ≤ a80_0) and (a75_0 ≤ a74_1) and (a87 ≤ a80_0) and (a87 ≤ a74_1) and (a87 ≤ a74_0) and (((a74_0 ≤ a56) and (a75_0 ≤ a48) and (a74_0 ≤ [{B:[1.0.0]}])) or ((a74_0 ≤ a20) and (a75_0 ≤ a12) and (a74_0 ≤ [{B:[1.0.1]}]))) and (((a74_1 ≤ a56) and (a75_1 ≤ a48) and (a74_1 ≤ [{B:[1.0.0]}])) or ((a74_1 ≤ a20) and (a75_1 ≤ a12) and (a74_1 ≤ [{B:[1.0.1]}]))) and (((a80_0 ≤ a38) and (a80_0 ≤ [{B:[1.0.0]}])) or ((a80_0 ≤ a2) and (a80_0 ≤ [{B:[1.0.1]}]))) and (((a80 ≤ a38) and (a80 ≤ [{B:[1.0.0]}])) or ((a80 ≤ a2) and (a80 ≤ [{B:[1.0.1]}]))) and (a78 ≤ a35) and (a79 ≤ a27) and (a78 ≤ [{B:[1.0.1]}]) and (a76 ≤ a71) and (a77 ≤ a63) and (a76 ≤ [{B:[1.0.0]}]) and (((a74 ≤ a56) and (a75 ≤ a48) and (a74 ≤ [{B:[1.0.0]}])) or ((a74 ≤ a20) and (a75 ≤ a12) and (a74 ≤ [{B:[1.0.1]}]))) and (a73 ≤ a6) and (a73 ≤ [{B:[1.0.1]}]) and (a72 ≤ a42) and (a72 ≤ [{B:[1.0.0]}]) and (a50 ≤ a48) and (a65 ≤ a63) and (a14 ≤ a12) and (a29 ≤ a27)

=== Solver result ===
a104 : {B:[1.0.1]}
a112 : {}
a114 : {B:[1.0.1]}
a116 : {B:[1.0.1]}
a12 : {}
a121 : {B:[1.0.1]}
a127 : {B:[1.0.1]}
a130 : {B:[1.0.1]}
a135 : {}
a14 : {}
a140 : {B:[1.0.1]}
a143 : {B:[1.0.1]}
a2 : {}
a20 : {}
a27 : {}
a29 : {}
a35 : {}
a38 : {}
a42 : {}
a48 : {}
a50 : {}
a56 : {}
a6 : {}
a63 : {}
a65 : {}
a71 : {}
a72 : {B:[1.0.0]}
a73 : {B:[1.0.1]}
a73_0 : {B:[1.0.1]}
a74 : {B:[1.0.1]}
a74_0 : {B:[1.0.1]}
a74_1 : {B:[1.0.1]}
a74_2 : {B:[1.0.1]}
a75 : {}
a75_0 : {B:[1.0.1]}
a75_1 : {B:[1.0.1]}
a75_2 : {B:[1.0.1]}
a76 : {B:[1.0.0]}
a77 : {}
a78 : {B:[1.0.1]}
a79 : {}
a80 : {B:[1.0.1]}
a80_0 : {B:[1.0.1]}
a80_1 : {B:[1.0.1]}
a80_2 : {B:[1.0.1]}
a87 : {B:[1.0.1]}
a92 : {B:[1.0.1]}
a93 : {A:[1.0.1], B:[1.0.1]}
a97 : {B:[1.0.1]}
a99 : {B:[1.0.1]}

=== Labels of External Variables ===
__b2_0 : b2 : Main-Root : a73_0 : {B:[1.0.1]}
__f_0 : f : A-1.0.1 : a74_0 : {B:[1.0.1]}
__f_1 : f : A-1.0.1 : a74_1 : {B:[1.0.1]}
__f_2 : f : A-1.0.0 : a74_2 : {B:[1.0.1]}
__y_0 : y : A-1.0.1 : a80_0 : {B:[1.0.1]}
__y_1 : y : A-1.0.0 : a80_1 : {B:[1.0.1]}
__y_2 : y : Main-Root : a80_2 : {B:[1.0.1]}

=== Prettyprint ===

-- A v1.0.0
module A where
import B
a = f y

-- A v1.0.1
module A where
import B
a = f (f y)

-- B v1.0.0
module B where
y = 1
b1 = 1
f x = x + 1
g x = x + 1

-- B v1.0.1
module B where
y = 2
b2 = 2
f x = x + 2
h x = x * 1

-- Main vRoot
module Main where
import A
import B
main
  = let lst = [y, b2]
        n = length lst
      in head lst
head xs
  = case xs of
        [] -> 0
        hh : rst -> hh
length xs
  = case xs of
        [] -> 0
        hh : rst -> 1 + length rst

=== VLDecls ===
A-1.0.0 : a = [(__f_2 [__y_1])]
A-1.0.1 : a = [(__f_0 [(__f_1 [__y_0])])]
B-1.0.0 : b1 = [1], f = [(\[x].((+ [x]) [1]))], g = [(\[x].((+ [x]) [1]))], y = [1]
B-1.0.1 : b2 = [2], f = [(\[x].((+ [x]) [2]))], h = [(\[x].((* [x]) [1]))], y = [2]
Main-Root : head = (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [hh]})), length = (\[xs].(case [xs] of {[[]] -> [0]; [(hh : rst)] -> [((+ [1]) [(length [rst])])]})), main = ((\[lst].((\[n].(head [lst])) [(length [lst])])) [[__y_2, __b2_0]])

=== Extraction ===
(\ lst -> (\ n -> head lst) (length lst)) [2, 2]
